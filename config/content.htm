<h1>About</h1>
<p><a href="https://www.pragmaticlinux.com/2020/10/start-a-virtualbox-vm-on-boot-with-systemd/">https://www.pragmaticlinux.com/2020/10/start-a-virtualbox-vm-on-boot-with-systemd/</a> </p>
<p><a href="https://opensees.berkeley.edu/">https://opensees.berkeley.edu/</a> </p>
<p><a href="http://isrc.ccs.asia.edu.tw/www/essay/essay807.htm">如何成為傑出的工程師?</a> <a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/EfDrQ_1ha5RAsnzaaK8JUxcBaGoN959OLLZYOOVJ7V4cZg?e=U3Ykua">How to be a star engineer?</a></p>
<p><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/EVmX3uz3EuBGtdudUN8uBFwBO2qH7MmoQL714fLMVt9s2A?e=mGO1pf">Why Leadership works?</a></p>
<p><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/EaRYnRYpe4xCpv3jqSNNZfQB86SKipbKkJteIUs06MCYvA?e=ONnI9h">The Power of Followership.</a></p>
<p><a href="/downloads/windows_kms_ipv6.7z">windows_kms_ipv6.7z</a> (已經可以在純 IPv6 環境下執行 Windows 10 認證)</p>
<div style="text-align: right;">When chance itself can give no more, 'Tis easy to be true.</div>
<div style="text-align: right;">-- <a href="https://en.wikipedia.org/wiki/Sir_Charles_Sedley,_5th_Baronet">Charles Sedley</a></div>
<p>在 2022 Fall 的課程中, 採近全雲端的機械產品設計, 可以透過瀏覽器直接利用 stud 伺服器與 Onshape 執行程式編寫、內容管理與零組件設計繪圖, 唯獨機電模擬目前仍無法全部在瀏覽器中運行, 但至少已經可以透過 Three.js 與 Websocket 的整合, 讓 CoppeliaSim 的模擬場景在瀏覽器中呈現. 另外一個趨勢是, 除了電腦必須讓手機與平板在機械設計流程中扮演更重要的角色. 網站的內容維護與觀看更需考慮在電腦、手機與平板都能平順進行.</p>
<p>至於近端的機械產品設計流程則可以採 Solvespace 與 NX 完成零組件設計繪圖, 並以可攜程式環境編寫 server 端的應用程式, 用來控制零組件參數或進行機電模擬系統的控制等. 而 cmsimde 在近端也可以如遠端操作進行動態與靜態網頁的維護與展示.</p>
<p>靜態網站: <a href="https://mde.tw/demo/">https://mde.tw/demo/</a></p>
<p>倉儲: <a href="https://github.com/mdecycu/demo">https://github.com/mdecycu/demo</a></p>
<p>公佈欄網站: <a href="https://mde.tw/wcms">https://mde.tw/wcms</a></p>
<p></p>
<h2>手機使用問題</h2>
<p>新頁面很難輸入新的標題</p>
<p>是否新增指令按鈕, 在頁面頭或尾端加入 h1, h2 或 h3 標題, 選擇後跳出表單, 讓使用者輸入頁面標題與 level</p>
<h4>語音輸入</h4>
<p>cmsimde 動態網頁若能在手機瀏覽器中開啟, 就能使用語音輸入頁面內容</p>
<p>在這個頁面我們使用手機的語音辨識來輸入內容</p>
<p>一方面可以當作備忘錄來使用</p>
<p>再者可以把一些即時想到的事項</p>
<p>或者是未來即將處理的網站改版提醒放在這裡</p>
<p>頁面編輯之後，可以轉為靜態網頁，然後使用 acp 按鈕直接將改版內容提交到 GitHub Pages</p>
<h2>w5</h2>
<p>Under Windows:</p>
<ol>
<li data-aria-level="1" data-aria-posinset="1"><span data-contrast="auto"><span>所謂 Secure Shell 就是利用</span></span><a href="https://zh.m.wikipedia.org/zh-tw/%E5%85%AC%E5%BC%80%E5%AF%86%E9%92%A5%E5%8A%A0%E5%AF%86"><span data-contrast="auto"><span>公開金鑰加密</span></span></a><span data-contrast="auto"><span>, 在傳輸指令的過程對內容加密, 以保障資訊不被第三方取得, 當使用者在近端執行個人倉儲的動態網站後進行編輯改版, 並將動態網站轉為靜態網站, 希望將新的靜態網站內容送到 Github Pages  中的過程, 可以透過 SSH 協定建立一對數位鑰匙, 其公開鑰匙登錄到 Github SSH 設定區, 而私人鑰匙則放在近端電腦或隨身碟中, 當推送資料時只有與帳號下公鑰配對的私鑰擁有者, 有權限更改倉儲內容, 以下為在 Windows 操作系統採 SSH 對 Github 倉儲進行改版的設定過程.</span></span><span> </span></li>
<li data-aria-level="1" data-aria-posinset="2"><span data-contrast="auto"><span>確定  start.bat 啟動時已經設定 GIT_SSH 變數, 且與 plink.exe 連結, 表示設定之後的 Git  指令, 若採 SSH 協定與 Github 溝通, 近端的金鑰加密格式採用 Putty 所提供的 ppk 格式.</span></span><span> </span></li>
<li data-aria-level="1" data-aria-posinset="3"><span data-contrast="auto"><span>在 Windows 操作系統, 可以</span></span><span data-contrast="auto"><span>利用 Putty 的 puttygen.exe 產生 public key (OpenSSH 格式, 可登錄到 Github) 與 private key (ppk 格式), 且將 public key 放入 Github 帳號下 settings -&gt; SSH and GPG 設定區.</span></span><span> </span></li>
<li data-aria-level="1" data-aria-posinset="4"><span data-contrast="auto"><span>將 private key 存入隨身碟或 C 槽後,  送到自己的 onedrive 區, 當設定  putty.exe session 時必須在 session 使用授權區給定私鑰儲存位置.</span></span><span> </span></li>
<li data-aria-level="1" data-aria-posinset="5"><span data-contrast="auto"><span>利用 putty.exe 在電腦上設定一個 session 名稱, 且此一 session 名稱,</span></span><span data-contrast="auto"><span>代表三項資訊: a. 以 SSH  協定連結到 github.com (default port 為 22),  b. 決定需不需要使用 proxy (github.com 目前僅支援 IPv4), c. ppk 格式的 private key 位置.</span></span><span> </span></li>
</ol>
<p><span> </span></p>
<p><span data-contrast="auto"><span>利用 Putty session 以 SSH 協定 git clone 遠端倉儲, 假如前述設定都正確的話, 就可以在近端改版後, 將版本推向 Github.</span></span><span> </span></p>
<p><span> </span></p>
<p><span data-contrast="auto"><span>SSH  從 Github git clone  語法:</span></span><span> </span></p>
<p><span> </span></p>
<p><span data-contrast="auto"><span>git clone  --recurse-submodules  </span></span><a href="mailto:git@putty_session_name:github_account/repository_name.git"><span data-contrast="auto"><span>git@putty_session_name:github_account/repository_name.git</span></span></a><span> </span></p>
<p><span> </span></p>
<p><span data-contrast="auto"><span>請特別注意  putty_session_name 與  github_account 中間為 :<br/></span></span></p>
<hr/>
<p>Under Ubuntu</p>
<ol>
<li data-aria-level="1" data-aria-posinset="1"><span data-contrast="auto"><span>(登入 stud.cycu.org)利用 @nfu 電子郵箱收到的帳號與密碼, 登入 stud.cycu.org:  在命令列視窗, 以 ssh </span></span><span data-contrast="auto"><span>cad學號@stud.cycu.org , 輸入對應密後, 可以登入系統</span></span><span> </span></li>
<li data-aria-level="1" data-aria-posinset="2"><span data-contrast="auto"><span>請到 excel 檔案 </span></span><a href="https://nfuedu-my.sharepoint.com/:x:/g/personal/yen_nfu_edu_tw/ET-JZNPkNtZDhFiLt8BGZZ4BFMVV1HE73WQt1V44y6vnCQ"><span data-contrast="auto"><span>查詢</span></span></a><span data-contrast="auto"><span> stud.cycu.org 中與帳號對應的近端 (給 127.0.0.1 使用) 與遠端 (給 stud.cycu.org) 埠號</span></span><span> </span></li>
<li data-aria-level="1" data-aria-posinset="3"><span data-contrast="auto"><span>(透過 sftp 建立近端目錄與 stud.cycu.org 帳號下的對應)  開啟另一個命令列, 執行 sftp </span></span><a href="mailto:帳號@stud.cycu.org"><span data-contrast="auto"><span>帳號@stud.cycu.org</span></span></a><span data-contrast="auto"><span>   </span></span><span data-contrast="auto"><span>輸入對應密碼, 即可建立近端目錄與遠端系統目錄間的對應.</span></span><span> </span></li>
<li data-aria-level="1" data-aria-posinset="4"><span data-contrast="auto"><span>與在近端(Windows)利用  SSH 建立 public/private keys 流程相同, 必須在 Linux (Ubuntu) 利用 ssh-keygen 建立 keys. 所產生的 id_rsa 為 private key, 而 id_rsa.pub 為 public key, 都位於 .ssh 目錄下.</span></span><span> </span></li>
<li data-aria-level="1" data-aria-posinset="5"><span data-contrast="auto"><span>利用 sftp  進入 stud.cycu.org 後, cd 到 .ssh, 以 get id_rsa.pub 將 public key 取至  Windows 後, 送到 Github -&gt; Settings -&gt; SSH and GPG 設定區, 透過 new key 登錄公鑰.</span></span><span> </span></li>
<li data-aria-level="1" data-aria-posinset="6"><span data-contrast="auto"><span>接下來要下載  </span></span><a href="https://nfuedu.sharepoint.com/:u:/s/cad2022/EQlQii99WuZEl2_6YB_WK28BgZ3sBCVZnmLjLFJS5kXuPQ?e=0i7OKP"><span data-contrast="auto"><span>config</span></span></a><span data-contrast="auto"><span> 設定檔案,  以 sftp 放入 stud.cycu.org 主機的 .ssh 目錄中.</span></span><span> </span></li>
<li data-aria-level="1" data-aria-posinset="7"><span data-contrast="auto"><span>上面的  config  主要設定 SSH 協定對  github.com  連線時的代理主機, 但取下  cmsimde  子模組使用的是  https,  因此執行下列  git clone 時將會同時用到   SSH  與 https  協定,  因此除了  .ssh  目錄下要有  config  設定檔案外, 也必須同時在  .gitconfig  檔案中設定  http.proxy,  也就是以 git config --global http.proxy </span></span><a href="http://p42.cycu.org:3128"><span data-contrast="auto"><span>http://p42.cycu.org:3128</span></span></a> <span data-contrast="auto"><span>設定供 https 連線使用的代理主機, 並且以  git config --global  user.name 以及  git config --global  user.email 設定提交用的身分註記.</span></span><span> </span></li>
<li data-aria-level="1" data-aria-posinset="8"><span data-contrast="auto"><span>在 stud.cycu.org 中, 以 git clone --recurse-submodules  </span></span><a href="mailto:git@github.com:mdecad2022/site-個人github帳號.git"><span data-contrast="auto"><span>git@github.com:mdecad2022/site-個人github帳號.git</span></span></a><span data-contrast="auto"><span>   取下個人倉儲.</span></span><span> </span></li>
<li data-aria-level="1" data-aria-posinset="9"><span data-contrast="auto"><span>假如先前使用  git clone 並沒有取下  cmsimde 子模組內容, 只要在設定 https 代理主機後, 進入倉儲根目錄執行  git submodue update --init  --recursive  即可取下子模組內容.</span></span><span> </span></li>
<li data-aria-level="1" data-aria-posinset="10"><span data-contrast="auto"><span>接著下載 </span></span><a href="https://nfuedu.sharepoint.com/:u:/s/cad2022/EXD1ElHAqFNFk6LERfjLYNgBJ4mgWYGSRsRJhq2kQyxK1w?e=rEYXQB"><span data-contrast="auto"><span>server.py</span></span></a><span data-contrast="auto"><span>, 在 Windows 編輯 </span></span><a href="https://nfuedu.sharepoint.com/:u:/s/cad2022/EXD1ElHAqFNFk6LERfjLYNgBJ4mgWYGSRsRJhq2kQyxK1w?e=rEYXQB"><span data-contrast="auto"><span>server.py</span></span></a><span data-contrast="auto"><span>, 將個人分配到的 9xxxx 埠號填入後存檔, 以 sftp 放入上列取下的倉儲根目錄.</span></span><span> </span></li>
<li data-aria-level="1" data-aria-posinset="11"><span data-contrast="auto"><span>在 stud.cycu.org 系統中, 進入倉儲 (site-github帳號) 後, 執行 python3 server.py, 就可啟用動態網站.</span></span><span> </span></li>
<li data-aria-level="1" data-aria-posinset="12"><span data-contrast="auto"><span>設定完成後, 各學員將會有一個廣域網路上的動態網站 (取代 Replit 上的動態網站), </span></span><a href="https://stud.cycu.org:8xxxx"><span data-contrast="auto"><span>https://stud.cycu.org:8xxxx</span></span></a><span data-contrast="auto"><span>   看到個人的動態網站.</span></span><span> </span></li>
<li data-aria-level="1" data-aria-posinset="13"><span data-contrast="auto"><span>動態網站改版後, 轉為靜態, 必須透過 source </span></span><a href="https://nfuedu.sharepoint.com/:u:/s/cad2022/EZn5-jIdQ3pMmi_QxSVWWoYBHvcEtgUrAGCPiIlPyDQ6sw?e=9mc7rR"><span data-contrast="auto"><span>acp</span></span></a><span data-contrast="auto"><span> 以 SSH 將改版內容送回 github. (必須利用 chmod u+x acp 將 acp  檔案屬性改為對  user 可以 execute (也就是 x 屬性).</span></span><span> </span></li>
<li data-aria-level="1" data-aria-posinset="14"><span data-contrast="auto"><span>執行 source acp  "提交字串" 之前必須要 git config  --global user.name, </span></span><span data-contrast="auto"><span>git config  --global user.email, </span></span><span data-contrast="auto"><span>git config  --global http.proxy</span></span><span> </span></li>
<li data-aria-level="1" data-aria-posinset="15"><span data-contrast="auto"><span>上述採用指令模式對  server sftp 也可以利用  </span></span><a href="https://portableapps.com/apps/internet/filezilla_portable"><span data-contrast="auto"><span>Filezilla portable</span></span></a><span data-contrast="auto"><span>, 以圖形介面完成. 而 ssh 也可以透過  putty.exe 執行遠端登入.</span></span><span> </span></li>
</ol>
<p><span>config under .ssh 目錄:</span></p>
<p><span>Host 就是 .ssh/config 設定的對應 session 名稱, 此處若 Host 設為 demo, 則 SSH 對應的 .git/config 中的 URL 就必須使用 <a href="mailto:git@demo:mdecad2022/site-scrum-1.git,">git@demo:mdecad2022/site-scrum-1.git,</a> demo 就是 Host, Port 則是隨後的 %p, 也就是 SSH 協定的內建 port 22, %h 則是 Hostname, 也就是 github.com</span></p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">Host demo
User git
Hostname github.com
ProxyCommand /usr/bin/ncat --proxy p42.cycu.org:3128 --proxy-type http %h %p</pre>
<p><span data-contrast="auto"><span></span></span></p>
<p><span data-contrast="auto"><span>2a 在一台遠端 server, 執行個人倉儲的動態網頁.</span></span><span> </span></p>
<p><span> </span></p>
<ol>
<li data-aria-level="2" data-aria-posinset="1"><span data-contrast="auto"><span>Login to<span> </span></span></span><a href="https://mail.nfu.edu.tw/"><span data-contrast="auto"><span>https://mail.nfu.edu.tw</span></span></a><span data-contrast="auto"><span>  -  查看登入 stud.cycu.org 伺服器的帳號密碼, 帳號為 cad+學號, 密碼為四個字元, 包括數字與小寫英文字母</span></span><span> </span></li>
<li data-aria-level="2" data-aria-posinset="2"><span data-contrast="auto"><span>請到 excel 檔案<span> </span></span></span><a href="https://nfuedu-my.sharepoint.com/:x:/g/personal/yen_nfu_edu_tw/ET-JZNPkNtZDhFiLt8BGZZ4BFMVV1HE73WQt1V44y6vnCQ"><span data-contrast="auto"><span>查詢</span></span></a><span data-contrast="auto"><span><span> </span>stud.cycu.org 中與帳號對應的近端 (給 127.0.0.1 使用, 9 開頭的 port) 與遠端 (給 stud.cycu.org, 8 開頭的 port) 埠號</span></span><span> </span></li>
<li data-aria-level="2" data-aria-posinset="3"><span data-contrast="auto"><span>修改可攜 Python 3.10.6 start.bat, 蓋掉第三行後重新啟動, 目的希望將操作系統的命令搜尋路徑放在可攜目錄搜尋路徑之後.</span></span><span> </span></li>
<li data-aria-level="2" data-aria-posinset="4"><span data-contrast="auto"><span>重新啟動可攜程式環境, 在其中一個命令列, ssh <span> </span></span></span><a href="mailto:cad+%E5%AD%B8%E8%99%9F@stud.cycu.org"><span data-contrast="auto"><span>cad+學號@stud.cycu.org</span></span></a><span data-contrast="auto"><span>, 表示要使用 secure shell 遠端登入到 stud.cycu.org, 這是一台 Linux 主機, 安裝 Ubuntu 22.04 Server.(若使用的網路連線協定並無 IPv6,  可將系統的 proxy 設為 140.130.17.4:3128 kmolab/kmolab)</span></span><span> </span></li>
<li data-aria-level="2" data-aria-posinset="5"><span data-contrast="auto"><span>在 ssh 登入畫面, 以 ssh-keygen 建立 key pairs, .ssh/id_rsa 為 private key, id_rsa.pub 為 public key</span></span><span> </span></li>
<li data-aria-level="2" data-aria-posinset="6"><span data-contrast="auto"><span>設法利用 Filezilla, 以 sftp 安全的(Secure)檔案(File)傳輸(Transmission)協定(Protocol), 與 stud.cycu.org 伺服器連結.</span></span><span> </span></li>
<li data-aria-level="2" data-aria-posinset="7"><span data-contrast="auto"><span>利用  Filezilla sftp 取下 id_rsa.pub, 登錄至 Github 帳號下的 Setting - &gt;  SSH and GPG keys.</span></span><span> </span></li>
<li data-aria-level="2" data-aria-posinset="8"><span data-contrast="auto"><span>對  server sftp 也可以利用 <span> </span></span></span><a href="https://portableapps.com/apps/internet/filezilla_portable"><span data-contrast="auto"><span>Filezilla portable</span></span></a><span data-contrast="auto"><span>, 以圖形介面完成. 而 ssh 也可以透過  putty.exe 執行遠端登入.</span></span><span> </span></li>
<li data-aria-level="2" data-aria-posinset="9"><span data-contrast="auto"><span>接下來要下載 <span> </span></span></span><a href="https://nfuedu.sharepoint.com/:u:/s/cad2022/EQlQii99WuZEl2_6YB_WK28BgZ3sBCVZnmLjLFJS5kXuPQ?e=0i7OKP"><span data-contrast="auto"><span>config</span></span></a><span data-contrast="auto"><span><span> </span>設定檔案,  以 sftp 放入 stud.cycu.org 主機的 .ssh 目錄中.</span></span><span> </span></li>
<li data-aria-level="2" data-aria-posinset="10"><span data-contrast="auto"><span>接下來要在  Ubuntu (也就是 stud.cycu.org 這台主機所安裝的操作系統) 中, 設定 .gitconfig, 總共包含三項設定: git config --global user.name "scrum-1", git config --global user.email  "scrum1@mde.tw"   以及 git config --global http.proxy http://p42.cycu.org:3128, 這三個設定必須在 ssh 登入畫面中執行, 設定完成檔案會存入帳號根目錄中的 .gitconfig</span></span><span> </span></li>
<li data-aria-level="2" data-aria-posinset="11"><span data-contrast="auto"><span>利用  git clone --recurse-submodules <span> </span></span></span><a href="mailto:git@demo:mdecad2022/site-scrum-1.git"><span data-contrast="auto"><span>git@demo:mdecad2022/site-scrum-1.git</span></span></a><span data-contrast="auto"><span>  demo</span></span><span> </span></li>
<li data-aria-level="2" data-aria-posinset="12"><span data-contrast="auto"><span>接著下載<span> </span></span></span><a href="https://nfuedu.sharepoint.com/:u:/s/cad2022/EXD1ElHAqFNFk6LERfjLYNgBJ4mgWYGSRsRJhq2kQyxK1w?e=rEYXQB"><span data-contrast="auto"><span>server.py</span></span></a><span data-contrast="auto"><span>, 在 Windows 編輯<span> </span></span></span><a href="https://nfuedu.sharepoint.com/:u:/s/cad2022/EXD1ElHAqFNFk6LERfjLYNgBJ4mgWYGSRsRJhq2kQyxK1w?e=rEYXQB"><span data-contrast="auto"><span>server.py</span></span></a><span data-contrast="auto"><span>, 將個人分配到的 9xxxx 埠號填入後存檔, 以 sftp 放入上列取下的倉儲根目錄.</span></span><span> </span></li>
<li data-aria-level="2" data-aria-posinset="13"><span data-contrast="auto"><span>登入  Ubuntu 後, 會使用的指令: pwd 代表 print working directory, clear -  清除螢幕, cd - 更換目錄, ls -l 列出目錄詳細內容, chmod u+x<span> </span></span></span><a href="https://nfuedu.sharepoint.com/:u:/s/cad2022/EZn5-jIdQ3pMmi_QxSVWWoYBHvcEtgUrAGCPiIlPyDQ6sw?e=9mc7rR"><span data-contrast="auto"><span>acp</span></span></a><span data-contrast="auto"><span><span> </span>表示讓 user 可以 execute acp script (能夠讓使用者以 source acp 加上提交字串進行 git add, git commit, git push, 如何在 Windows 執行 acp.bat 加上提交字串.</span></span><span> </span></li>
</ol>
<p></p>
<h2>cmsimde</h2>
<p>Online IDE for developing cmsimde?</p>
<p>script editor</p>
<p>web-based restart server.py</p>
<hr/>
<p>能不能將 Blog and Reveal.js 也同動態網站, 直接在線上進行編輯改版?</p>
<p>能不能將 SSH 設定完成後, 直接在線上 acp? (已經完成) 可以透過 user.py 以 blueprint 架構延伸.</p>
<p><a href="/user/threegear">https://stud.cycu.org:8000/user/threegear</a></p>
<p>blog 編輯及轉檔網際化</p>
<p>簡報編輯網際化</p>
<p>Brython three.js based stl viewer</p>
<hr/>
<p>stud.cycu.org 目前是透過不同的 port 讓多用戶能在同一台電腦伺服器上運行動態網站, 而 Replit 或其他商用雲端系統的做法則是加入 dns 的動態設定, 讓每一位用戶可以各自擁有獨一的 domain name, 然後經由此一 domain name 啟用動態網站.</p>
<p>實際的可行作法是讓 demo 用戶在 stud.cycu.org 主機上擁有 demo.stud.cycu.org 或 demo.cycu.org 網域名稱的使用權, 然後當使用者在其帳號下的倉儲執行某一特定的主倉儲動態網站時, 以 demo.cycu.org 啟動, 若執行其帳號下的另一個名稱為 wcms 的倉儲動態網站時, 則以 wcms.demo.cycu.org 啟動, 然後依此類推.</p>
<p>目前 cadlab 總共管理 mde.nfu.edu.tw 與 eng.nfu.edu.tw 等兩個網域的 dns servers, 因此就網路技術層面而言, 上述建構如 Replit 般的網際應用程式服務是可行的. 較為簡單的做法是直接在 dns server 上建立此一服務.</p>
<p>若要跨 server 建立上述服務, 則 server 間仍需透過類似 Websocket 程式變數的派送, 並在使用者建立帳號後, 便直接在 dns 伺服器上登錄其使用權, 且在同一台電腦的 IPv6 address 上利用 CNAME 分辨各用戶所屬的 domain, 然後在後續伺服器設定時採用.</p>
<h3>手機專用</h3>
<p>為了讓手機上的照片或語音輸入能夠使用順暢，上傳的照片要能讓使用者更改檔名，並且讓使用者選擇處理相片大小或進行相關編輯。</p>
<p>Reference:</p>
<p style="padding-left: 30px;"><a href="https://github.com/nhn/tui.image-editor">https://github.com/nhn/tui.image-editor</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/viliusle/miniPaint">https://github.com/viliusle/miniPaint</a></p>
<p>另外一項可能的功能是，當使用者在編輯模式下，可直接選擇將拍攝的照片插入頁面中。</p>
<p>並且針對特定頁面中使用者已經輸入的照片檔案，選擇送至伺服器進行影像辨識，並將結果自動嵌入頁面。</p>
<h3>CMS 改版</h3>
<p><a href="https://github.com/mdecycu/cmsimde/blob/master/static/axuploader.js">https://github.com/mdecycu/cmsimde/blob/master/static/axuploader.js</a></p>
<p>1. 其實完成 image upload 之後, 檔案已經在 server 端, 因此可以利用 Python 處理手機所上傳的圖片檔案. 使用者之後就可以直接在圖片上加註說明文字.</p>
<p>2. 另外一個重點是, 當 server 收到一組圖檔後, 是否需要進行 OCR 辨識及零件尺寸辨識.</p>
<p><a href="https://stackoverflow.com/questions/31797867/invoke-brython-function-from-javascript">python 3.x - Invoke Brython function from JavaScript - Stack Overflow</a></p>
<p><a href="https://link.springer.com/book/10.1007/978-1-4842-4395-4">Beginning Javascript</a> (2019)</p>
<p style="padding-left: 30px;">Introduction to Javascript</p>
<p style="padding-left: 30px;">Javascript and Debelopment Tools</p>
<p style="padding-left: 30px;">Javascript Variables</p>
<p style="padding-left: 30px;">Javascript Objects and Arrays</p>
<p style="padding-left: 30px;">Javascript Functions and Context</p>
<p style="padding-left: 30px;">Javascript and Events</p>
<p style="padding-left: 30px;">Javascript and Programming Paradigms</p>
<p style="padding-left: 30px;">Javascript and Debugging</p>
<p><a href="https://link.springer.com/book/10.1007/978-1-4842-5394-6">Javascript Next</a> (2019)</p>
<p><a href="https://link.springer.com/book/10.1007/978-1-4842-0787-1">Pratical JQuery</a> (2015)</p>
<p><a href="https://link.springer.com/book/10.1007/978-1-4842-3027-5">Beginning JQuery</a> (2017)</p>
<h3>upload</h3>
<p><a href="https://nfuedu.sharepoint.com/:b:/s/cp20222/EY9D-5Mc0ORLm9GldNEThY0BmHpDyOtiewHLdy1C3N5U0w?e=gyxcwf">2012 Pro JQuery</a> (for @nfu users only)</p>
<p><a href="https://nfuedu.sharepoint.com/:b:/s/cp20222/EZEeL8lMZDRGs4EXQlqW_DEBiR9myLoLk4rp9xapGPjNcg?e=lDL8FS">2015 Pro JQuery</a> (for @nfu users only)</p>
<p><a href="https://nfuedu.sharepoint.com/:b:/s/cp20222/EYD_ezXKPblEvR1lATxbe7QBX0YWuj61kaY_ckx_9EP6tQ?e=DEMJYr">2017 Beginning JQuery</a> (for @nfu users only)</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">/*!
 * jQuery AXuploader
 * Alban Xhaferllari
 * albanx@gmail.com
 * Copyright 2010, AUTHORS.txt (http://www.albanx.com)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * 
 */
// 2013.08.21 Yen modified Chrome file append error

(function($)
{
	var methods =
	{
		init : function(options)
		{

    	    return this.each(function() 
    	    {
    	        var settings = {
        	      'remotePath' : 'js/',
        	      'url':'phplibs/uploadfiles.php',
        	      'data':'',
        	      'async':true,
        	      'maxFiles':9999,
        	      'allowExt':['all'],
        	      'showSize':'Mb',
        	      'success':function(respTxt,fileName) {},
        	      'finish':function(respTxt,filesName) {},
        	      'error':function(e){},
        	      'GIFprogress':'',
        	      'enable':true,
        	      'chunkSize':1024*1024//default 1Mb
    	        };

				var _this=this;
				if(options)	$.extend(settings,options);
				var allowExt=settings.allowExt.join('|').toLowerCase();

/*================================================================================*\
				 Test if support pure ajax upload
				\*================================================================================*/
				var _browse = document.createElement('input');
				_browse.type = 'file'; 
				_browse.name='ax-files[]';
			    var isAjaxUpload=('multiple' in _browse &amp;&amp;  typeof File != "undefined" &amp;&amp;  typeof (new XMLHttpRequest()).upload != "undefined" );
			   // isAjaxUpload=false;

				/*================================================================================*\
				 helper variables
				\*================================================================================*/
			    var fileCount=0;//Number of selected files
			    var totalFiles=0;

				/*================================================================================*\
				 Form for classic upload
				\*================================================================================*/
			    var onLoadIframe=false;
			    var mainFrame=$('&lt;iframe src="javascript:false;" name="ax-main-frame" /&gt;').hide().appendTo(_this).load(function(){
			    	if(onLoadIframe)
			    	{
			    		fileCount=1;
			    		$(_this).find('.ax-progress-div').html('100%');
			    		onFinish(this.contentWindow.document.body.innerHTML,'',$(_this).find('.ax-upload'));
			    	}
				});

			    var mainForm=$('&lt;form target="ax-main-frame" method="POST" action="" encType="multipart/form-data" /&gt;').appendTo(_this);


				/*================================================================================*\
				 Browse input used for selecting files to upload. Cloned for normal upload
				\*================================================================================*/


			    var browse=$(_browse).attr('multiple',isAjaxUpload).appendTo(mainForm).bind('change',function(){
					if(isAjaxUpload)
					{
						for (var i = 0; i &lt; this.files.length; i++) 
						{
							if(fileCount&lt;=settings.maxFiles)
							{
								add_file(fileList,this.files[i],this.files[i].name,this.files[i].size,fileCount);
							}
						}
					}
					else
					{
						if(fileCount&lt;=settings.maxFiles)
						{
							add_file(fileList,this,this.value.replace(/^.*\\/, ''),0,fileCount);
						}
					}
				});

				/*================================================================================*\
				Upload All files button that upload files at once on click
				\*================================================================================*/
				var uploadAll=$('&lt;input style="margin-left:5px;" type="button" value="Upload all" class="ax-uploadall" /&gt;').attr('disabled',true).appendTo(mainForm).bind('click',function(){
					if(isAjaxUpload)
					{
						$(_this).find('.ax-upload:not(:disabled)').click();
					}
					else
					{
						onLoadIframe=true;
						var finalUrl=get_final_url('');
						mainForm.attr('action',finalUrl).submit();

						$(_this).find('.ax-upload').attr('disabled',true);
						if(settings.GIFprogress!='')
							$(_this).find('.ax-progress-div').html('&lt;img src="'+settings.GIFprogress+'" alt="uploading..." /&gt;');
						else
							$(_this).find('.ax-progress-div').html('Uploading...');
					}
				});

				/*================================================================================*\
				Clear buttons that resets file list and variables
				\*================================================================================*/
				var clear=$('&lt;input style="margin-left:5px;" type="button" value="Clear" class="ax-clear" /&gt;').appendTo(mainForm).bind('click',function(){
					fileCount=0;
					totalFiles=0;
					uploadAll.attr('disabled',fileCount==0);
					fileList.children('tbody').remove();
				});


				/*================================================================================*\
				Table with the list of files and their details
				\*================================================================================*/
			    var fileList=$('&lt;table class="ax-file-list" /&gt;').append('&lt;thead&gt;&lt;tr&gt;'+
													 	'&lt;th&gt;File&lt;/th&gt;'+
													 	'&lt;th&gt;Size&lt;/th&gt;'+
													 	'&lt;th&gt;Progress&lt;/th&gt;'+
													 	'&lt;th&gt;Remove&lt;/th&gt;'+
													 	'&lt;th&gt;Upload&lt;/th&gt;'+
													 '&lt;/tr&gt;&lt;/thead&gt;').appendTo(mainForm);


				/*================================================================================*\
				Functions that sets the url for sending additional data
				\*================================================================================*/
			    function get_final_url(enc_name)
			    {
					/*================================================================================*\
					 Encode remote path and calculate it if given as function
					\*================================================================================*/
					settings.remotePath=(typeof(settings.remotePath)=='function')?settings.remotePath():settings.remotePath;

					/*================================================================================*\
					 set other URL data
					\*================================================================================*/

					var c=(settings.url.indexOf('?')==-1)?'?':'&amp;';
					var url=settings.url+c+'ax-file-path='+encodeURIComponent(settings.remotePath)+'&amp;ax-allow-ext='+encodeURIComponent(allowExt);

					settings.data=(typeof(settings.data)=='function')?settings.data():settings.data;
					return url+'&amp;ax-file-name='+enc_name+'&amp;'+settings.data;//final url with other data
			    }

				/*================================================================================*\
				Functions that executes and the end of file uploading
				\*================================================================================*/
			    function onFinish(txt,currF,up,ab)
			    {
					fileCount--;//count upload files

					up.attr('disabled',false);
					settings.success(txt,currF);
					if(fileCount==0)
					{
						var filesArr=new Array();
						$(_this).find('.ax-file-name').each(function(){
							filesArr.push($(this).attr('title'));
						});
						fileCount=totalFiles;
						settings.finish(txt,filesArr);
						uploadAll.attr('disabled',false);
					}
			    }

				/*================================================================================*\
				Functions creates file form and xmlhttprequest for upload
				\*================================================================================*/
				function add_file(t,o,n,s,numF)
				{
					var ext=n.split('.').pop().toLowerCase();//file ext

					/*================================================================================*\
					File extension control
					\*================================================================================*/
					if(allowExt.indexOf(ext)&lt;0 &amp;&amp; allowExt!='all')	return;

					/*================================================================================*\
					Display file size in MB o Kb settings
					\*================================================================================*/
					switch(settings.showSize.toLowerCase())
					{
						case 'mb':s=s/(1024*1024);break;
						case 'kb':s=s/1024;break;
					}
					s=(Math.round(s*100)/100)+' '+settings.showSize;


					fileCount++;//update file number
					totalFiles++;

					uploadAll.attr('disabled',fileCount==0);
					//remove button action bind
					var rm=$('&lt;input type="button" value="Remove" /&gt;').bind('click',function(){
						fileCount--;
						totalFiles--;
						uploadAll.attr('disabled',fileCount==0);
						$(this).parents('tr:first').remove();
					});

					//prepare abort and upload button
					var up=$('&lt;input type="button" value="Upload" class="ax-upload" /&gt;').bind('click',function(){ this.disabled=true; });

					var tr=$('&lt;tr /&gt;').appendTo(t);
					var td_n=$('&lt;td class="ax-file-name" title="'+n+'" /&gt;').appendTo(tr).html(n);
					var td_s=$('&lt;td class="ax-size-td" /&gt;').appendTo(tr).html(s);
					var td_p=$('&lt;td class="ax-progress-td" /&gt;').appendTo(tr);
					var div_p=$('&lt;div  class="ax-progress-div" /&gt;').css({'width':'0%','background-color':'red'}).html(0).appendTo(td_p);
					var td_r=$('&lt;td class="ax-remove-td" /&gt;').appendTo(tr).append(rm);
					var td_u=$('&lt;td class="ax-upload-td" /&gt;').appendTo(tr).append(up);

					/*================================================================================*\
					 Prepare to send
					\*================================================================================*/
					var enc_name=encodeURIComponent(n);//encode file name

					if(!isAjaxUpload)
					{
						var file_holder=$('&lt;div /&gt;').appendTo(td_n).hide().append(o);						
						up.bind('click',function(){
							/*================================================================================*\
							 Target Iframe for async upload with iframes
							\*================================================================================*/
							var targetFrame=$('&lt;iframe src="javascript:false;" name="ax-frame-'+numF+'" /&gt;').hide().appendTo(td_n).load(function(){
								if($(this).attr('load')=='1')
								{
									div_p.html('Finish');
									onFinish(this.contentWindow.document.body.innerHTML,n,up);
								}
							}).attr('load','0');
							div_p.html('Uploading...');
							targetFrame.attr('load','1');

							var finalUrl=get_final_url(enc_name);

							$('&lt;form method="POST" action="'+finalUrl+'" encType="multipart/form-data" /&gt;').attr('target','ax-frame-'+numF).appendTo(td_n).hide().append(o).submit();
						});

						//clone browse file and append it to main form for selecting other files
						$(o).clone(true).val('').prependTo(mainForm);
					}
					else
					{
						/*================================================================================*\
						 bind actions to buttons
						\*================================================================================*/
						up.bind('click',function(){
							uploadFileXhr(o,0,$(this),div_p);
						});
					}
				}

				//recrusive file upload with chunk method
				function uploadFileXhr(o,start_byte,up,div_p)
				{
					var totals=o.size;
					var chunk;	
					var peice=settings.chunkSize;//bytes to upload at once

					var end_byte=start_byte+peice;
					var peice_count=end_byte/peice;
					var is_last=(totals-end_byte&lt;=0)?1:0;

					/*===============================================================*\
					 * Detect support slice method
					 * if slice is not supported then send all file at once
					\*==============================================================*/

//Initialize a new FileReader object
var reader = new FileReader();

//Slice the file into the desired chunk
var chunk = o.slice(start_byte, end_byte);
reader.readAsBinaryString(chunk);

/*================================================================================*\
					 Prepare xmlhttpreq object for file upload Bind functions and progress
					\*================================================================================*/
					var xhr = new XMLHttpRequest();//prepare xhr for upload

					xhr.onreadystatechange=function()
					{
						if(this.readyState == 4 &amp;&amp; this.status == 200)
						{
							if(is_last==0)
							{
								uploadFileXhr(o,end_byte,up,div_p);
							}
							else
							{
								onFinish(xhr.responseText,o.name,up);
								div_p.html('100%').css('width','100%');
							}
						}
					};
					xhr.upload.onprogress=function(e)
					{
						if (e.lengthComputable) 
						{
							var perc = Math.round((e.loaded+peice_count*peice-peice)*100/totals);
							div_p.html(perc+'%').css('width',perc+'%');
						}
					};

					xhr.upload.onerror=settings.error(xhr.responseText,o.name);
					var finalUrl=get_final_url(encodeURIComponent(o.name));
					xhr.open('POST',finalUrl+'&amp;start='+start_byte,settings.async);//url + async/sync
					xhr.setRequestHeader('Cache-Control', 'no-cache');
					xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');//header
                    // have to use json utf-8 charset
                    xhr.setRequestHeader("Content-Type", "application/json; charset=utf-8");
					xhr.send(chunk);//send request of file 
				}

				/*=======================================================
				 * Disable option
				 *======================================================*/
	    	    if(!settings.enable)
	    	    	$(this).find('input:not(:disabled), button:not(:disabled)').addClass('ax-disabled').attr('disabled',true);

    	    });
		},
		enable:function()
		{
			return this.each(function()
			{
				$(this).find('.ax-disabled').attr('disabled',false).removeClass('ax-disabled');
			});
		},
		disable:function()
		{
			return this.each(function()
			{
				$(this).find('input:not(:disabled), button:not(:disabled)').addClass('ax-disabled').attr('disabled',true);
			});
		},
		start:function()
		{
			$(this).find('.ax-uploadall:not(:disabled)').click();
		},
		clear:function()
		{
			(this).find('.ax-clear:not(:disabled)').click();
		},
		destroy : function()
		{
			return this.each(function()
			{
				var $this = $(this);
				$this.removeData('settings');
				$this.html('');
			});
		}
	};

	$.fn.axuploader = function(method, options)
	{
		if(methods[method])
		{
			return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));
		}
		else if(typeof method === 'object' || !method)
		{
			return methods.init.apply(this, arguments);
		}
		else
		{
			$.error('Method ' + method + ' does not exist on jQuery.axuploader');
		}
	};

})(jQuery);
</pre>
<p></p>
<h3>Nginx</h3>
<p>目前的 stud 伺服器採用 ports 讓多用戶可以在同一台主機上執行動態 cmsimde 網站. 另一種配置方法, 就如同 Github Pages 與 Replit 的作法, 透過 DNS 的配置, 為每一位用戶建立一個獨特的 domain name.</p>
<p>假如要讓 stud 伺服器能為每位用戶建立一個獨特的 domain name. 在 DNS 的架構下, 可以讓同一個 IPv6 address 透過多個 CNAME 別名的方式達成. 而在同一台主機中伺服多個 domain name 網站的方法, 則可以使用 Nginx 中的 virtual hosts (在一台伺服器中建立多個不同符號名稱的網站) 設定達成. 也就是各網站都透過同一個 443 埠號, 為每一個網站建立 server 設定, 並讓 server_name 分別對應至各用戶的網站 domain name. 然後利用 Nginx server 中的 proxy_pass 指向近端的 python3 server.py 所啟動的 localhost 網站內容即可.</p>
<p>至於各別名的 https 網站數位簽章, 則可以利用 Let's Encrypt 的設定達成, 只是一次要在同一台伺服器共享超過兩百個 domain names, 必須透過實作才知道是否可行.</p>
<p>此外, 由於配置過程中若採 interactive 模式必須要動態讓 Python 程式在 DNS 伺服器中以管理者執行 script. 或許可以試試採用 subprocess.check_call(['sudo', 'your_dns_modification_script']) 方式執行.</p>
<h2>TCExam</h2>
<p>53 機器, 外部 pj2022 內部 tcexam</p>
<p>啟動流程:</p>
<p>進入 C:\tcexam\pgsql 執行 start.bat 啟動資料庫伺服器</p>
<p>其餘對應的 nginx 與 php 執行對應都採 service 啟動</p>
<p>管理設定:</p>
<p>C:\tcexam\tcexam\shared\config\tce_user_registration.php</p>
<p>由 define('K_USRREG_ENABLED', false); 控制是否開放用戶註冊</p>
<h3>bugs</h3>
<p>原始碼出處: <a href="https://github.com/tecnickcom/tcexam">https://github.com/tecnickcom/tcexam</a> </p>
<p>1. During show test result (<span style="color: #ff0000;">fixed by adding round() from line 503 to 590</span>) :</p>
<p>ATTENTION: [8192] Implicit conversion from float 64.2 to int loses precision | LINE: 620 | FILE: C:\tcexam\tcexam\shared\code\tce_functions_test_stats.php</p>
<p>討論: 是否要將 tce_functions_test_stats 中的 round() 除式,  改為 <a href="https://www.php.net/manual/en/function.intdiv.php">intdiv</a>()</p>
<p></p>
<p>2. During exam (<span style="color: #ff0000;">can avoid</span>):</p>
<p style="padding-left: 30px;">shared code</p>
<p style="padding-left: 30px;">tce_functions_test.php 1516</p>
<p style="padding-left: 30px;">public code</p>
<p style="padding-left: 30px;">tce_test_execute.php 119</p>
<p style="padding-left: 30px;">發生原因, 其中一題只有題目沒有選項,  造成 $num_answers = 0 放到計算 partial 得分時出現 division by zero 錯誤.</p>
<p>3. During list the test content (<span style="color: #ff0000;">only happened for old test questions?</span>):</p>
<p style="padding-left: 30px;">ATTENTION: [8192] htmlspecialchars(): Passing null to parameter #1 ($string) of type string is deprecated | LINE: 793 | FILE: C:\tcexam\tcexam\admin\code\tce_edit_answer.php&lt;/div&gt;</p>
<p>4. During list the test content (<span style="color: #ff0000;">fixed</span>):</p>
<div class="warning" style="padding-left: 30px;">ATTENTION: [8192] Implicit conversion from float 55.6 to int loses precision | LINE: 620 | FILE: C:\tcexam\tcexam\shared\code\tce_functions_test_stats.php</div>
<div class="warning" style="padding-left: 30px;">ATTENTION: [8192] Implicit conversion from float 60.44444444444444 to int loses precision | LINE: 639 | FILE: C:\tcexam\tcexam\shared\code\tce_functions_test_stats.php</div>
<div class="warning" style="padding-left: 30px;"></div>
<div class="warning" style="padding-left: 30px;">ATTENTION: [8192] Implicit conversion from float 106.6 to int loses precision | LINE: 620 | FILE: C:\tcexam\tcexam\shared\code\tce_functions_test_stats.php<br/>ATTENTION: [8192] Implicit conversion from float 44.5 to int loses precision | LINE: 639 | FILE: C:\tcexam\tcexam\shared\code\tce_functions_test_stats.php<br/>ATTENTION: [8192] Implicit conversion from float 134.16666666666666 to int loses precision | LINE: 639 | FILE: C:\tcexam\tcexam\shared\code\tce_functions_test_stats.php<br/><br/></div>
<p style="padding-left: 30px;"><a href="https://stackoverflow.com/questions/71534654/implicit-conversion-from-float-number-to-int-loses-precision">參考1</a>, <a href="https://stackoverflow.com/questions/73653446/deprecated-implicit-conversion-from-float-to-int-loses-precision/73653527">參考2</a></p>
<div class="warning">5. <span style="color: #ff0000;">Not sure if this bug fixed or not</span>.</div>
<div class="warning"></div>
<div class="warning" style="padding-left: 30px;">ATTENTION: [8192] htmlspecialchars(): Passing null to parameter #1 ($string) of type string is deprecated | LINE: 793 | FILE: C:\tcexam\tcexam\admin\code\tce_edit_answer.php&lt;/div&gt;</div>
<div class="warning" style="padding-left: 30px;"></div>
<div class="warning">6.
<div class="error" style="padding-left: 30px;">ERROR: [2] pg_query(): Query failed: ERROR: invalid input syntax for type boolean: "" LINE 2: answer_enabled=\'\', ^ | LINE: 83 | FILE: C:\tcexam\tcexam\shared\code\tce_db_dal_postgresql.php</div>
<div class="warning" style="padding-left: 30px;">ATTENTION: [8192] pg_last_error(): Automatic fetching of PostgreSQL connection is deprecated | LINE: 69 | FILE: C:\tcexam\tcexam\shared\code\tce_db_dal_postgresql.php</div>
<div class="error" style="padding-left: 30px;">ERROR: ERROR: invalid input syntax for type boolean: "" LINE 2: answer_enabled=\'\',</div>
<div class="error" style="padding-left: 30px;"></div>
<div class="error">7.</div>
<div class="error" style="padding-left: 30px;">ATTENTION: [8192] stripos(): Passing null to parameter #1 ($haystack) of type string is deprecated | LINE: 333 | FILE: C:\tcexam\tcexam\shared\code\tce_functions_test_stats.php</div>
<div class="error" style="padding-left: 30px;">Ref: <a href="https://php.watch/versions/8.1/internal-func-non-nullable-null-deprecation">https://php.watch/versions/8.1/internal-func-non-nullable-null-deprecation</a></div>
<div class="error"></div>
<div class="error">8.</div>
<div class="error" style="padding-left: 30px;">ATTENTION: [8192] strtolower(): Passing null to parameter #1 ($string) of type string is deprecated | LINE: 309 | FILE: C:\tcexam\tcexam\shared\code\tce_functions_general.php</div>
<div class="error" style="padding-left: 30px;">Ref: <a href="https://php.watch/versions/8.1/internal-func-non-nullable-null-deprecation">https://php.watch/versions/8.1/internal-func-non-nullable-null-deprecation</a></div>
<div class="error" style="padding-left: 30px;"></div>
<div class="error">9.</div>
<div class="error"></div>
<div class="error" style="padding-left: 30px;">ERROR: [2] pg_query(): Query failed: ERROR: duplicate key value violates unique constraint "pk_tce_test_subjects" DETAIL: Key (subjset_tsubset_id, subjset_subject_id)=(31, 4) already exists. | LINE: 83 | FILE: C:\tcexam\tcexam\shared\code\tce_db_dal_postgresql.php<br/><br/>ATTENTION: [8192] pg_last_error(): Automatic fetching of PostgreSQL connection is deprecated | LINE: 69 | FILE: C:\tcexam\tcexam\shared\code\tce_db_dal_postgresql.php<br/><br/>ERROR: ERROR: duplicate key value violates unique constraint "pk_tce_test_subjects" DETAIL: Key (subjset_tsubset_id, subjset_subject_id)=(31, 4) already exists.<br/><br/>ERROR: [2] pg_query(): Query failed: ERROR: duplicate key value violates unique constraint "pk_tce_test_subjects" DETAIL: Key (subjset_tsubset_id, subjset_subject_id)=(31, 1) already exists. | LINE: 83 | FILE: C:\tcexam\tcexam\shared\code\tce_db_dal_postgresql.php<br/><br/>ATTENTION: [8192] pg_last_error(): Automatic fetching of PostgreSQL connection is deprecated | LINE: 69 | FILE: C:\tcexam\tcexam\shared\code\tce_db_dal_postgresql.php<br/><br/>ERROR: ERROR: duplicate key value violates unique constraint "pk_tce_test_subjects" DETAIL: Key (subjset_tsubset_id, subjset_subject_id)=(31, 1) already exists.</div>
</div>
<div class="warning">10.</div>
<div class="warning" style="padding-left: 30px;">ATTENTION: [8192] stripos(): Passing null to parameter #1 ($haystack) of type string is deprecated | LINE: 333 | FILE: C:\tcexam\tcexam\shared\code\tce_functions_test_stats.php</div>
<div class="warning"></div>
<h2>vscode</h2>
<p><a href="https://code.visualstudio.com/docs/editor/vscode-web#_opening-a-project">https://code.visualstudio.com/docs/editor/vscode-web#_opening-a-project</a></p>
<h2>Flask</h2>
<p><a href="https://flask.palletsprojects.com/en/2.2.x/blueprints/">https://flask.palletsprojects.com/en/2.2.x/blueprints/</a></p>
<p><a href="https://link.springer.com/book/10.1007/978-1-4842-5022-8">Building REST API with Flask</a> ebook</p>
<p>taskkill /F /T /IM pythonw.exe /FI "USERNAME eq cad2022"</p>
<p>taskkill /f /PID 9532</p>
<h2>Windows</h2>
<p>Git 指令:</p>
<h4>git error:</h4>
<p style="padding-left: 30px;"><a href="https://stackoverflow.com/questions/66366582/github-unexpected-disconnect-while-reading-sideband-packet">https://stackoverflow.com/questions/66366582/github-unexpected-disconnect-while-reading-sideband-packet</a></p>
<hr/>
<h4>如何刪除近端的改版(<a href="https://www.nobledesktop.com/learn/git/undo-changes">參考</a>):</h4>
<p>1. 假如近端所進行的諸多改版尚未提交 (commit):</p>
<p style="padding-left: 30px;">git checkout .</p>
<p style="padding-left: 30px;">以上指令將會從遠端取下近端改版前的版本內容, 之前所做的改版將會被刪除.</p>
<p>2. 假如近端所做的改版已經提交但尚未推送時:</p>
<p style="padding-left: 30px;">若希望刪除上一個提交時, 執行 git reset --soft HEAD~ 或 git reset --soft HEAD^</p>
<p style="padding-left: 30px;">假如相望刪除上兩個提交時, 執行 git reset --soft HEAD~2</p>
<p style="padding-left: 30px;">接下來則可自行處理之前改版的內容, 例如: 刪除有意或無意放入的大檔案.</p>
<p>3. 假如近端所做的改版已經提交並且已經推送時:</p>
<p style="padding-left: 30px;">先從 github 查詢已經 push 的版次號 (至少 7 個版本代號), 然後執行下列指令:</p>
<p style="padding-left: 30px;">git revert 版次號 --no-edit</p>
<p style="padding-left: 30px;">上列指令表示無條件回到所選定的版次號版本內容, 並據此版本新增一個提交. 接著就可以執行 git push.</p>
<hr/>
<p>Divergent Branch 處理(<a href="https://poanchen.github.io/blog/2020/09/19/what-to-do-when-git-branch-has-diverged">參考</a>):</p>
<p style="padding-left: 30px;">git rebase (以遠端的版本做為基礎, 將近端改版接在其線性改版歷程之後) 或 git merge (保留非線性改版歷程, 將遠端版本拉下來進行合併)</p>
<p style="padding-left: 30px;">git rebase origin/main</p>
<p style="padding-left: 30px;">git merge origin/main</p>
<hr/>
<h4>如何刪除分支(<a href="https://www.freecodecamp.org/news/git-delete-branch-how-to-remove-a-local-or-remote-branch">參考</a>):</h4>
<p style="padding-left: 30px;">如何刪除近端分支:</p>
<p style="padding-left: 60px;">先切換分支, 例如: 切換到 main 分支, 然後刪除近端的其他分支.</p>
<p style="padding-left: 90px;">git checkout branch_name</p>
<p style="padding-left: 60px;">若要刪除的分支內容已經合併至其他分支, 則以 -d 刪除</p>
<p style="padding-left: 90px;">git branch -d local_branch_name</p>
<p style="padding-left: 60px;">若要刪除的分支內容尚未合併至其他分支, 但仍希望刪除該分支, 則以 -D 刪除</p>
<p style="padding-left: 90px;">git branch -D local_branch_name</p>
<p style="padding-left: 60px;">刪除後, 以 git branch 查看近端的倉儲分支情形.</p>
<p style="padding-left: 30px;">如何刪除遠端分支:</p>
<p style="padding-left: 60px;">git push remote_name -d remote_branch_name</p>
<p style="padding-left: 60px;">通常所謂的 remote_name 都命名為 origin, 因此刪除遠端分支的指令:</p>
<p style="padding-left: 60px;">git push origin -d remote_branch_name</p>
<p style="padding-left: 60px;">之後再查看遠端分支:</p>
<p style="padding-left: 60px;">git branch -a</p>
<p style="padding-left: 60px;">這裡的 -a 表示要查看 all branches, 包括近端與遠端的所有分支.</p>
<hr/>
<p>IPv6 Windows 10 使用授權批次檔案 windows_10_kms_ipv6.bat:</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">@echo off
cscript "%SystemRoot%\system32\slmgr.vbs" /skms [2001:288:6004:1::15]:1688
cscript "%SystemRoot%\system32\slmgr.vbs" /ato
cscript "%SystemRoot%\system32\slmgr.vbs" /dlv
echo done
pause</pre>
<p></p>
<p><a href="https://www.softwaretestinghelp.com/windows-10-startup-folder/">Windows 10 啟動目錄</a>:</p>
<p style="padding-left: 30px;">C:\ProgramData\Microsoft\Windows\Start Menu\Programs\StartUp</p>
<p><a href="https://zhuanlan.zhihu.com/p/549971797">如何查找 Windows PC 的序列号 - 知乎 (zhihu.com)</a></p>
<p><a href="https://software.nfu.edu.tw/KMS/windows_kms.bat">https://software.nfu.edu.tw/KMS/windows_kms.bat</a></p>
<p><a href="https://software.nfu.edu.tw/KMS/Office_2016_KMS.bat">https://software.nfu.edu.tw/KMS/Office_2016_KMS.bat</a></p>
<p><a href="https://www.computerhope.com/issues/ch000322.htm">https://www.computerhope.com/issues/ch000322.htm</a> (batch for Win 10 startup)</p>
<p>OpenSSH:</p>
<p style="padding-left: 30px;">C:\WINDOWS\System32\OpenSSH\sshd.exe</p>
<p style="padding-left: 30px;">設定檔案位置: C:\ProgramData\ssh\sshd_config</p>
<h3>RDT</h3>
<p>同一帳號同時登入遠端桌面多個 sessions:</p>
<p style="padding-left: 30px;"><a href="https://serverfault.com/questions/116016/logging-in-as-the-same-user-multiple-times-in-remote-desktop-windows-server-2008">https://serverfault.com/questions/116016/logging-in-as-the-same-user-multiple-times-in-remote-desktop-windows-server-2008</a></p>
<h3>NAT</h3>
<p>svm8641:</p>
<p style="padding-left: 30px;"><a href="https://www.qno.com.tw/web/products_info_svm8641.asp">https://www.qno.com.tw/web/products_info_svm8641.asp</a></p>
<p style="padding-left: 30px;"><a href="/downloads/SVM8641_UserManual_TC.pdf">SVM8641_UserManual_TC.pdf</a></p>
<h1>Docker</h1>
<p><a href="https://skychang.github.io/2017/01/06/Docker-Docker_for_Windows_10_First/">https://skychang.github.io/2017/01/06/Docker-Docker_for_Windows_10_First/</a></p>
<p><a href="https://learn.microsoft.com/zh-tw/windows/wsl/tutorials/wsl-containers">https://learn.microsoft.com/zh-tw/windows/wsl/tutorials/wsl-containers</a></p>
<p><a href="https://link.springer.com/book/10.1007/978-1-4842-1830-3">2016 Pro Docker</a></p>
<p><a href="https://link.springer.com/book/10.1007/978-1-4842-5826-2">2020 The SQL Server DBA’s Guide to Docker Containers</a></p>
<p><a href="https://link.springer.com/book/10.1007/978-1-4842-6546-8">2021 Deploy Machine Learning Models to Production</a></p>
<p><a href="https://link.springer.com/book/10.1007/978-1-4842-7815-4">2022 Practical Docker with Python</a></p>
<p><a href="https://link.springer.com/book/10.1007/978-1-4842-8318-9">2022 Practical Linux DevOps </a></p><h1>News</h1>
<p><a href="https://survey.stackoverflow.co/2022/#overview">https://survey.stackoverflow.co/2022/#overview</a> </p>
<p><a href="https://youtu.be/-DVyjdw4t9I">Guido van Rossum: Python and the Future of Programming</a></p>
<p><a href="https://www.youtube.com/watch?v=ABVn6uMG1OI">MicroPython + Pyscript: Is this finally Python on the Frontend?</a></p>
<p><a href="https://builtin.com/artificial-intelligence/use-ai-fix-broken-code">https://builtin.com/artificial-intelligence/use-ai-fix-broken-code</a> </p>
<p style="padding-left: 30px;"><a href="https://www.testim.io/blog/what-is-a-linter-heres-a-definition-and-quick-start-guide/">What Is a Linter? Here's a Definition and Quick-Start Guide (testim.io)</a></p>
<p><a href="https://builtin.com/artificial-intelligence/human-consequences-automation">Why Automation Won’t Replace Humans | Built In</a></p>
<p><a href="https://youtu.be/zU1ahmjyFOc">web Sammir 2022 opening night</a></p>
<p style="padding-left: 30px;"><a href="https://youtu.be/i4mCREzVah8">Day one</a></p>
<p style="padding-left: 30px;"><a href="https://youtu.be/D5p2gt7htDM">Day three</a></p>
<p><a href="https://www.cnbc.com/2022/11/04/web-inventor-tim-berners-lee-wants-us-to-ignore-web3.html">https://www.psypost.org/2022/11/attractive-female-students-no-longer-earned-higher-grades-when-classes-moved-online-during-covid-19-64251</a>  - 外貌在疫情線上課程期間不再吃香<a href="https://www.cnbc.com/2022/11/04/web-inventor-tim-berners-lee-wants-us-to-ignore-web3.html"><br/>https://www.cnbc.com/2022/11/04/web-inventor-tim-berners-lee-wants-us-to-ignore-web3.html</a></p>
<p style="padding-left: 30px;">Tim Berners-Lee, the British computer scientist credited with inventing the World Wide Web in 1989, said Friday that he <strong>doesn’t view blockchain as a viable solution for building the next iteration of the internet</strong>.</p>
<p><a href="https://phys.org/news/2022-10-scientists-exotic-quantum-state-room.html">https://phys.org/news/2022-10-scientists-exotic-quantum-state-room.html</a> - Scientists discover exotic quantum state at room temperature</p>
<p><a href="https://www.pcgamer.com/a-single-chip-has-managed-to-transfer-the-entire-internets-traffic-in-a-single-second/">https://www.pcgamer.com/a-single-chip-has-managed-to-transfer-the-entire-internets-traffic-in-a-single-second/</a> - 網路連線速度只有更快沒有最快</p>
<p><a href="https://www.digitaltrends.com/news/search-and-rescue-jetpack-aces-flight-test-in-lousy-weather/">https://www.digitaljournal.com/business/video-games-could-improve-kids-brains-study/article</a> - 不是所有的線上遊戲都對孩童有害</p>
<p><a href="https://www.digitaltrends.com/news/search-and-rescue-jetpack-aces-flight-test-in-lousy-weather/">https://www.datacenterdynamics.com/en/news/ibm-begins-installing-on-premise-quantum-computer-at-ohios-cleveland-clinic/</a> - 量子電腦的應用已經有很大進展</p>
<p><a href="https://www.digitaltrends.com/news/search-and-rescue-jetpack-aces-flight-test-in-lousy-weather/">https://www.digitaltrends.com/news/search-and-rescue-jetpack-aces-flight-test-in-lousy-weather/</a> - 鋼鐵人救災已經可以實現了</p>
<p><a href="https://www.reuters.com/technology/exclusive-automakers-double-spending-evs-batteries-12-trillion-by-2030-2022-10-21/">https://www.reuters.com/technology/exclusive-automakers-double-spending-evs-batteries-12-trillion-by-2030-2022-10-21/</a> - 世界各大車廠正大量投資發展電動車跟電池技術</p>
<p><a href="https://www.engadget.com/metas-ai-translator-can-interpret-unwritten-languages-150001511.html">https://www.engadget.com/metas-ai-translator-can-interpret-unwritten-languages-150001511.html</a> - 沒有文字的語言也能夠即時口譯了</p>
<p><a href="https://www.vice.com/en/article/pkgxqz/record-labels-say-ai-music-generators-threaten-music-industry">https://www.vice.com/en/article/pkgxqz/record-labels-say-ai-music-generators-threaten-music-industry</a> - AI 的應用已經殺進音樂產業</p>
<p><a href="https://edition.cnn.com/2022/10/21/tech/artists-ai-images/index.html">https://edition.cnn.com/2022/10/21/tech/artists-ai-images/index.html</a> - 許多畫家的藝術作品被拿來訓練AI可用來產生幾乎相同畫風的不同作品</p>
<p><a href="https://www.techspot.com/news/96392-someone-wrote-javascript-app-accurately-emulates-windows-95.html">https://www.techspot.com/news/96392-someone-wrote-javascript-app-accurately-emulates-windows-95.html</a> - 完全用 JavaScript 寫的類Windows 95 </p>
<p><a href="https://www.nature.com/articles/s41528-022-00207-2">https://www.nature.com/articles/s41528-022-00207-2</a> - 背著機電系統的生化昆蟲可望被用於災難搜尋</p>
<p><a href="https://www.nature.com/articles/s41586-022-04470-1">https://www.nature.com/articles/s41586-022-04470-1</a> - DNA 的編修又向前一步</p>
<p><a href="https://www.imperial.ac.uk/news/240775/new-flexible-steerable-device-placed-live/">https://www.imperial.ac.uk/news/240775/new-flexible-steerable-device-placed-live/</a> - 機器手臂在微創手術應用上的進展</p>
<p><a href="https://wccftech.com/intel-raptor-lake-roars-core-i9-13900k-claws-away-amd-fx-8350-cpu-frequency-world-record-hits-8-81-ghz-clocks/">https://wccftech.com/intel-raptor-lake-roars-core-i9-13900k-claws-away-amd-fx-8350-cpu-frequency-world-record-hits-8-81-ghz-clocks/</a> - CPU 運行速度超紀錄</p>
<p><a href="https://www.quantamagazine.org/inside-the-proton-the-most-complicated-thing-imaginable-20221019/">https://www.quantamagazine.org/inside-the-proton-the-most-complicated-thing-imaginable-20221019/</a> - 有關質子研究的進展</p>
<p><a href="https://www.imperial.ac.uk/news/239973/3d-printing-drones-work-like-bees/">https://www.imperial.ac.uk/news/239973/3d-printing-drones-work-like-bees/</a> - 利用無人機進行 3D列印</p>
<p><br/>下一張圖片是用手機直接拍攝後<span>More than a century after Ernest Rutherford discovered the positively charged particle at the heart of every atom, physicists are still struggling to fully understand the proton.</span>轉入：</p>
<p>假如是 iPhone 7 之後的手機，則需要將照片格式改為 JPG。</p>
<p>設定方法是：進入設定 - 相機 - 格式，將高效率改為最相容。</p>
<p><img alt="" height="225" src="/images/image.jpg" width="300"/></p>
<p>下一張照片則是由手機取畫面後轉入：</p>
<p><img alt="" height="534" src="/images/A04E0941-5835-4CAF-B9FA-DBF235FF6401.png" width="300"/></p><h2>Constancy</h2>
<div style="text-align: right;">When chance itself can give no more, 'Tis easy to be true.</div>
<div style="text-align: right;">-- <a href="https://en.wikipedia.org/wiki/Sir_Charles_Sedley,_5th_Baronet">Charles Sedley</a></div>
<p><img alt="" class="add_border" height="520" src="/images/Reasons_for_constancy.png" width="600"/></p>
<p>From <a href="https://papuraunewydd.llyfrgell.cymru/view/3395232/3395234">January 9, 1852</a> <a href="https://newspapers.library.wales/browse/3390638">Monmouthshire Merlin Weekly</a></p>
<h1>Servers</h1>
<p>nfu.cycu under 69 win 10 virtualbox 10ff:0:1:2</p>
<p>ubuntu 22.04 under 69 virtualbox 10ff:0:1:4</p>
<p>Servers<br/>VBoxHeadless -s is the same as -startvm and --startvm<br/><br/>4 更新為 22.04 之後運作正常，資料已備份。<br/><br/>229 Ubuntu 22.04 stud<br/><br/>stud 8000 : demo<br/><br/>stud 8700 : wsmde<br/><br/>stud 8800 : mde.tw<br/><br/>stud 8900 : cmsimde_site<br/><br/>當 stud 伺服器以 python3 server.py &amp; 啟動後, 若雲端 Github 倉儲資料更新後, 只要在 stud 近端倉儲以 git pull 取下雲端改版內容, 動態網站將會自動 restart.<br/><br/>39 shutdown (42)<br/><br/>53 down (exam down)<br/><br/>86 down<br/><br/>69 down</p>
<p>10ff-1 down<br/><br/>10ff-4 down<br/><br/>10ff-6 down<br/><br/>10ff-10 lost<br/><br/>10ff-11 down<br/><br/>10ff-12 down<br/><br/>10ff-13 down<br/><br/>10ff-15 down<br/><br/>10ff-20 lost<br/><br/></p>
<p>151 down</p>
<p>209 down</p>
<p>229 down</p>
<p></p>
<p></p>
<h2>Webcam</h2>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># close system proxy setting
# pip install opencv-python
import cv2
import time

cap = cv2.VideoCapture(0)

#Check whether user selected camera is opened successfully.

if not (cap.isOpened()):
    print('Could not open video device')
else:
    print('Video device opened')


cap.set(cv2.CAP_PROP_FRAME_WIDTH, 640)
cap.set(cv2.CAP_PROP_FRAME_HEIGHT, 480)


while(True):
  ret, frame = cap.read()

  # 將圖片轉為灰階
  #gray = cv2.cvtColor(frqame, cv2.COLOR_BGR2GRAY)

  #cv2.imwrite('test.jpg', frame)

  cv2.imshow('frame', frame )

  if cv2.waitKey(1) &amp; 0xFF == ord('q'):
    break

cap.release()
cv2.destroyAllWindows()</pre>
<p></p><h2>Ubuntu</h2>
<p>Under Windows use powershell list nssm services:</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">Get-WmiObject win32_service | ?{$_.PathName -like '*nssm*'} | select Name, DisplayName, State, PathName</pre>
<p>處理 209:</p>
<p>下載 Ubuntu 22.04.1.iso 1.3 GB</p>
<p>mod.cycu 為 22.04 Desktop</p>
<p>將 4 從 86 轉到 209 - Done</p>
<hr/>
<p>sudo apt update</p>
<p>sudo apt upgrade</p>
<p>sudo apt autoremove</p>
<p>sudo apt install net-tools</p>
<p>sudo reboot</p>
<p>sudo apt install squid</p>
<hr/>
<p>sudo adduser username</p>
<p>sudo usermod -aG sudo username</p>
<hr/>
<p>proxy server 4 ufw setup (allow 192.168.1.1 and IPv6 group to port 22, allow all to 3128)</p>
<p>sudo -s</p>
<p>ufw status</p>
<p>ufw allow from 192.168.1.1</p>
<p>ufw allow from 2001:288:xxxx:17::/32 to any port 22</p>
<p>ufw deny 22</p>
<p>ufw allow 3128</p>
<p>if dns server:</p>
<p style="padding-left: 30px;">ufw allow 53</p>
<p>ufw enable</p>
<hr/>
<p>sudo install bind9</p>
<p>sudo systemctl reload bind9</p>
<p>db.17</p>
<p>db.local</p>
<p>db.mde</p>
<p>exam: 10ff:1:0:1</p>
<p>stud: 10ff:0:1:5</p>
<p>nx: 10ff::109</p>
<p>add server3 as proxy and dns of mde</p>
<p></p>
<p></p><h2>OpenSSH</h2>
<p>Windows OpenSSH server:</p>
<p style="padding-left: 30px;">OpenSSH is a connectivity tool for remote sign-in that uses the SSH protocol. It encrypts all traffic between client and server to eliminate eavesdropping, connection hijacking, and other attacks.</p>
<p style="padding-left: 30px;">An OpenSSH-compatible client can be used to connect to Windows Server and Windows client devices.</p>
<p style="padding-left: 30px;"><span>OpenSSH has configuration files for both server and client settings. OpenSSH is open-source and is added to Windows Server and Windows Client operating systems, starting with Windows Server 2019 and Windows 10 (build 1809). As a result, open-source documentation for OpenSSH configuration files isn't repeated here. Client configuration files and can be found on the </span><a data-linktype="external" href="https://man.openbsd.org/ssh_config">ssh_config manual page</a><span><span> </span>and for OpenSSH Server configuration files can be found on the<span> </span></span><a data-linktype="external" href="https://man.openbsd.org/sshd_config">sshd_config manual page</a><span>.</span></p>
<p style="padding-left: 30px;"><a href="https://learn.microsoft.com/en-us/windows-server/administration/openssh/openssh_keymanagement">Key-based authentication in OpenSSH for Windows | Microsoft Learn</a></p>
<p style="padding-left: 30px;"><a href="https://learn.microsoft.com/en-us/windows-server/administration/openssh/openssh_server_configuration?source=recommendations">OpenSSH Server configuration for Windows | Microsoft Learn</a></p>
<p style="padding-left: 30px;"><a href="https://learn.microsoft.com/en-us/windows-server/administration/openssh/openssh_overview?source=recommendations">OpenSSH for Windows overview | Microsoft Learn</a></p>
<p style="padding-left: 30px;"><a href="https://learn.microsoft.com/en-us/windows/terminal/tutorials/ssh?source=recommendations">Windows Terminal SSH | Microsoft Learn</a></p>
<h3>ncat</h3>
<p><a href="https://learn.microsoft.com/zh-tw/sysinternals/downloads/procmon">https://learn.microsoft.com/zh-tw/sysinternals/downloads/procmon</a> </p>
<p><a href="https://learn.microsoft.com/zh-tw/sysinternals/downloads/pskill">https://learn.microsoft.com/zh-tw/sysinternals/downloads/pskill</a> </p>
<p><a href="https://social.technet.microsoft.com/Forums/WINDOWS/en-US/b86f6a65-b10e-47d3-a1c1-1e98aeb2df7d/kill-process-non-administrator-account?forum=winserver8gen">https://social.technet.microsoft.com/Forums/WINDOWS/en-US/b86f6a65-b10e-47d3-a1c1-1e98aeb2df7d/kill-process-non-administrator-account?forum=winserver8gen</a> </p>
<p>Windows 10</p>
<p>必須使用 <a href="https://nmap.org/dist/nmap-7.92-setup.exe">https://nmap.org/dist/nmap-7.92-setup.exe</a> 解開壓縮後, 將 ncat.exe 與動態連結程式庫, 放入C:/Users/pj2022/ncat/ 目錄中.</p>
<p><a href="/downloads/ncat_7.92.7z">ncat_7.92.7z</a></p>
<p>.ssh/config 設定檔案</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">Host demo
HostName github.com
ProxyCommand c:/tmp/ncat/ncat.exe --proxy p42.cycu.org:3128 --proxy-type http %h %p</pre>
<p>針對個別用戶還需要:</p>
<ol>
<li>set git_ssh_command=c:/windows/system32/openssh/ssh.exe</li>
<li>將各用戶目錄下的 .ssh 權限取消繼承並且移除自身與系統 (System) 以外的管理權</li>
</ol>
<p>將 .ssh/id_rsa.pub 登錄至 Github 後, 就可以利用下列指令, 以 SSH 協定取下倉儲:</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">git clone --recurse-submodules git@demo:mdecp2022/site-scrum-1.git s</pre>
<hr/>
<p><a href="https://learn.microsoft.com/en-us/powershell/scripting/learn/remoting/ssh-remoting-in-powershell-core?view=powershell-7.3">PowerShell Remoting Over SSH - PowerShell | Microsoft Learn</a></p>
<p><a href="https://link.springer.com/book/10.1007/978-1-4842-7759-1">PowerShell Fast Track</a></p>
<p><a href="https://link.springer.com/book/10.1007/978-1-4842-4504-0">PowerShell and Python Together</a></p>
<p><a href="https://link.springer.com/book/10.1007/978-1-4302-0546-3">Pro Windows PowerShell</a></p>
<p><a href="https://link.springer.com/book/10.1007/978-1-4842-3129-6">Essential PowerShell for Office 365</a></p>
<p><a href="https://link.springer.com/book/10.1007/978-1-4842-2884-5">Beginning PowerShell for SharePoint 2016</a></p>
<h1>cp2022</h1>
<p><a href="https://nfu.cycu.org/?semester=1111&amp;courseno=0761&amp;column=True">1b 修課名單</a></p>
<p><a href="https://nfu.cycu.org/?semester=1111&amp;courseno=0747&amp;column=True">1a 修課名單</a></p>
<p><a href="https://github.com/odenipinedo/Python/blob/master/datacamp/introduction%20to%20Python.ipynb">https://github.com/odenipinedo/Python/blob/master/datacamp/introduction%20to%20Python.ipynb</a></p>
<h2>CP抽點程式</h2>
<p>Python dictionary 資料結構: <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries">https://docs.python.org/3/tutorial/datastructures.html#dictionaries</a></p>
<p>2022 Fall 課程代號:1a 為 0747, 1b 為 0761, 2a 為 0773, 2b 為 0786</p>
<p style="padding-left: 30px;">每一學期各系所開始的相同課程都使用不同課程代號的程式設計, 並非是很好的資料結構設計, 因為使用者若要列出某科系所開設的課程歷史資料時, 都需要使用不同課程代號執行查詢.</p>
<p style="padding-left: 30px;">若能以在資料結構中加入一個科系代號, 並且固定各科系所開設的特定課程代號, 例如: 若計算機程式為工學院必修課, 則工學院各科系都使用相同課程代號, 使用者就可以針對各科系的固定代號與計算機課程的固定代號, 查詢每一個學期的相關資料.</p>
<p style="padding-left: 30px;">範例: <a href="http://catalog.mit.edu/degree-charts/mechanical-engineering-course-2/">http://catalog.mit.edu/degree-charts/mechanical-engineering-course-2/</a></p>
<p>以下為抽點程式 (<a href="https://mde.tw/demo/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/f9b2c7a6e6db0e75a2a113920be2fb2685e21a84/1_w7_b_cp2022_random_draw.py">執行</a>):</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># Python 的註解分為單行註解與多行, 單行註解可在字串前方放入 #
'''多行註解則可以透過三個單引號前後標註字串或文字段落內容, 
也可以使用三個雙引號作為多行註解的標註
'''
# 使用 import 導入 random 模組, 隨後就可以直接引用 random 模組的方法
import random
# 以 { } 區隔資料內容的 Python 資料型別稱為 dict, 分別帶有 key 與對應值
courses = {"1a": "0747", "1b": "0761", "2a": "0773", "2b": "0786"}
c_name = "1b"
c = courses[c_name]
# 宣告 url 變數值為字串, 此字串為取得 cp2022 1a 選課成員名單
url = "https://nfu.cycu.org/?semester=1111&amp;courseno=" + c + "&amp;column=True"
# 利用上述已經宣告的 url 變數字串值, 作為 open() 函式的輸入變數, 可以連結至該網站
# 連接 url 所代表字串的網站後, 再利用 read() 函式讀取該網站的內容, 即可取得 c_name 的選課成員學號
# url 所屬的網站, 乃 69 中的一台虛擬主機 8/10ff-0-1-2, 並利用 Get 從教務主機取回課程註冊成員學號
# 由於所取回的學號以跳行符號隔開, 因此取回的學號資料行, 再利用 split() 函式, 以 \n 跳行符號分割後
# 所對應到 data 的資料型別將會是數列
data = open(url).read().split("\n")
# 經過檢查 data 數列, 發現最後一個 element 為空字串, 因此利用 [:-1] 去掉數列的最後一個元素, -1 代表數列最後一個元素的索引
#print(data[:-1])
# 設定一個變數, 與修課成員學號數列對應
stud = data[:-1]
# 使用 random 模組中的 shuffle() 函式, 以隨機的方式排列 stud 數列內容
random.shuffle(stud)
# 設定 num 與 5 對應, 或將 5 整數值存入 num 變數所對應的記憶體位址
num = 5
# 利用 for 重複迴圈與 range() 變數, 列印出 (利用 print() 函式) 已經隨機排列次序的 stud 數列的最前面 num 個學號值
for i in range(num):
    print(stud[i])</pre>
<h2>CP 靜態網頁連結</h2>
<p><a href="https://mde.tw/demo/content/Brython.html?c=1a&amp;src=https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/dc9d2548d95523db9aa1b32d75ae61b3fff32853/cp2022_w6b_gen_pages_link.py">1a靜態網頁連結執行</a> (<a href="https://mde.tw/demo/content/Brython.html?c=1a&amp;num=5&amp;src=https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/2004c0db568b5b5b8c81bf498d05bf1cafebdf44/cp2022_w6b_gen_pages_link.py">抽五名</a>)</p>
<p><a href="https://mde.tw/demo/content/Brython.html?c=1b&amp;src=https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/dc9d2548d95523db9aa1b32d75ae61b3fff32853/cp2022_w6b_gen_pages_link.py">1b靜態網頁連結執行</a> (<a href="https://mde.tw/demo/content/Brython.html?c=1b&amp;num=5&amp;src=https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/2004c0db568b5b5b8c81bf498d05bf1cafebdf44/cp2022_w6b_gen_pages_link.py">抽五名</a>)</p>
<p><a href="https://mde.tw/demo/content/Brython.html?c=2a&amp;src=https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/2004c0db568b5b5b8c81bf498d05bf1cafebdf44/cad2022_gen_link.py">2a靜態網頁連結執行</a> (<a href="https://mde.tw/demo/content/Brython.html?c=2a&amp;num=5&amp;src=https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/2004c0db568b5b5b8c81bf498d05bf1cafebdf44/cad2022_gen_link.py">抽五名</a>)</p>
<p><a href="https://mde.tw/demo/content/Brython.html?c=2b&amp;src=https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/2004c0db568b5b5b8c81bf498d05bf1cafebdf44/cad2022_gen_link.py">2b靜態網頁連結執行</a> (<a href="https://mde.tw/demo/content/Brython.html?c=2b&amp;num=5&amp;src=https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/2004c0db568b5b5b8c81bf498d05bf1cafebdf44/cad2022_gen_link.py">抽五名</a>)</p>
<p><a href="https://mde.tw/demo/content/Brython.html?c=2a&amp;src=https://gist.githubusercontent.com/mdecycu/9df4b372ac1b7386cf259ced15f1a2b2/raw/3c9820998b2ef12bb94bb94973da207942f72c87/list_cad2022_site_and_repo.py">cad2022_list</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># 從 Brython 的 browser 模組導入 document 與 html 程式庫
from browser import document, html

# 利用 document 物件, 以索引 "brython_div1" 取得已經位於 html 網頁中 id="brython_div1" 的位置, 且對應到 brython_div1 變數
brython_div1 = document["brython_div1"]
# 可以用三個單引號或三個雙引號標註多行註解
# 其中的 html 物件有許多建立 html 超文件內容的方法, 以下分別建立
# BUTTON 按鈕, BR 跳行 (break), 以及 A 網站連結 (Anchor)
# &lt;= 是 Brython 程式語言的特殊符號, 專用於將 html 超文件資料送給網頁對應變數
"""
brython_div1 &lt;= html.BUTTON("hello")
brython_div1 &lt;= html.BR()
brython_div1 &lt;= html.A("google", href="https://google.com")
"""

# 將 1b.txt 資料從 Github Pages 網頁中取下
url = "https://mde.tw/studlist/2022fall/1b.txt"
# 利用 open() 開啟網頁, 利用 read() 讀取網頁內容
# 然後利用 split() 方法, 利用跳行符號對資料進行切割, 切割後的資料結構為 list
# list 資料結構以 [] 區隔, 表示資料為數列, 其起始的索引值為 0
data = open(url).read().split("\n")
# 將每一位學員的靜態網頁共同的網路連結部分設為字串, 且與 mdecp2022 變數對應
mdecp2022 = "https://mdecp2022.github.io/site-"
# 因為取下的資料第一筆為標題, 而最後一筆為空字串, 可以利用 Brython 的數列索引取值範圍將索引 0 與最後一個數列值去除
data = data[1:-1]
# 利用 for 重複迴圈逐一取出 data 數列中的值, 然後以 \t, 也就是 tab 符號切割
for i in data:
    stud = i.split("\t")
    # 第一欄位為學號
    stud_num = stud[0]
    # 第二欄未為 github 帳號
    github_acc = stud[1]
    #print(stud_num, github_acc)
    # 若沒有找到 github 帳號, 以學號作為帳號
    if github_acc == "":
        github_acc = stud_num
    # 將靜態網頁共同連結的變數與各自的 github 帳號, 組成完整的各學員靜態網頁連結
    site = mdecp2022 + github_acc
    # 利用 A 物件產生連結, 然後放入 id="brython_div1 所在的網頁位置
    link = html.A(stud_num, href=site)
    brython_div1 &lt;= link
    # 每一筆資料列出後, 以 break 標註跳行
    brython_div1 &lt;= html.BR()</pre>
<p><br/><br/></p><h2>HW</h2>
<p>w10-1</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import json
import ast

url = "https://gist.githubusercontent.com/mdecycu/9df4b372ac1b7386cf259ced15f1a2b2/raw/a6825f13b1bb0b61e09e74dd117729eefe1d947f/20221110_cp1b_w10_quiz.json"
json_data = open(url).read()

big_dict = ast.literal_eval(json_data)
data = big_dict["body"]["testuser"]
for i in data:
    print(data[i]["user_name"], end=",")
    print(int(float(data[i]["total_score"])))</pre>
<p><a href="https://mde.tw/demo/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9df4b372ac1b7386cf259ced15f1a2b2/raw/6501364cab3070f3793e577b2004d8d96338e875/get_1b_w10_quiz_score.py">1b_w10_quiz_result</a></p>
<p><a href="https://mde.tw/demo/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9df4b372ac1b7386cf259ced15f1a2b2/raw/6501364cab3070f3793e577b2004d8d96338e875/get_2b_w10_quiz_score.py">2b_w10_quiz_result</a></p>
<p>w10-2</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">a = "1"
for i in range(3, 10, 2):
    a = a + ", " + str(i)
print(a)</pre>
<h3>w12</h3>
<p>以下為本頁面的主要超文件檔案:</p>
<p>因為頁面中的 Brython 程式段直接執行時, 利用 input() 跳出表單要求使用者輸入所要進行轉換的溫度值, 很顯然, 這樣的程式處理方式並不友善, 因此使用者連結到這一個網頁時, 可能只是希望看一下網頁內容, 或許不是要執行攝氏與華氏的溫度轉換程式.</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;h3&gt;w12&lt;/h3&gt;
&lt;!-- 
在動態網站頁面中啟用 Brython 執行環境的用法, 請注意動態網站執行所在路徑
--&gt;
&lt;p&gt;&lt;/p&gt;
&lt;!-- 這個標註在 html 為註解
以下導入 Brython 以 Javascript 編寫的解譯器, 一旦導入頁面, 並且啟動, 就可以在頁面中利用
&lt;script type="text/python"&gt;&lt;/script&gt; 標註編寫 Brython 程式
Brython 是能在瀏覽器中執行的 Python, 並不是所有 CPython 的程式庫都包含在 Brython 中, 
但 Brython 可以擷取所有 Javascript 編寫的程式庫, 因此在網際前端仍具有一定的優勢.
--&gt;
&lt;script src="/static/brython.js"&gt;&lt;/script&gt;
&lt;script src="/static/brython_stdlib.js"&gt;&lt;/script&gt;
&lt;!-- 啟動 Brython --&gt;
&lt;p&gt;
&lt;script&gt;// &lt;![CDATA[
window.onload=function(){
brython({debug:1, pythonpath:['/static/','/downloads/py/']});
}
// ]]&gt;&lt;/script&gt;
&lt;!-- 以下事先在頁面中加入 id="brython_div" 的 div 標註
之後可利用 Brython 的 document 模組與此 html 標註對應
--&gt;&lt;/p&gt;
&lt;div id="brython_div"&gt;&lt;/div&gt;
&lt;p&gt;
&lt;script type="text/python"&gt;// &lt;![CDATA[
from browser import html, document
# Brython 的 input() 可以接受輸入提示字串, 跳出瀏覽器輸入表單後, 將輸入內容以字串取回
user_input_temp = input("請輸入攝氏溫度值:")

# 接著列出 user_input_temp 變數的資料型別
# 但是在頁面中 Brython 的 print() 將會顯示在 log 而非頁面
print(type(user_input_temp))
# 這裡定義一個 brython_div 變數, 透過 document[] 與頁面中 id="brython_div" 的位置對應
brython_div = document["brython_div"]
# 看能不能直接將變數值字串列在標註 id 為 "brython_div" 的頁面位置
brython_div &lt;= user_input_temp
# 之後若要列出 html, 則需要透過 Brython 的 html 模組
// ]]&gt;&lt;/script&gt;
&lt;/p&gt;</pre>
<p></p>
<!-- 
在動態網站頁面中啟用 Brython 執行環境的用法, 請注意動態網站執行所在路徑
-->
<p></p>
<!-- 這個標註在 html 為註解
以下導入 Brython 以 Javascript 編寫的解譯器, 一旦導入頁面, 並且啟動, 就可以在頁面中利用
<script type="text/python"></script> 標註編寫 Brython 程式
Brython 是能在瀏覽器中執行的 Python, 並不是所有 CPython 的程式庫都包含在 Brython 中, 
但 Brython 可以擷取所有 Javascript 編寫的程式庫, 因此在網際前端仍具有一定的優勢.
-->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','/downloads/py/']});
}
</script>
<!-- 以下事先在頁面中加入 id="brython_div" 的 div 標註
之後可利用 Brython 的 document 模組與此 html 標註對應
--></p>
<div id="brython_div"></div>
<p>
<script type="text/python">
from browser import html, document
# Brython 的 input() 可以接受輸入提示字串, 跳出瀏覽器輸入表單後, 將輸入內容以字串取回
user_input_temp = input("請輸入攝氏溫度值:")

# 接著列出 user_input_temp 變數的資料型別
# 但是在頁面中 Brython 的 print() 將會顯示在 log 而非頁面
print(type(user_input_temp))
# 這裡定義一個 brython_div 變數, 透過 document[] 與頁面中 id="brython_div" 的位置對應
brython_div = document["brython_div"]
# 看能不能直接將變數值字串列在標註 id 為 "brython_div" 的頁面位置
brython_div <= user_input_temp
# 之後若要列出 html, 則需要透過 Brython 的 html 模組
</script>
</p>
<h3>w12-1</h3>
<!-- 
在動態網站頁面中啟用 Brython 執行環境的用法, 請注意動態網站執行所在路徑
-->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','/downloads/py/']});
}
</script>
<!-- 以下事先在頁面中加入 id="brython_div" 的 div 標註
之後可利用 Brython 的 document 模組與此 html 標註對應
--></p>
<!-- 利用 html 建立一個 id="btn1" 的按鈕 -->
<p><button id="btn1">取使用者輸入</button></p>
<div id="brython_div"></div>
<p>
<script type="text/python">
from browser import html, document
# Brython 的 input() 可以接受輸入提示字串, 跳出瀏覽器輸入表單後, 將輸入內容以字串取回
#user_input_temp = input("請輸入攝氏溫度值:")
# 接著列出 user_input_temp 變數的資料型別
# 但是在頁面中 Brython 的 print() 將會顯示在 log 而非頁面
#print(type(user_input_temp))
# 這裡定義一個 brython_div 變數, 透過 document[] 與頁面中 id="brython_div" 的位置對應
brython_div = document["brython_div"]
# 看能不能直接將變數值字串列在標註 id 為 "brython_div" 的頁面位置
#brython_div <= user_input_temp
# 之後若要列出 html, 則需要透過 Brython 的 html 模組
# 接下來要設法按下按鈕之後才執行取使用者 input 的流程
# 首先 comment 掉前面的 input() 與 print(), 同時蓋掉輸出, 並利用事件導向設計一個函式

def get_input(env):
    user_input_temp = input("請輸入攝氏溫度值:")
    brython_div <= user_input_temp

# 透過 Brython browser 模組中的 document 物件將 id="btn1" 的物件中的 bind() 方法
# 讓使用者 click 後會經由瀏覽器中的 event 通知執行 get_input 函式
document["btn1"].bind('click', get_input)
</script>
</p>
<h3>w12-2</h3>
<!-- 
在動態網站頁面中啟用 Brython 執行環境的用法, 請注意動態網站執行所在路徑
-->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','/downloads/py/']});
}
</script>
<!-- 以下事先在頁面中加入 id="brython_div" 的 div 標註
之後可利用 Brython 的 document 模組與此 html 標註對應
--></p>
<!-- 利用 html 建立一個 id="btn1" 的按鈕 -->
<p><button id="btn1">取使用者輸入</button></p>
<div id="brython_div"></div>
<p>
<script type="text/python">
from browser import html, document, ajax
# Brython 的 input() 可以接受輸入提示字串, 跳出瀏覽器輸入表單後, 將輸入內容以字串取回
#user_input_temp = input("請輸入攝氏溫度值:")
# 接著列出 user_input_temp 變數的資料型別
# 但是在頁面中 Brython 的 print() 將會顯示在 log 而非頁面
#print(type(user_input_temp))
# 這裡定義一個 brython_div 變數, 透過 document[] 與頁面中 id="brython_div" 的位置對應
brython_div = document["brython_div"]
# 看能不能直接將變數值字串列在標註 id 為 "brython_div" 的頁面位置
#brython_div <= user_input_temp
# 之後若要列出 html, 則需要透過 Brython 的 html 模組
# 接下來要設法按下按鈕之後才執行取使用者 input 的流程
# 首先 comment 掉前面的 input() 與 print(), 同時蓋掉輸出, 並利用事件導向設計一個函式

def complete(request):
    pass

def get_input(env):
    user_input_temp = input("請輸入攝氏溫度值:")
    url = "http://127.0.0.1:8080/?temp=" + user_input_temp
    ajax.get(url, oncomplete=complete)
    brython_div <= "已經透過 AJAX 採 GET 將溫度輸入值送到 server"
    brython_div <= html.BR()
    brython_div <= user_input_temp
    brython_div <= html.BR()

# 透過 Brython browser 模組中的 document 物件將 id="btn1" 的物件中的 bind() 方法
# 讓使用者 click 後會經由瀏覽器中的 event 通知執行 get_input 函式
document["btn1"].bind('click', get_input)
</script>
</p>
<!--
以下為 Flask 伺服器端的程式碼
from flask import Flask, request 
from flask_cors import CORS
  
app = Flask(__name__)
CORS(app)

@app.route('/', methods=['GET'])
def index():
    # 利用 Flask request 取得 GET 模式下的 temp 變數值
    # 若 temp 無值, 則內定為 "30"
    temp = request.args.get('temp', default="30")
    # 當使用者在瀏覽器執行 Brython 程式時, 可以利用 GET 將 temp 變數值傳給 server 端的 Flask Python 程式
    # 若瀏覽器前端採 form 表單取值, 則 Flask 可以 request.form.get() 取值
    return "已經取得 temp: " + str(temp)

  
if __name__ == '__main__':
    app.run(host='127.0.0.1', port=8080, debug=True)
-->
<p></p>
<h3>w13</h3>
<h3>w14</h3>
<!-- 
在動態網站頁面中啟用 Brython 執行環境的用法, 請注意動態網站執行所在路徑
-->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','/downloads/py/']});
}
</script>
<!-- 以下事先在頁面中加入 id="brython_div" 的 div 標註
之後可利用 Brython 的 document 模組與此 html 標註對應
--></p>
<div id="brython_div"></div>
<p><!-- 將直接執行的程式 comment 掉
<script type="text/python">
from browser import html, document
# Brython 的 input() 可以接受輸入提示字串, 跳出瀏覽器輸入表單後, 將輸入內容以字串取回
user_input_temp = input("請輸入攝氏溫度值:")
# 接著列出 user_input_temp 變數的資料型別
# 但是在頁面中 Brython 的 print() 將會顯示在 log 而非頁面
print(type(user_input_temp))
# 這裡定義一個 brython_div 變數, 透過 document[] 與頁面中 id="brython_div" 的位置對應
brython_div = document["brython_div"]
# 看能不能直接將變數值字串列在標註 id 為 "brython_div" 的頁面位置
brython_div <= user_input_temp
# 之後若要列出 html, 則需要透過 Brython 的 html 模組
</script>
--></p>
<p><button id="btn1">取使用者輸入</button></p>
<div id="brython_div"></div>
<p>
<script type="text/python">
from browser import html, document
# Brython 的 input() 可以接受輸入提示字串, 跳出瀏覽器輸入表單後, 將輸入內容以字串取回
#user_input_temp = input("請輸入攝氏溫度值:")
# 接著列出 user_input_temp 變數的資料型別
# 但是在頁面中 Brython 的 print() 將會顯示在 log 而非頁面
#print(type(user_input_temp))
# 這裡定義一個 brython_div 變數, 透過 document[] 與頁面中 id="brython_div" 的位置對應
brython_div = document["brython_div"]
# 看能不能直接將變數值字串列在標註 id 為 "brython_div" 的頁面位置
#brython_div <= user_input_temp
# 之後若要列出 html, 則需要透過 Brython 的 html 模組
# 接下來要設法按下按鈕之後才執行取使用者 input 的流程
# 首先 comment 掉前面的 input() 與 print(), 同時蓋掉輸出, 並利用事件導向設計一個函式
def get_input(env):
    user_input_temp = input("請輸入攝氏溫度值:")
    brython_div <= user_input_temp
# 透過 Brython browser 模組中的 document 物件將 id="btn1" 的物件中的 bind() 方法
# 讓使用者 click 後會經由瀏覽器中的 event 通知執行 get_input 函式
document["btn1"].bind('click', get_input)
</script>
</p>
<p><a href="https://gist.githubusercontent.com/mdecycu/9df4b372ac1b7386cf259ced15f1a2b2/raw/abf3fc0c15d16c45ab20d297d97c06081d87bff4/cp1b_w14_demo.txt">頁面原始碼</a></p>
<p><a href="https://mde.tw/content/Python.html?cname=1a&amp;url=https://gist.githubusercontent.com/mdecycu/9df4b372ac1b7386cf259ced15f1a2b2/raw/a6825f13b1bb0b61e09e74dd117729eefe1d947f/20221110_cp1b_w10_quiz.json&amp;src=https://gist.githubusercontent.com/mdecycu/9df4b372ac1b7386cf259ced15f1a2b2/raw/a288bdd1945ad9375dbc88d1e1d308435d2822b6/quiz_class.py">取下各班與各週考試成績</a> (物件導向設計)</p>
<p>原始碼</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># 導入 ast 模組是希望利用其 literal_eval() 將 dict 格式的字串轉為 dict 資料型別
# 以利隨後的取值運算
import ast
from browser import document

class quiz:
    def __init__(self, cname, url):
        self.cname = cname
        self.url = url

    # 定義一個函式, 以班級代號字串作為輸入, 可以傳回各班修課學員的學號數列
    def get_stud(self):
        # 將課程的班級代號字串作為 dict 的 key, 而 2022 fall 的課程代號作為對應值
        # 使用者可以利用班級代號從 courses dict 取出課程代號
        courses = {"1a": "0747", "1b": "0761", "2a": "0773", "2b": "0786"}
        # 利用 c_name 從 courses 得到該學期的課程代號
        c = courses[self.cname]
        # 利用課程代號從學校教務主機取的該班修課人員名單
        curl = "https://nfu.cycu.org/?semester=1111&amp;courseno=" + c + "&amp;column=True"
        # 讀出各修課人員資料後, 以跳行符號切割, 得到的 data 為數列
        data = open(curl).read().split("\n")
        # 因為最後一筆資料為空字串, 因此利用數列運算將其去除
        stud = data[:-1]
        # get_stud() 函式最後將對應班級的修課人員學號以數列格式傳回
        return stud
        
    def get_score(self):
        # 利用 open() 與 read() 讀取考試結果 JSON 檔案
        json_data = open(self.url).read()
        # 利用 ast.literal_eval() 將字串 dict, 轉為程式可用的 dict 資料型別
        big_dict = ast.literal_eval(json_data)
        # 從 big_dict 中, 取出 body 中的 testuser 欄位資料
        data = big_dict["body"]["testuser"]
        # 定義一個空 dict 資料變數, 隨後利用迴圈逐一將學號作為 key, 考試成績為 valude
        # 組成 quiz_dict 的資料內容, 以便之後可以用學號當作輸入, 取得該員考試成績
        quiz_dict = {}
        for i in data:
            # data 資料中的 user_name 為考試學員的帳號, 也就是學號
            stud_id = data[i]["user_name"]
            # data 資料中的 total_score 欄位為考試成績
            # 因為考試成績為字串, 先轉為浮點數後, 再轉為整數
            stud_score = int(float(data[i]["total_score"]))
            # 逐一以學號為 key, 考試成績為對應 value, 將資料放入 quiz_dict
            quiz_dict[stud_id] = stud_score
        # 取得各學員的考試成績 quiz_dict 後, 將資料傳回
        return quiz_dict

try:
    url = document.query["url"]
except:
    url = "https://gist.githubusercontent.com/mdecycu/9df4b372ac1b7386cf259ced15f1a2b2/raw/a6825f13b1bb0b61e09e74dd117729eefe1d947f/20221110_cp1b_w10_quiz.json"

try:
    cname =document.query["cname"]
except:
    cname = "1b"

cpb_w14 = quiz(cname, url)
cp_stud = cpb_w14.get_stud()
cp_score = cpb_w14.get_score()
print(cp_stud, cp_score)
</pre>
<h3>w14-1</h3>
<p><a href="https://brython.info/static_doc/en/events.html">Brython event driven documentation</a></p>
<!-- 納入 Brython 環境 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- startup Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p>這個程式可以讓使用者輸入班級代號以及考試 json 檔案的連結 (以逗點隔開前後不要有空白), 直接列出考試結果, 平均分數與缺考人員名單.</p>
<!-- 直接將 button 以 html 建立 -->
<p><button id="get_cname">取 cname,url</button></p>
<div id="brython_div"></div>
<script type="text/python">
# 導入 ast 模組是希望利用其 literal_eval() 將 dict 格式的字串轉為 dict 資料型別
# 以利隨後的取值運算
import ast
from browser import document, html, bind

class quiz:
    def __init__(self, cname, url):
        self.cname = cname
        self.url = url

    # 定義一個函式, 以班級代號字串作為輸入, 可以傳回各班修課學員的學號數列
    def get_stud(self):
        # 將課程的班級代號字串作為 dict 的 key, 而 2022 fall 的課程代號作為對應值
        # 使用者可以利用班級代號從 courses dict 取出課程代號
        courses = {"1a": "0747", "1b": "0761", "2a": "0773", "2b": "0786"}
        # 利用 c_name 從 courses 得到該學期的課程代號
        c = courses[self.cname]
        # 利用課程代號從學校教務主機取的該班修課人員名單
        curl = "https://nfu.cycu.org/?semester=1111&courseno=" + c + "&column=True"
        # 讀出各修課人員資料後, 以跳行符號切割, 得到的 data 為數列
        data = open(curl).read().split("\n")
        # 因為最後一筆資料為空字串, 因此利用數列運算將其去除
        stud = data[:-1]
        # get_stud() 函式最後將對應班級的修課人員學號以數列格式傳回
        return stud
        
    def get_score(self):
        # 利用 open() 與 read() 讀取考試結果 JSON 檔案
        json_data = open(self.url).read()
        # 利用 ast.literal_eval() 將字串 dict, 轉為程式可用的 dict 資料型別
        big_dict = ast.literal_eval(json_data)
        # 從 big_dict 中, 取出 body 中的 testuser 欄位資料
        data = big_dict["body"]["testuser"]
        # 定義一個空 dict 資料變數, 隨後利用迴圈逐一將學號作為 key, 考試成績為 valude
        # 組成 quiz_dict 的資料內容, 以便之後可以用學號當作輸入, 取得該員考試成績
        quiz_dict = {}
        for i in data:
            # data 資料中的 user_name 為考試學員的帳號, 也就是學號
            stud_id = data[i]["user_name"]
            # data 資料中的 total_score 欄位為考試成績
            # 因為考試成績為字串, 先轉為浮點數後, 再轉為整數
            stud_score = int(float(data[i]["total_score"]))
            # 逐一以學號為 key, 考試成績為對應 value, 將資料放入 quiz_dict
            quiz_dict[stud_id] = stud_score
        # 取得各學員的考試成績 quiz_dict 後, 將資料傳回
        return quiz_dict

# stud 為 list, score 則為 dict, 可以透過 ast.literal_eval() 轉為 Python 資料
def gen_result(stud, score):
    #stud_list = ast.literal_eval(stud)
    #score_dict = ast.literal_eval(score)
    brython_div = document["brython_div"]
    '''
    for i in stud:
        brython_div <= i + ":"
        try:
            s = score["i"]
        except:
            s = "缺考"
        brython_div <= s
        brython_div <= html.BR()
    '''
    brython_div <= str(type(stud))
        

@bind(document["get_cname"], 'click')
def get_cname(env):
    user_input = input("請輸入 cname,url")
    cname_url =  user_input.split(",")
    cname = cname_url[0]
    url = cname_url[1]
    data = quiz(cname, url)
    stud = data.get_stud()
    score = data.get_score()
    # 以 stud, score 為輸入, 列出展示用的超文件結果
    gen_result(stud, score)
    '''
    brython_div = document["brython_div"]
    brython_div <= len(stud)
    brython_div <= html.BR()
    brython_div <= score
    '''

# use new bind decorator
#document["get_cname"].bind("click", get_cname)
</script>
<h3>w14-2</h3>
<!-- 
在動態網站頁面中啟用 Brython 執行環境的用法, 請注意動態網站執行所在路徑
-->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','/downloads/py/']});
}
</script>
</p>
<p><button id="btn1">取使用者輸入</button></p>
<div id="brython_div"></div>
<p>
<script type="text/python">
from browser import html, document
# Brython 的 input() 可以接受輸入提示字串, 跳出瀏覽器輸入表單後, 將輸入內容以字串取回
#user_input_temp = input("請輸入攝氏溫度值:")
# 接著列出 user_input_temp 變數的資料型別
# 但是在頁面中 Brython 的 print() 將會顯示在 log 而非頁面
#print(type(user_input_temp))
# 這裡定義一個 brython_div 變數, 透過 document[] 與頁面中 id="brython_div" 的位置對應
brython_div = document["brython_div"]
# 看能不能直接將變數值字串列在標註 id 為 "brython_div" 的頁面位置
#brython_div <= user_input_temp
# 之後若要列出 html, 則需要透過 Brython 的 html 模組
# 接下來要設法按下按鈕之後才執行取使用者 input 的流程
# 首先 comment 掉前面的 input() 與 print(), 同時蓋掉輸出, 並利用事件導向設計一個函式
def get_input(env):
    user_input_temp = input("請輸入攝氏溫度值:")
    brython_div <= user_input_temp
# 透過 Brython browser 模組中的 document 物件將 id="btn1" 的物件中的 bind() 方法
# 讓使用者 click 後會經由瀏覽器中的 event 通知執行 get_input 函式
document["btn1"].bind('click', get_input)
</script>
</p>
<h2>w15</h2>
<p>列出 1b w15 回答<a href="https://teams.microsoft.com/l/message/19:d9799ea6c6a349b7a2988a07333603eb@thread.tacv2/1671027392781?tenantId=e650a2d7-e923-45bb-8fa6-1af5b0f72f09&amp;groupId=80d5bdeb-f306-4937-b63e-1e4c0b842936&amp;parentMessageId=1671027392781&amp;teamName=cp2022&amp;channelName=w13-w18&amp;createdTime=1671027392781&amp;allowXTenantAccess=false">問題</a>之<a href="https://mde.tw/demo/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9df4b372ac1b7386cf259ced15f1a2b2/raw/6e1825c6659b8424f5bbc9935921430e750f0d49/quiz_class_inheritant3.py">結果</a>.</p>
<p><a href="https://mde.tw/demo/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9df4b372ac1b7386cf259ced15f1a2b2/raw/473ae7fa1a5d5ae78c724c8548798b2f8e4731f5/cp2022_w15_1a_listpage.py">1a 是否建立 w15 名單</a>.</p>
<p><a href="https://mde.tw/content/Python.html?src=https://gist.githubusercontent.com/mdecycu/82d5d77b917a5d6c656233767afe4bea/raw/350ea45f6e3f130a15faf98c82b6475c7dcdfef4/rect_walk_add_start_button.py">加入啟動按鈕後的綠色方塊行走範例</a>.</p>
<p>維護 <a href="https://github.com/mdecp2022">https://github.com/mdecp2022</a> 帳號下的個人倉儲方法</p>
<table border="1" style="width: 457.95px;">
<tbody>
<tr style="height: 47px;">
<td style="width: 78px; height: 47px;">維護方法</td>
<td style="width: 78px; height: 47px;">認證方式</td>
<td style="width: 78px; height: 47px;">方便性</td>
<td style="width: 78px; height: 47px;">注意事項</td>
<td style="width: 107.95px; height: 47px;">操作流程</td>
</tr>
<tr style="height: 74.4px;">
<td style="width: 78px; height: 74.4px;">Replit</td>
<td style="width: 78px; height: 74.4px;">
<p>登入認證</p>
<p>Token</p>
</td>
<td style="width: 78px; height: 74.4px;">必須隨時上網</td>
<td style="width: 78px; height: 74.4px;">更新前儘量利用 git pull 與 github 倉儲保持同步</td>
<td style="width: 107.95px; height: 74.4px;">
<p>1. 登入 Replit</p>
<p>2. Import from github</p>
<p>3. git submodule update --init</p>
<p>4. flask flask_cors bs4 lxml pelican markdown pyopenssl</p>
<p>5. 以 main.py 啟動後維護</p>
<p>6. 資料同步至 github.com 或以 token 執行 acp</p>
</td>
</tr>
<tr style="height: 88px;">
<td style="width: 78px; height: 88px;">stud.cycu.org</td>
<td style="width: 78px; height: 88px;">
<p>SSH</p>
<p>Token</p>
</td>
<td style="width: 78px; height: 88px;">必須隨時上網</td>
<td style="width: 78px; height: 88px;">更新前儘量利用 git pull 與 github 倉儲保持同步</td>
<td style="width: 107.95px; height: 88px;">
<p>1. 登入 stud.cycu.org</p>
<p>2. 建立 SSH 認證</p>
<p>3. git config 設定</p>
<p>4. 確定 server.py 已經導向所分配的 9xxx 埠號</p>
<p>5. python3 server.py 啟動後進行內容維護</p>
<p>6. 將動態內容轉為靜態後, 直接在線上 acp</p>
<p></p>
</td>
</tr>
<tr style="height: 78px;">
<td style="width: 78px; height: 78px;">localhost</td>
<td style="width: 78px; height: 78px;">
<p>SSH</p>
<p>Token</p>
</td>
<td style="width: 78px; height: 78px;">只有在 push 時需要上網</td>
<td style="width: 78px; height: 78px;">更新前儘量利用 git pull 與 github 倉儲保持同步</td>
<td style="width: 107.95px; height: 78px;">
<p>1. 決定要採用 SSH 或 https 維護倉儲</p>
<p>2. git clone --recurse --submodules 取下倉儲</p>
<p>3. 以 cms 開啟動態網站</p>
<p>4. 維護網站內容後轉靜態.</p>
<p>5. 在近端以 acp 將改版內容提交推向 github</p>
</td>
</tr>
</tbody>
</table>
<h3>rect_walk</h3>
<!-- 納入 Brython 環境 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<a href="/downloads/rect_walk_w_start_button_html.7z">本頁超文件檔案 </a><br/><br/><a href="https://mde.tw/content/Python.html?src=https://gist.githubusercontent.com/mdecycu/82d5d77b917a5d6c656233767afe4bea/raw/350ea45f6e3f130a15faf98c82b6475c7dcdfef4/rect_walk_add_start_button.py">綠色方塊行走程式 1</a></p>
<p><!-- 給定 brython_div1 division 標註 --></p>
<div id="brython_div1"><!-- 加入啟動按鈕後的 Rect 行走程式原始碼 -->
<script type="text/python">
# 這個程式用於 demo 綠色方塊沿著特定網格路徑行走
# 從 Brython 程式庫中的 browser 模組導入 document 類別, 並以簡寫設定為 doc
from browser import document as doc
# 從 browser 模組導入 html 類別, 主要用於建立 CANVAS 標註物件, 並插入頁面中
from browser import html
# 用於定時執行特定函式
import browser.timer
# 導入亂數模組
from random import random, randint

# 利用 html 建立一個 CANVAS 標註物件, 與變數 canvas 對應
canvas = html.CANVAS(width = 600, height = 600)
# 將 canvas 標註的 id 設為 "canvas"
canvas.id = "canvas"
# 將 document 中 id 為 "brython_div" 的標註 
# 設為與 brython_div 變數對應
brython_div = doc["brython_div1"]

# 建立 buttons
brython_div <= html.BUTTON("啟動", id="power")
brython_div <= html.BR()

# 將 canvas 標註放入 brython_div1 所在位置
# 頁面中原本就已經放入 <div id="brython_div"></div> 標註
brython_div <= canvas
# 將頁面中 id 為 canvas 的 CANVAS 設為與 canvas 變數對應
canvas = doc["canvas"]
# 將 canvas 的 2d 繪圖 context 命名為 ctx
ctx = canvas.getContext("2d")

# 建立一個 dRect() 函式
# s default 為 1, c defaul 為紅色
def dRect(lux, luy, w, h, s=1, c='#ff0000'):
    ctx.lineWidth = s
    ctx.strokeStyle = c
    ctx.beginPath();
    ctx.rect(lux, luy, w, h)
    ctx.stroke();
    
# 建立畫直線函式
def draw_line(x1, y1, x2, y2, color="#ff0000"):
    ctx.beginPath()
    ctx.moveTo(x1, y1)
    ctx.lineTo(x2, y2)
    ctx.strokeStyle = color
    ctx.stroke()

# 建立 write Text 函式
def wText(x, y, t, s=14, c='#0000ff'):
    ctx.font = str(s) + "px Arial";
    ctx.fillText(t, x, y)

# 定義畫格線的函式
def grid(startx, starty, w, h, wnum, hnum, pixel=1, color="#ff0000"):
    # 利用迴圈與座標增量繪圖
    # 因為輸入 wnum 與 hnum 為格子數, 畫格線數則需加上 1
    for i in range(wnum+1):
        for j in range(hnum+1):
            # 畫上下直線
            yend = starty + h*(hnum)
            xend = startx + w*(wnum)
            x = startx + i*w
            draw_line(x, starty, x, yend, color)
            # 畫左右直線
            y = starty + j*h
            draw_line(startx, y, xend, y, color)
            #wText(w/2-10, y-w/2, str(j))

# 從兩個座標點求中心點座標
def center(lx, ly, rx, ry):
    # lx is x coord of the left up corner
    # rx is the x coord of th right down corner
    x = (lx + rx)/2
    y = (ly + ry)/2
    return x, y
    
# 畫出填色方塊
def draw_rect(gx, gy, gw, gh, color="lime"):
    # gx is the grid coord at x direction
    # gy is the grid coord at y direction
    # gw is the with of the green rect
    # gh is the height of the green rect
    lx = origx + (gx-1)*w
    ly = origy + (gy-1)*h
    rx = origx + gx*w
    ry = origy + gy*h
    cx, cy = center(lx, ly, rx, ry)
    # glx is the x coord of the left corner
    # gly is the y coord of the left corner
    glx = cx - gw/2
    gly = cy - gh/2
    # 利用設定的顏色值畫出 rectangle
    ctx.fillStyle = color
    ctx.fillRect(glx, gly, gw, gh)

# 以白色覆蓋位於 (nowx, nowy) 
# 且比目標方塊長寬各大於 1 pixel的方塊
def wipe():
    draw_rect(nowx, nowy, 30+1, 30+1, color="white")

# 畫出位於 (nowx, nowy) 的綠色方塊
def draw():
    draw_rect(nowx, nowy, 30, 30, color="lime")

# 繞著外圍行走
def walk():
    global stepx, stepy
    # 向下
    if nowy < hnum and nowx == 1:
        stepx = 0
        stepy = 1
    # 向右
    elif nowx < wnum and nowy == hnum:
        stepx = 1
        stepy = 0
    # 向上
    elif nowy == hnum and nowx == wnum:
        stepx = 0
        stepy = -1
    # 向左
    elif nowx == wnum and nowy == 1:
        stepx = -1
        stepy = 0
        
# 每隔短暫時間即呼叫執行一次的函式
def game():
    # 因 nowx 與 nowy 在函式外宣告
    # 且在函式內改變對應值, 因此需宣告為 global
    global nowx, nowy
    walk()
    wipe()
    nowx += stepx
    nowy += stepy
    draw()

# 將 anim 設為 None
anim = None
 
def launchAnimation(ev):
    global anim
    # 初始啟動, anim 為 None
    if anim is None:
        # 每 0.08 秒執行一次 draw 函式繪圖
        #anim = timer.set_interval(draw, 80)
        anim = browser.timer.set_interval(game, 100)
        # 初始啟動後, 按鈕文字轉為"暫停"
        doc['power'].text = '暫停'
    elif anim == 'hold':
        # 當 anim 為 'hold' 表示曾經暫停後的啟動, 因此持續以 set_interval() 持續旋轉, 且將 power 文字轉為"暫停"
        #anim = timer.set_interval(draw, 80)
        anim = browser.timer.set_interval(game, 100)
        doc['power'].text = '暫停'
    else:
        # 初始啟動後, 使用者再按 power, 此時 anim 非 None 也不是 'hold', 因此會執行 clear_interval() 暫停
        # 且將 anim 變數設為 'hold', 且 power 文字轉為"繼續"
        #timer.clear_interval(anim)
        browser.timer.clear_interval(anim)
        anim = 'hold'
        doc['power'].text = '繼續'
        
# 綠色方塊起點座標與 x 及 y 方向的座標增量
nowx = 1
nowy = 1
stepx = 0
stepy = 0
# 設定格數
# width 方向格子數
wnum = 15
# height 方向格子數
hnum = 15
# 設定線寬
pixel = 1
# 設定 w 寬度
w = int(canvas.width/wnum) - pixel
# 設定 h 高度
h = int(canvas.height/hnum) - pixel
# 設定繪圖座標點起點位置
origx = 1
origy = 1
# 利用 grid 函式畫出格線
grid(origx, origy, w, h, wnum, hnum, pixel=1, color="black")

doc["power"].bind("click", launchAnimation)
#browser.timer.set_interval(game, 100)
</script>
<p>Reference:</p>
<p style="padding-left: 30px;"><a href="https://github.com/aroberge/reeborg">https://github.com/aroberge/reeborg</a></p>
<p style="padding-left: 30px;">from reeborg to CoppeliaSim and Webots</p>
</div>
<h3>Pyweb3D</h3>
<p><a href="https://betterprogramming.pub/three-js-with-python-syntax-pyweb3d-2152bed1a43d">https://betterprogramming.pub/three-js-with-python-syntax-pyweb3d-2152bed1a43d</a></p>
<h3>1b</h3>
<div id="brython_div1"><a href="https://mdecp2022.github.io/site-warsplte/content/w15.html">41123204</a><br/><a href="https://mdecp2022.github.io/site-Liu16552/content/w15.html">41123210</a><br/><a href="https://mdecp2022.github.io/site-leekuchu006/content/w15.html">41123211</a><br/><a href="https://mdecp2022.github.io/site-41123214/content/w15.html">41123214</a><br/><a href="https://mdecp2022.github.io/site-S41123216/content/w15.html">41123216</a><br/><a href="https://mdecp2022.github.io/site-12tony2/content/w15.html">41123217</a><br/><a href="https://mdecp2022.github.io/site-Changyou41123220/content/w15.html">41123220</a><br/><a href="https://mdecp2022.github.io/site-kao41123222/content/w15.html">41123222</a><br/><a href="https://mdecp2022.github.io/site-CHI-23/content/w15.html">41123223</a><br/><a href="https://mdecp2022.github.io/site-41123226/content/w15.html">41123226</a><br/><a href="https://mdecp2022.github.io/site-tianmiaox/content/w15.html">41123227</a><br/><a href="https://mdecp2022.github.io/site-41123237-Hank/content/w15.html">41123237</a><br/><a href="https://mdecp2022.github.io/site-41123241/content/w15.html">41123241</a><br/><a href="https://mdecp2022.github.io/site-a0408258/content/w15.html">41123243</a><br/><a href="https://mdecp2022.github.io/site-zxc-ops/content/w15.html">41123246</a><br/><a href="https://mdecp2022.github.io/site-41123251/content/w15.html">41123251</a></div>
<hr/>
<h2>w16</h2>
<h4>rect_walk</h4>
<!-- 納入 Brython 環境 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<!-- 給定 brython_div1 division 標註 --></p>
<div id="brython_div1"></div>
<!-- 加入啟動按鈕後的 Rect 行走程式原始碼 -->
<script type="text/python">
# 這個程式用於 demo 綠色方塊沿著特定網格路徑行走
# 從 Brython 程式庫中的 browser 模組導入 document 類別, 並以簡寫設定為 doc
from browser import document as doc
# 從 browser 模組導入 html 類別, 主要用於建立 CANVAS 標註物件, 並插入頁面中
from browser import html
# 用於定時執行特定函式
import browser.timer
# 導入亂數模組
from random import random, randint

# 利用 html 建立一個 CANVAS 標註物件, 與變數 canvas 對應
canvas = html.CANVAS(width = 600, height = 600)
# 將 canvas 標註的 id 設為 "canvas"
canvas.id = "canvas"
# 將 document 中 id 為 "brython_div" 的標註 
# 設為與 brython_div 變數對應
brython_div = doc["brython_div1"]

# 建立 buttons
brython_div <= html.BUTTON("啟動", id="power")
brython_div <= html.BR()

# 將 canvas 標註放入 brython_div1 所在位置
# 頁面中原本就已經放入 <div id="brython_div"></div> 標註
brython_div <= canvas
# 將頁面中 id 為 canvas 的 CANVAS 設為與 canvas 變數對應
canvas = doc["canvas"]
# 將 canvas 的 2d 繪圖 context 命名為 ctx
ctx = canvas.getContext("2d")

# 建立一個 dRect() 函式
# s default 為 1, c defaul 為紅色
def dRect(lux, luy, w, h, s=1, c='#ff0000'):
    ctx.lineWidth = s
    ctx.strokeStyle = c
    ctx.beginPath();
    ctx.rect(lux, luy, w, h)
    ctx.stroke();
    
# 建立畫直線函式
def draw_line(x1, y1, x2, y2, color="#ff0000"):
    ctx.beginPath()
    ctx.moveTo(x1, y1)
    ctx.lineTo(x2, y2)
    ctx.strokeStyle = color
    ctx.stroke()

# 建立 write Text 函式
def wText(x, y, t, s=14, c='#0000ff'):
    ctx.font = str(s) + "px Arial";
    ctx.fillText(t, x, y)

# 定義畫格線的函式
def grid(startx, starty, w, h, wnum, hnum, pixel=1, color="#ff0000"):
    # 利用迴圈與座標增量繪圖
    # 因為輸入 wnum 與 hnum 為格子數, 畫格線數則需加上 1
    for i in range(wnum+1):
        for j in range(hnum+1):
            # 畫上下直線
            yend = starty + h*(hnum)
            xend = startx + w*(wnum)
            x = startx + i*w
            draw_line(x, starty, x, yend, color)
            # 畫左右直線
            y = starty + j*h
            draw_line(startx, y, xend, y, color)
            #wText(w/2-10, y-w/2, str(j))

# 從兩個座標點求中心點座標
def center(lx, ly, rx, ry):
    # lx is x coord of the left up corner
    # rx is the x coord of th right down corner
    x = (lx + rx)/2
    y = (ly + ry)/2
    return x, y
    
# 畫出填色方塊
def draw_rect(gx, gy, gw, gh, color="lime"):
    # gx is the grid coord at x direction
    # gy is the grid coord at y direction
    # gw is the with of the green rect
    # gh is the height of the green rect
    lx = origx + (gx-1)*w
    ly = origy + (gy-1)*h
    rx = origx + gx*w
    ry = origy + gy*h
    cx, cy = center(lx, ly, rx, ry)
    # glx is the x coord of the left corner
    # gly is the y coord of the left corner
    glx = cx - gw/2
    gly = cy - gh/2
    # 利用設定的顏色值畫出 rectangle
    ctx.fillStyle = color
    ctx.fillRect(glx, gly, gw, gh)

# 以白色覆蓋位於 (nowx, nowy) 
# 且比目標方塊長寬各大於 1 pixel的方塊
def wipe():
    draw_rect(nowx, nowy, 30+1, 30+1, color="white")

# 畫出位於 (nowx, nowy) 的綠色方塊
def draw():
    draw_rect(nowx, nowy, 30, 30, color="lime")

# 繞著外圍行走
def walk():
    global stepx, stepy
    # 向下
    if nowy < hnum and nowx == 1:
        stepx = 0
        stepy = 1
    # 向右
    elif nowx < wnum and nowy == hnum:
        stepx = 1
        stepy = 0
    # 向上
    elif nowy == hnum and nowx == wnum:
        stepx = 0
        stepy = -1
    # 向左
    elif nowx == wnum and nowy == 1:
        stepx = -1
        stepy = 0
        
# 每隔短暫時間即呼叫執行一次的函式
def game():
    # 因 nowx 與 nowy 在函式外宣告
    # 且在函式內改變對應值, 因此需宣告為 global
    global nowx, nowy
    walk()
    wipe()
    nowx += stepx
    nowy += stepy
    draw()

# 將 anim 設為 None
anim = None
 
def launchAnimation(ev):
    global anim
    # 初始啟動, anim 為 None
    if anim is None:
        # 每 0.08 秒執行一次 draw 函式繪圖
        #anim = timer.set_interval(draw, 80)
        anim = browser.timer.set_interval(game, 100)
        # 初始啟動後, 按鈕文字轉為"暫停"
        doc['power'].text = '暫停'
    elif anim == 'hold':
        # 當 anim 為 'hold' 表示曾經暫停後的啟動, 因此持續以 set_interval() 持續旋轉, 且將 power 文字轉為"暫停"
        #anim = timer.set_interval(draw, 80)
        anim = browser.timer.set_interval(game, 100)
        doc['power'].text = '暫停'
    else:
        # 初始啟動後, 使用者再按 power, 此時 anim 非 None 也不是 'hold', 因此會執行 clear_interval() 暫停
        # 且將 anim 變數設為 'hold', 且 power 文字轉為"繼續"
        #timer.clear_interval(anim)
        browser.timer.clear_interval(anim)
        anim = 'hold'
        doc['power'].text = '繼續'
        
# 綠色方塊起點座標與 x 及 y 方向的座標增量
nowx = 1
nowy = 1
stepx = 0
stepy = 0
# 設定格數
# width 方向格子數
wnum = 15
# height 方向格子數
hnum = 15
# 設定線寬
pixel = 1
# 設定 w 寬度
w = int(canvas.width/wnum) - pixel
# 設定 h 高度
h = int(canvas.height/hnum) - pixel
# 設定繪圖座標點起點位置
origx = 1
origy = 1
# 利用 grid 函式畫出格線
grid(origx, origy, w, h, wnum, hnum, pixel=1, color="black")

doc["power"].bind("click", launchAnimation)
#browser.timer.set_interval(game, 100)
</script>
<h2>OOP</h2>
<p>物件導向範例, <a href="https://mde.tw/demo/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9df4b372ac1b7386cf259ced15f1a2b2/raw/767c617f853955a5def92cfb2926a064646e84c2/quiz_class_inheritant.py">執行下列程式</a>.</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># 導入 ast 模組是希望利用其 literal_eval() 將 dict 格式的字串轉為 dict 資料型別
# 以利隨後的取值運算
import ast
from browser import document

class quiz:
    def __init__(self, cname, url):
        self.cname = cname
        self.url = url

    # 定義一個函式, 以班級代號字串作為輸入, 可以傳回各班修課學員的學號數列
    def get_stud(self):
        # 將課程的班級代號字串作為 dict 的 key, 而 2022 fall 的課程代號作為對應值
        # 使用者可以利用班級代號從 courses dict 取出課程代號
        courses = {"1a": "0747", "1b": "0761", "2a": "0773", "2b": "0786"}
        # 利用 c_name 從 courses 得到該學期的課程代號
        c = courses[self.cname]
        # 利用課程代號從學校教務主機取的該班修課人員名單
        curl = "https://nfu.cycu.org/?semester=1111&amp;courseno=" + c + "&amp;column=True"
        # 讀出各修課人員資料後, 以跳行符號切割, 得到的 data 為數列
        data = open(curl).read().split("\n")
        # 因為最後一筆資料為空字串, 因此利用數列運算將其去除
        stud = data[:-1]
        # get_stud() 函式最後將對應班級的修課人員學號以數列格式傳回
        return stud
        
    def get_score(self):
        # 利用 open() 與 read() 讀取考試結果 JSON 檔案
        json_data = open(self.url).read()
        # 利用 ast.literal_eval() 將字串 dict, 轉為程式可用的 dict 資料型別
        big_dict = ast.literal_eval(json_data)
        # 從 big_dict 中, 取出 body 中的 testuser 欄位資料
        data = big_dict["body"]["testuser"]
        # 定義一個空 dict 資料變數, 隨後利用迴圈逐一將學號作為 key, 考試成績為 valude
        # 組成 quiz_dict 的資料內容, 以便之後可以用學號當作輸入, 取得該員考試成績
        quiz_dict = {}
        for i in data:
            # data 資料中的 user_name 為考試學員的帳號, 也就是學號
            stud_id = data[i]["user_name"]
            # data 資料中的 total_score 欄位為考試成績
            # 因為考試成績為字串, 先轉為浮點數後, 再轉為整數
            stud_score = int(float(data[i]["total_score"]))
            # 逐一以學號為 key, 考試成績為對應 value, 將資料放入 quiz_dict
            quiz_dict[stud_id] = stud_score
        # 取得各學員的考試成績 quiz_dict 後, 將資料傳回
        return quiz_dict

class stud(quiz):
    def __init__(self, cname, url, github_url):
        #super(stud, self).__init__(cname, url)
        super().__init__(cname, url)
        self.github_url = github_url

    
try:
    url = document.query["url"]
except:
    url = "https://gist.githubusercontent.com/mdecycu/9df4b372ac1b7386cf259ced15f1a2b2/raw/a6825f13b1bb0b61e09e74dd117729eefe1d947f/20221110_cp1b_w10_quiz.json"

try:
    cname =document.query["cname"]
except:
    cname = "1b"

github_url = ""
cpb_w14 = stud(cname, url, github_url)
cp_stud = cpb_w14.get_stud()
print(cp_stud)
'''
cp_score = cpb_w14.get_score()
print(cp_stud, cp_score)
'''</pre>
<p></p>
<h2>Brython</h2>
<p>有關 Pyscript:</p>
<p style="padding-left: 30px;"><a href="https://talkpython.fm/episodes/show/391/pyscript-powered-by-micropython">https://talkpython.fm/episodes/show/391/pyscript-powered-by-micropython</a></p>
<p><a href="https://www.zditect.com/main-advanced/python/brython-python-in-browser.html">https://www.zditect.com/main-advanced/python/brython-python-in-browser.html</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/459819939">【python】Brython：浏览器中的Python-第一篇 - 知乎 (zhihu.com)</a></p>
<p><a href="https://www.geeksforgeeks.org/introduction-to-brython/">Introduction to Brython - GeeksforGeeks</a></p>
<p><a href="https://www.it145.com/9/102373.html">【python】Brython：瀏覽器中的Python-第二篇 - IT145.com</a></p>
<p><a href="https://www.it145.com/9/102415.html">【python】Brython：瀏覽器中的Python-第四篇 - IT145.com</a></p>
<p><a href="https://www.it145.com/9/102475.html">【python】Brython：瀏覽器中的Python-第六篇 - IT145.com</a></p>
<p><a href="https://www.it145.com/9/102567.html">【python】Brython：瀏覽器中的Python-第七篇 - IT145.com</a></p>
<p><a href="https://www.it145.com/9/102581.html">【python】Brython：瀏覽器中的Python-第八篇 - IT145.com</a></p>
<p><a href="https://www.it145.com/9/102659.html">【python】Brython：瀏覽器中的Python-第十篇 - IT145.com</a></p>
<p><a href="https://www.it145.com/9/102658.html">【python】Brython：瀏覽器中的Python-最終篇 - IT145.com</a></p>
<p>Pyscript?:</p>
<p style="padding-left: 30px;"><a href="https://www.jhanley.com/blog/pyscript-javascript-and-python-interoperability/">https://www.jhanley.com/blog/pyscript-javascript-and-python-interoperability/</a>　</p>
<p style="padding-left: 30px;"><a href="https://realpython.com/pyscript-python-in-browser/">https://realpython.com/pyscript-python-in-browser/</a></p>
<p>學習 Brython 程式語言</p>
<p>執行 Three.js 相關 Brython 程式, 需要將 <a href="/downloads/py/pyweb3d.py">pyweb3d.py</a> 放入 downloads/py 目錄中ㄡ</p>
<p><a href="https://mde.tw/content/Python.html">https://mde.tw/content/Python.html</a></p>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<p>將 iterable 與 iterator <a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438">相關說明</a>, 利用 Brython 與 Ace Editor 整理在這個頁面.</p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button><button id="threejsblock">Rotating Block</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>
<h3>examples</h3>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import browser
browser.alert("機械設計")</pre>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from browser import window
window.alert("機械設計")</pre>
<p></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import re
'''
normalize_us_phone() 去除非數字與大寫或小寫字母的字串，而 is_valid_us_phone() 則檢查是否正好是十位數的字母
'''
def normalize_us_phone(phone: str) -&gt; str:
    """Extract numbers and digits from a given phone number"""
    return re.sub(r"[^\da-zA-z]", "", phone)

def is_valid_us_phone(phone: str) -&gt; bool:
    """Validate 10-digit phone number"""
    normalized_number = normalize_us_phone(phone)
    return re.match(r"^\d{10}$", normalized_number) is not None
    
print(is_valid_us_phone("1234567899"))</pre>
<p></p>
<h1>cad2022</h1>
<p><a href="https://nfu.cycu.org/?semester=1111&amp;courseno=0786&amp;column=True">2b 修課名單</a></p>
<p><a href="https://nfu.cycu.org/?semester=1111&amp;courseno=0773&amp;column=True">2a 修課名單</a></p>
<p><a href="https://en.tcheb.ru/">https://en.tcheb.ru/</a> Mechanism</p>
<p style="padding-left: 30px;"><a href="https://en.tcheb.ru/plantigrade-machine/">https://en.tcheb.ru/plantigrade-machine/</a></p>
<p><a href="https://nfuedu.sharepoint.com/:b:/s/cad2022/Ecl97yDSrdtMm1OjyA74X-UBXe5zuGKhAEgJuCeDp2iqaA?e=6n2ZWs">What is new in NX8.5.pdf</a> 能找到甚麼有用的資訊.</p>
<p><a href="https://www.nist.gov/services-resources/software/step-file-analyzer-and-viewer">STEP File Analyzer and Viewer | NIST</a> </p>
<p><a href="https://pages.nist.gov/CAD-PMI-Testing/step-file-viewer.html">https://pages.nist.gov/CAD-PMI-Testing/step-file-viewer.html</a></p>
<p><a href="https://github.com/usnistgov/STP2X3D">https://github.com/usnistgov/STP2X3D</a> in C++</p>
<p><a href="https://www.x3dom.org/">https://www.x3dom.org/</a></p>
<p>電腦輔助設計與實習課程</p>
<p>課程內容包括如何使用電腦輔助設計套件</p>
<p>以及如何轉檔之後轉入其他工程分析軟體</p>
<p>包括機電系統控制設計與模擬</p>
<p>在 Onshape 上繪製零組件: <a href="https://onshape.com">https://onshape.com</a></p>
<p>在 Solvespace 上繪製零組件: <a href="https://solvespace.com">https://solvespace.com</a> (自行編譯 <a href="https://github.com/solvespace/solvespace">Solvespace 原始碼</a>)</p>
<p>在 Siemens NX 上繪製零組件: <a href="https://nfuedu.sharepoint.com/:u:/s/cad2022/EclS-NMhqJ9JvCa-pIQ_jMsBQB1tipr_Zgc8kT8ha1kMtg?e=tQ7A1e">下載 NX2027.3401_lite_cad2022.7z</a> (必須登入 @nfu 所屬的 Teams)</p>
<p>利用 <a href="https://www.coppeliarobotics.com/">CoppeliaSim</a> 執行機電控制系統設計與模擬</p>
<p>利用 stud.cycu.org 動態網站整理上述工具實習流程與結果, 並同步內容至個人的 Github Pages 網站.</p>
<p>相關設計程式包含 server 端的 Python 與 browser 端的 brython, 其間透過 websocket 傳送設計變數.</p>
<p></p>
<h2>w8</h2>
<p>將隨身碟中的 <a href="https://github.com/solvespace/solvespace/releases/download/v3.1/solvespace.exe">Solvespace 3.1</a>, <a href="https://nfuedu.sharepoint.com/:u:/s/cad2022/EclS-NMhqJ9JvCa-pIQ_jMsBOLhmGLdxH5xv7JH8CHQMug?e=SMFg8L">NX2027 lite</a> 與瀏覽器中的 <a href="https://onshape.com/">Onshape</a> 同時開啟.</p>
<p><img alt="" height="538" src="/images/w8_onshape_solvespace_nx_drill_press.png" width="600"/></p>
<h2>cad2022_w15</h2>
<p><a href="https://mde.tw/content/Python.html?src=https://gist.githubusercontent.com/mdecycu/9df4b372ac1b7386cf259ced15f1a2b2/raw/cb4413b7e41a7e127af97e29572426932033346e/cad2022_w15_2a_list1.py">2a list w15</a></p>
<p><a href="/downloads/mable_machine_coppeliasim_v4.3.0rev12.7z">mable_machine_coppeliasim_v4.3.0rev12.7z</a></p>
<p><a href="https://github.com/scrum-1/scrum_cadp_final/tree/0e5a937c4430e9bfcf451d36529f5d17c84ee93b/eric6_project/marble_monitor">https://github.com/scrum-1/scrum_cadp_final/tree/0e5a937c4430e9bfcf451d36529f5d17c84ee93b/eric6_project/marble_monitor</a></p>
<p>2a failed stage1:</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">40723135 :no w15
40723136 :no w15
40723137 :no w15
40823248 :no w15
40871145 :no w15
40871150 :no w15
40939127 :no w15
40971234 :no w15
40971246 :no w15
41023102 :no w15
41023109 :no w15
41023111 :no w15
41023122 :no w15
41023128 :no w15
41023129 :no w15
41023134 :no w15
41023135 :no w15
41023137 :no w15
41023139 :no w15
41023142 :no w15
41023144 :no w15
41023150 :no w15
41023152 :no w15
41036114 :no w15
41036117 :no w15
41039138 :no w15
</pre>
<p>2a no wink video:</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">40723135 :no w15 wink video
40723136 :no w15 wink video
40723137 :no w15 wink video
40823248 :no w15 wink video
40871145 :no w15 wink video
40871150 :no w15 wink video
40939127 :no w15 wink video
40971234 :no w15 wink video
40971246 :no w15 wink video
41023102 :no w15 wink video
41023109 :no w15 wink video
41023111 :no w15 wink video
41023122 :no w15 wink video
41023128 :no w15 wink video
41023129 :no w15 wink video
41023134 :no w15 wink video
41023135 :no w15 wink video
41023139 :no w15 wink video
41023144 :no w15 wink video
41023150 :no w15 wink video
41023152 :no w15 wink video
41036114 :no w15 wink video
41036117 :no w15 wink video
41039138 :no w15 wink video</pre>
<p></p>
<h2>stud server</h2>
<h4>ps command</h4>
<p>ps axo pid,comm,user|grep "python3"</p>
<p>before w8:</p>
<p> 208291 python3         cad41023210<br/> 219678 python3         cad41023247<br/> 223605 python3         cad41023216<br/> 343086 python3         demo<br/> 352074 python3         cad41023219<br/> 353608 python3         cad41023212</p>
<h4>specifig port for certain user:</h4>
<p><a href="https://unix.stackexchange.com/questions/486945/restrict-local-port-access-to-a-specific-user">https://unix.stackexchange.com/questions/486945/restrict-local-port-access-to-a-specific-user</a></p>
<p>ip6tables -I OUTPUT -o lo -p tcp --dport 5000 --match owner --uid-owner 1000 -j DROP</p>
<p><a href="https://github.com/hkbakke/fwgen">https://github.com/hkbakke/fwgen</a></p>
<p><a href="https://unix.stackexchange.com/questions/94357/find-out-current-working-directory-of-a-running-process">https://unix.stackexchange.com/questions/94357/find-out-current-working-directory-of-a-running-process</a></p>
<p>pwdx &lt;PID&gt; to get process working directory</p>
<h3>cadw7</h3>
<p>stage1</p>
<p>152815 python3 cad41023240<br/> 189883 python3 demo<br/> 208291 python3 cad41023210<br/> 219678 python3 cad41023247<br/> 223605 python3 cad41023216<br/> 256296 python3 cad41023124<br/> 257116 python3 cad41023118<br/> 257188 python3 cad41023119</p>
<p>stage2</p>
<p>152815 python3 cad41023240<br/> 189883 python3 demo<br/> 208291 python3 cad41023210<br/> 219678 python3 cad41023247<br/> 223605 python3 cad41023216<br/> 256296 python3 cad41023124<br/> 260052 python3 cad41023122<br/> 264526 python3 cad41023143<br/> 277902 python3 cad41023133<br/> 281016 python3 cad41023119<br/> 283220 python3 cad41023138<br/> 287930 python3 cad41023104<br/> 288921 python3 cad41023154<br/> 290114 python3 cad41023110<br/> 291175 python3 cad41023126<br/> 291606 python3 cad41023108<br/> 292904 python3 cad41023120</p>
<h3>websocket</h3>
<p><a href="https://snyk.io/blog/how-to-build-a-secure-websocket-server-in-python/">https://snyk.io/blog/how-to-build-a-secure-websocket-server-in-python/</a>　?</p>
<p>網際前端與網際後端傳送設計參數, 若 stud server 可以安裝 NX, 則使用者可以從網際前端將設計變數送到 server 後, 將此設計變數透過 NXOpen 驅動 NX 改變零件尺寸或組立位置.</p>
<p>相同機制, 也可以從網際前端將操控 Web based CoppeliaSim 的控制變數送到  server 端後, 直接操控網際場景中作動的機電系統模擬. 例如: 使用者在網際前端送出控制手足球一端連桿的平移距離與速度, 然後經由手足球 server 端的 Python 程式接收後, 以 Remote API 程式架構控制手足球場景.</p>
<p>Websocket client: <a href="https://github.com/websocket-client/websocket-client">https://github.com/websocket-client/websocket-client</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># pip install websocket-client rel
import websocket
import _thread
import time
import rel

def on_message(ws, message):
    print(message)

def on_error(ws, error):
    print(error)

def on_close(ws, close_status_code, close_msg):
    print("### closed ###")

def on_open(ws):
    print("Opened connection")

if __name__ == "__main__":
    websocket.enableTrace(True)
    ''''
    ws = websocket.WebSocketApp("wss://api.gemini.com/v1/marketdata/BTCUSD",
                              on_open=on_open,
                              on_message=on_message,
                              on_error=on_error,
                              on_close=on_close)
    '''
    ws = websocket.WebSocketApp("ws://localhost:13254",
                              on_open=on_open,
                              on_message=on_message,
                              on_error=on_error,
                              on_close=on_close)
    ws.run_forever(dispatcher=rel)  # Set dispatcher to automatic reconnection
    rel.signal(2, rel.abort)  # Keyboard Interrupt
    rel.dispatch()</pre>
<p>Wesocket server: <a href="https://github.com/Pithikos/python-websocket-server">https://github.com/Pithikos/python-websocket-server</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># pip install websocket-server
import logging
from websocket_server import WebsocketServer

def new_client(client, server):
	server.send_message_to_all("Hey all, a new client has joined us")

server = WebsocketServer(host='127.0.0.1', port=13254, loglevel=logging.INFO)
server.set_fn_new_client(new_client)
server.run_forever()</pre>
<p></p>
<h2>File format</h2>
<h3>STEP</h3>
<p>The standard STEP AP242 (ISO 10303-242) “Managed model based 3D engineering" is the merging of  2 ISO standards:<br/><br/>- Aerospace's STEP AP203 "Configuration controlled 3D design",<br/>- and Automotive's STEP AP214 "Core data for automotive mechanical design processes.</p>
<h3>STL</h3>
<p><a href="https://www.adobe.com/creativecloud/file-types/image/vector/stl-file.html">https://www.adobe.com/creativecloud/file-types/image/vector/stl-file.html</a></p>
<p><a href="https://en.wikipedia.org/wiki/STL_(file_format)">https://en.wikipedia.org/wiki/STL_(file_format)</a></p>
<p><a href="https://github.com/omrips/viewstl">https://github.com/omrips/viewstl</a></p>
<p><a href="https://github.com/topics/stl-viewer?l=javascript">https://github.com/topics/stl-viewer?l=javascript</a></p>
<p><a href="https://github.com/kaitlynhova/Three.js-STL-Viewer">https://github.com/kaitlynhova/Three.js-STL-Viewer</a></p>
<p>CoppeliaSim 場景中 mesh 標註下的 STL 檔案格式:</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">&lt;vertices&gt;-0.004635 0.044802 -0.249992 -0.005164 0.006398 -0.249999 -0.013524 0.042962 -0.249993 0.004635 0.044802 -0.249992 0.013708 0.042903 -0.249993 0.022032 0.039279 -0.249993 0.029182 0.034297 -0.249994 0.034929 0.028415 -0.249995 -0.021544 0.039549 -0.249993 -0.029183 -0.034214 -0.250005 0.006868 -0.010323 -0.250001 -0.022032 -0.039196 -0.250006 0.044760 0.004677 -0.249999 0.042921 0.013567 -0.249997 0.044762 -0.004593 -0.250001 0.042861 -0.013667 -0.250003 0.039238 -0.021989 -0.250003 0.034255 -0.029140 -0.250005 0.028373 -0.034887 -0.250005 0.021544 -0.039467 -0.250006 0.013523 -0.042877 -0.250007 0.004635 -0.044720 -0.250007 -0.004636 -0.044720 -0.250007 -0.013710 -0.042819 -0.250007 -0.034929 -0.028331 -0.250005 -0.039508 -0.021501 -0.250003 -0.042920 -0.013481 -0.250003 -0.044762 -0.004593 -0.250001 -0.044761 0.004677 -0.249999 -0.042861 0.013751 -0.249997 -0.039237 0.022074 -0.249996 -0.034254 0.029225 -0.249995 -0.028373 0.034969 -0.249994 0.039508 0.021586 -0.249996 0.013524 -0.042961 0.249993 0.004635 -0.044803 0.249993 0.039508 0.021503 0.250004 0.042921 0.013483 0.250003 0.034255 -0.029223 0.249995 0.039238 -0.022072 0.249997 0.034929 0.028332 0.250005 0.028373 -0.034970 0.249995 -0.004636 -0.044801 0.249993 -0.013709 -0.042902 0.249993 -0.022032 -0.039280 0.249994 0.021544 -0.039549 0.249994 -0.029182 -0.034297 0.249995 -0.034928 -0.028414 0.249995 -0.044761 0.004594 0.250001 -0.044761 -0.004676 0.250000 -0.021544 0.039467 0.250006 0.004635 0.044719 0.250008 -0.004635 0.044719 0.250008 0.013708 0.042819 0.250008 -0.013524 0.042878 0.250008 0.022032 0.039196 0.250006 0.029182 0.034213 0.250006 -0.042861 0.013668 0.250003 -0.028373 0.034886 0.250006 0.044762 -0.004677 0.250000 0.044760 0.004594 0.250001 0.042862 -0.013750 0.249998 -0.039508 -0.021585 0.249997 -0.006356 -0.005204 0.250000 -0.042919 -0.013565 0.249998 0.008847 0.008697 0.250002 -0.034254 0.029141 0.250005 -0.039237 0.021991 0.250004&lt;/vertices&gt;
&lt;indices&gt;0 1 2 3 1 0 4 1 3 5 1 4 6 1 5 7 1 6 2 1 8 9 10 11 12 10 13 14 10 12 15 10 14 16 10 15 17 10 16 18 10 17 19 10 18 20 10 19 21 10 20 22 10 21 23 10 22 11 10 23 24 10 9 24 1 7 25 1 24 26 1 25 27 1 26 28 1 27 29 1 28 30 1 29 31 1 30 32 1 31 8 1 32 13 10 33 34 35 20 36 37 33 38 16 39 17 16 38 7 36 33 40 36 7 41 17 38 18 17 41 42 21 35 22 21 42 43 22 42 23 22 43 20 35 21 33 37 13 44 23 43 11 23 44 19 34 20 45 34 19 46 11 44 9 11 46 18 45 19 41 45 18 47 9 46 24 9 47 48 27 49 28 27 48 32 50 8 51 0 52 3 0 51 53 3 51 4 3 53 2 52 0 54 52 2 55 4 53 5 4 55 8 54 2 50 54 8 56 5 55 6 5 56 57 28 48 58 50 32 40 6 56 7 6 40 59 12 60 14 12 59 61 14 59 15 14 61 13 60 12 37 60 13 39 15 61 16 15 39 62 63 64 51 65 53 52 65 51 54 65 52 50 65 54 58 65 50 58 63 41 66 63 58 67 63 66 57 63 67 48 63 57 49 63 48 64 63 49 53 65 55 47 63 62 46 63 47 44 63 46 43 63 44 42 63 43 35 63 42 34 63 35 45 63 34 41 63 45 7 33 24 33 10 24 32 31 58 29 28 57 26 49 27 64 49 26 67 29 57 30 29 67 25 64 26 62 64 25 66 30 67 31 30 66 24 62 25 47 62 24 58 31 66 41 38 58 38 65 58 39 65 38 61 65 39 59 65 61 60 65 59 37 65 60 36 65 37 40 65 36 56 65 40 55 65 56&lt;/indices&gt;
</pre>
<p></p>
<h3>DAE</h3>
<p><a href="https://docs.fileformat.com/3d/dae/">DAE - Digital Asset Exchange File Format</a></p>
<h2>Solvespace</h2>
<p><a href="/downloads/goal_keeper_fosball_solvespace.7z">goal_keeper_fosball_solvespace.7z</a> (w11 solvespace and CoppeliaSim v4.4.0rev0)</p>
<p><a href="https://github.com/solvespace/solvespace/milestone/4">https://github.com/solvespace/solvespace/milestone/4</a></p>
<p><a href="https://www.inapps.net/how-solvespace-is-retooling-its-3d-cad-open-source-community-inapps-2022/">https://www.inapps.net/how-solvespace-is-retooling-its-3d-cad-open-source-community-inapps-2022/</a></p>
<p><a href="https://github.com/KmolYuan/solvespace">https://github.com/KmolYuan/solvespace</a></p>
<p><a href="https://hackaday.com/2020/07/16/freecad-vs-solvespace/">https://hackaday.com/2020/07/16/freecad-vs-solvespace/</a></p>
<p><span>利用 <a href="https://nfuedu.sharepoint.com/:u:/s/cad2022/Eb7vLI6zX5BOrvj1Gc0M3N8BljxC8i5qp-ftW-PLZT7j7w?e=tXGqbO">portable_2022_fall_13GB.7z</a></span><span>, 完成編譯.</span></p>
<p>由於利用<span> </span><a href="https://www.msys2.org/">MSYS2</a><span> </span>編譯 Solvespace, 需要 install cmake</p>
<p>pacman -S mingw-w64-x86_64-cmake</p>
<p>而且必須 rename Y:\msys64_20210419\mingw64\bin\sh.exe 與 Y:\portablegit_2.31.1\bin\sh.exe 換成其他名稱.</p>
<p>git clone --recurse-submodules https://github.com/solvespace/solvespace.git<br/>cd solvespace<br/>mkdir build<br/>cd build<br/>cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release<br/>make<br/><br/>need libwinpthread-1.dll to execute solvespace.exe</p>
<p>Reference:</p>
<p><a href="https://www.researchgate.net/profile/Zackary-Stull/publication/311764735_Evaluation_and_Adaptation_of_Open-Source_Development_Tools_for_Mechatronic_Systems/links/58594d9908aeabd9a58b4488/Evaluation-and-Adaptation-of-Open-Source-Development-Tools-for-Mechatronic-Systems.pdf?origin=publication_detail">https://www.researchgate.net/profile/Zackary-Stull/publication/311764735_Evaluation_and_Adaptation_of_Open-Source_Development_Tools_for_Mechatronic_Systems/links/58594d9908aeabd9a58b4488/Evaluation-and-Adaptation-of-Open-Source-Development-Tools-for-Mechatronic-Systems.pdf?origin=publication_detail</a></p>
<h3>w12-solvespace</h3>
<p>研究如何將 <a href="https://m-labs.hk/software/solvespace/">SolveSpace | M-Labs</a> 中的零組件 stl 導入模式放入 CMSiMDE</p>
<p><a href="http://hammerjs.github.io/">Hammer.JS - Hammer.js (hammerjs.github.io)</a> 為 Touch Gesture library</p>
<p><a href="https://m-labs.hk/js/three-r76.js">https://m-labs.hk/js/three-r76.js</a> 是 Three.js library</p>
<p><a href="https://m-labs.hk/js/SolveSpaceControls.js">https://m-labs.hk/js/SolveSpaceControls.js</a> 則是 Solvespace 零件控制 library</p>
<p><a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/devicePixelRatio">Window.devicePixelRatio - Web APIs | MDN (mozilla.org)</a> </p>
<p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/call">Function.prototype.call() - JavaScript | MDN (mozilla.org)</a> </p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">window.devicePixelRatio = window.devicePixelRatio || 1;

SolvespaceCamera = function(renderWidth, renderHeight, scale, up, right, offset) {
    THREE.Camera.call(this);

    this.type = 'SolvespaceCamera';

    this.renderWidth = renderWidth;
    this.renderHeight = renderHeight;
    this.zoomScale = scale; /* Avoid namespace collision w/ THREE.Object.scale */
    this.up = up;
    this.right = right;
    this.offset = offset;
    this.depthBias = 0;

    this.updateProjectionMatrix();
};

SolvespaceCamera.prototype = Object.create(THREE.Camera.prototype);
SolvespaceCamera.prototype.constructor = SolvespaceCamera;
SolvespaceCamera.prototype.updateProjectionMatrix = function() {
    var temp = new THREE.Matrix4();
    var offset = new THREE.Matrix4().makeTranslation(this.offset.x, this.offset.y, this.offset.z);
    // Convert to right handed- do up cross right instead.
    var n = new THREE.Vector3().crossVectors(this.up, this.right);
    var rotate = new THREE.Matrix4().makeBasis(this.right, this.up, n);
    rotate.transpose();
    /* FIXME: At some point we ended up using row-major.
       THREE.js wants column major. Scale/depth correct unaffected b/c diagonal
       matrices remain the same when transposed. makeTranslation also makes
       a column-major matrix. */

    /* TODO: If we want perspective, we need an additional matrix
       here which will modify w for perspective divide. */
    var scale = new THREE.Matrix4().makeScale(2 * this.zoomScale / this.renderWidth,
        2 * this.zoomScale / this.renderHeight, this.zoomScale / 30000.0);

    temp.multiply(scale);
    temp.multiply(rotate);
    temp.multiply(offset);

    this.projectionMatrix.copy(temp);
};

SolvespaceCamera.prototype.NormalizeProjectionVectors = function() {
    /* After rotating, up and right may no longer be orthogonal.
    However, their cross product will produce the correct
    rotated plane, and we can recover an orthogonal basis. */
    var n = new THREE.Vector3().crossVectors(this.right, this.up);
    this.up = new THREE.Vector3().crossVectors(n, this.right);
    this.right.normalize();
    this.up.normalize();
};

SolvespaceCamera.prototype.rotate = function(right, up) {
    var oldRight = new THREE.Vector3().copy(this.right).normalize();
    var oldUp = new THREE.Vector3().copy(this.up).normalize();
    this.up.applyAxisAngle(oldRight, up);
    this.right.applyAxisAngle(oldUp, right);
    this.NormalizeProjectionVectors();
}

SolvespaceCamera.prototype.offsetProj = function(right, up) {
    var shift = new THREE.Vector3(right * this.right.x + up * this.up.x,
        right * this.right.y + up * this.up.y,
        right * this.right.z + up * this.up.z);
    this.offset.add(shift);
}

/* Calculate the offset in terms of up and right projection vectors
that will preserve the world coordinates of the current mouse position after
the zoom. */
SolvespaceCamera.prototype.zoomTo = function(x, y, delta) {
    // Get offset components in world coordinates, in terms of up/right.
    var projOffsetX = this.offset.dot(this.right);
    var projOffsetY = this.offset.dot(this.up);

    /* Remove offset before scaling so, that mouse position changes
    proportionally to the model and independent of current offset. */
    var centerRightI = x/this.zoomScale - projOffsetX;
    var centerUpI = y/this.zoomScale - projOffsetY;
    var zoomFactor;

    /* Zoom 20% every 100 delta. */
    if(delta &lt; 0) {
        zoomFactor = (-delta * 0.002 + 1);
    }
    else if(delta &gt; 0) {
        zoomFactor = (delta * (-1.0/600.0) + 1)
    }
    else {
        return;
    }

    this.zoomScale = this.zoomScale * zoomFactor;
    var centerRightF = x/this.zoomScale - projOffsetX;
    var centerUpF = y/this.zoomScale - projOffsetY;

    this.offset.addScaledVector(this.right, centerRightF - centerRightI);
    this.offset.addScaledVector(this.up, centerUpF - centerUpI);
}


SolvespaceControls = function(object, domElement) {
    var _this = this;
    this.object = object;
    this.domElement = ( domElement !== undefined ) ? domElement : document;

    var threePan = new Hammer.Pan({event : 'threepan', pointers : 3, enable : false});
    var panAfterTap = new Hammer.Pan({event : 'panaftertap', enable : false});

    this.touchControls = new Hammer.Manager(domElement, {
        recognizers: [
            [Hammer.Pinch, { enable: true }],
            [Hammer.Pan],
            [Hammer.Tap],
        ]
    });

    this.touchControls.add(threePan);
    this.touchControls.add(panAfterTap);

    var changeEvent = {
        type: 'change'
    };
    var startEvent = {
        type: 'start'
    };
    var endEvent = {
        type: 'end'
    };

    var _changed = false;
    var _mouseMoved = false;
    //var _touchPoints = new Array();
    var _offsetPrev = new THREE.Vector2(0, 0);
    var _offsetCur = new THREE.Vector2(0, 0);
    var _rotatePrev = new THREE.Vector2(0, 0);
    var _rotateCur = new THREE.Vector2(0, 0);

    // Used during touch events.
    var _rotateOrig = new THREE.Vector2(0, 0);
    var _offsetOrig = new THREE.Vector2(0, 0);
    var _prevScale = 1.0;

    this.handleEvent = function(event) {
        if (typeof this[event.type] == 'function') {
            this[event.type](event);
        }
    }

    function mousedown(event) {
        event.preventDefault();
        event.stopPropagation();

        switch (event.button) {
            case 0:
                _rotateCur.set(event.screenX/window.devicePixelRatio, event.screenY/window.devicePixelRatio);
                _rotatePrev.copy(_rotateCur);
                document.addEventListener('mousemove', mousemove, false);
                document.addEventListener('mouseup', mouseup, false);
                break;
            case 2:
                _offsetCur.set(event.screenX/window.devicePixelRatio, event.screenY/window.devicePixelRatio);
                _offsetPrev.copy(_offsetCur);
                document.addEventListener('mousemove', mousemove, false);
                document.addEventListener('mouseup', mouseup, false);
                break;
            default:
                break;
        }
    }

    function wheel( event ) {
        event.preventDefault();
        /* FIXME: Width and height might not be supported universally, but
        can be calculated? */
        var box = _this.domElement.getBoundingClientRect();
        object.zoomTo(event.clientX - box.width/2 - box.left,
             -(event.clientY - box.height/2 - box.top), event.deltaY);
        _changed = true;
    }

    function mousemove(event) {
        switch (event.button) {
            case 0:
                _rotateCur.set(event.screenX/window.devicePixelRatio, event.screenY/window.devicePixelRatio);
                var diff = new THREE.Vector2().subVectors(_rotateCur, _rotatePrev)
                    .multiplyScalar(1 / object.zoomScale);
                object.rotate(-0.3 * Math.PI / 180 * diff.x * object.zoomScale,
                     -0.3 * Math.PI / 180 * diff.y * object.zoomScale);
                _changed = true;
                _rotatePrev.copy(_rotateCur);
                break;
            case 2:
                _mouseMoved = true;
                _offsetCur.set(event.screenX/window.devicePixelRatio, event.screenY/window.devicePixelRatio);
                var diff = new THREE.Vector2().subVectors(_offsetCur, _offsetPrev)
                    .multiplyScalar(1 / object.zoomScale);
                object.offsetProj(diff.x, -diff.y);
                _changed = true;
                _offsetPrev.copy(_offsetCur)
                break;
        }
    }


    function mouseup(event) {
        /* TODO: Opera mouse gestures will intercept this event, making it
        possible to have multiple mousedown events consecutively without
        a corresponding mouseup (so multiple viewports can be rotated/panned
        simultaneously). Disable mouse gestures for now. */
        event.preventDefault();
        event.stopPropagation();

        document.removeEventListener('mousemove', mousemove);
        document.removeEventListener('mouseup', mouseup);

        _this.dispatchEvent(endEvent);
    }

    function pan(event) {
        /* neWcur - prev does not necessarily equal (cur + diff) - prev.
        Floating point is not associative. */
        touchDiff = new THREE.Vector2(event.deltaX, event.deltaY);
        _rotateCur.addVectors(_rotateOrig, touchDiff);
        incDiff = new THREE.Vector2().subVectors(_rotateCur, _rotatePrev)
            .multiplyScalar(1 / object.zoomScale);
        object.rotate(-0.3 * Math.PI / 180 * incDiff.x * object.zoomScale,
             -0.3 * Math.PI / 180 * incDiff.y * object.zoomScale);
        _changed = true;
        _rotatePrev.copy(_rotateCur);
    }

    function panstart(event) {
        /* TODO: Dynamically enable pan function? */
        _rotateOrig.copy(_rotateCur);
    }

    function pinchstart(event) {
        _prevScale = event.scale;
    }

    function pinch(event) {
        /* FIXME: Width and height might not be supported universally, but
        can be calculated? */
        var box = _this.domElement.getBoundingClientRect();

        /* 16.6... pixels chosen heuristically... matches my touchpad. */
        if (event.scale &lt; _prevScale) {
            object.zoomTo(event.center.x - box.width/2 - box.left,
                 -(event.center.y - box.height/2 - box.top), 100/6.0);
            _changed = true;
        } else if (event.scale &gt; _prevScale) {
            object.zoomTo(event.center.x - box.width/2 - box.left,
                 -(event.center.y - box.height/2 - box.top), -100/6.0);
            _changed = true;
        }

        _prevScale = event.scale;
    }

    /* A tap will enable panning/disable rotate. */
    function tap(event) {
        panAfterTap.set({enable : true});
        _this.touchControls.get('pan').set({enable : false});
    }

    function panaftertap(event) {
        touchDiff = new THREE.Vector2(event.deltaX, event.deltaY);
        _offsetCur.addVectors(_offsetOrig, touchDiff);
        incDiff = new THREE.Vector2().subVectors(_offsetCur, _offsetPrev)
            .multiplyScalar(1 / object.zoomScale);
        object.offsetProj(incDiff.x, -incDiff.y);
        _changed = true;
        _offsetPrev.copy(_offsetCur);
    }

    function panaftertapstart(event) {
        _offsetOrig.copy(_offsetCur);
    }

    function panaftertapend(event) {
        panAfterTap.set({enable : false});
        _this.touchControls.get('pan').set({enable : true});
    }

    function contextmenu(event) {
        event.preventDefault();
    }

    this.update = function() {
        if (_changed) {
            _this.dispatchEvent(changeEvent);
            _changed = false;
        }
    }

    this.domElement.addEventListener('mousedown', mousedown, false);
    this.domElement.addEventListener('wheel', wheel, false);
    this.domElement.addEventListener('contextmenu', contextmenu, false);

    /* Hammer.on wraps addEventListener */
    // Rotate
    this.touchControls.on('pan', pan);
    this.touchControls.on('panstart', panstart);

    // Zoom
    this.touchControls.on('pinch', pinch);
    this.touchControls.on('pinchstart', pinchstart);

    //Pan
    this.touchControls.on('tap', tap);
    this.touchControls.on('panaftertapstart', panaftertapstart);
    this.touchControls.on('panaftertap', panaftertap);
    this.touchControls.on('panaftertapend', panaftertapend);
}

SolvespaceControls.prototype = Object.create(THREE.EventDispatcher.prototype);
SolvespaceControls.prototype.constructor = SolvespaceControls;


solvespace = function(obj, params) {
    var scene, edgeScene, camera, edgeCamera, renderer;
    var geometry, controls, material, mesh, edges;
    var width, height, scale, offset;
    var directionalLightArray = [];

    if (typeof params === "undefined" || !("width" in params)) {
        width = window.innerWidth;
    } else {
        width = params.width;
    }

    if (typeof params === "undefined" || !("height" in params)) {
        height = window.innerHeight;
    } else {
        height = params.height;
    }

    if (typeof params === "undefined" || !("scale" in params)) {
        scale = 5;
    } else {
        scale = params.scale;
    }

    if (typeof params === "undefined" || !("offset" in params)) {
        offset = new THREE.Vector3(0, 0, 0);
    } else {
        offset = params.offset;
    }

    width *= window.devicePixelRatio;
    height *= window.devicePixelRatio;

    domElement = init();
    render();
    return domElement;


    function init() {
        scene = new THREE.Scene();
        edgeScene = new THREE.Scene();

        camera = new SolvespaceCamera(width/window.devicePixelRatio,
            height/window.devicePixelRatio, scale, new THREE.Vector3(0, 1, 0),
            new THREE.Vector3(0.5, 0, -0.5).normalize(), offset);

        mesh = createMesh(obj);
        scene.add(mesh);
        edges = createEdges(obj);
        edgeScene.add(edges);

        for (var i = 0; i &lt; obj.lights.d.length; i++) {
            var lightColor = new THREE.Color(obj.lights.d[i].intensity,
                obj.lights.d[i].intensity, obj.lights.d[i].intensity);
            var directionalLight = new THREE.DirectionalLight(lightColor, 1);
            directionalLight.position.set(obj.lights.d[i].direction[0],
                obj.lights.d[i].direction[1], obj.lights.d[i].direction[2]);
            directionalLightArray.push(directionalLight);
            scene.add(directionalLight);
        }

        var lightColor = new THREE.Color(obj.lights.a, obj.lights.a, obj.lights.a);
        var ambientLight = new THREE.AmbientLight(lightColor.getHex());
        scene.add(ambientLight);

        renderer = new THREE.WebGLRenderer({ antialias: true});
        renderer.setSize(width, height);
        renderer.autoClear = false;
        renderer.domElement.style = "width:"+width/window.devicePixelRatio+"px;height:"+height/window.devicePixelRatio+"px;";

        controls = new SolvespaceControls(camera, renderer.domElement);
        controls.addEventListener("change", render);
        controls.addEventListener("change", lightUpdate);

        animate();
        return renderer.domElement;
    }

    function animate() {
        requestAnimationFrame(animate);
        controls.update();
    }

    function render() {
        var context = renderer.getContext();
        camera.updateProjectionMatrix();
        renderer.clear();

        context.depthRange(0.1, 1);
        renderer.render(scene, camera);

        context.depthRange(0.1-(2/60000.0), 1-(2/60000.0));
        renderer.render(edgeScene, camera);
    }

    function lightUpdate() {
        var changeBasis = new THREE.Matrix4();

        // The original light positions were in camera space.
        // Project them into standard space using camera's basis
        // vectors (up, target, and their cross product).
        n = new THREE.Vector3().crossVectors(camera.up, camera.right);
        changeBasis.makeBasis(camera.right, camera.up, n);

        for (var i = 0; i &lt; 2; i++) {
            var newLightPos = changeBasis.applyToVector3Array(
                [obj.lights.d[i].direction[0], obj.lights.d[i].direction[1],
                    obj.lights.d[i].direction[2]]);
            directionalLightArray[i].position.set(newLightPos[0],
                newLightPos[1], newLightPos[2]);
        }
    }

    function createMesh(meshObj) {
        var geometry = new THREE.Geometry();
        var materialIndex = 0;
        var materialList = [];
        var opacitiesSeen = {};

        for (var i = 0; i &lt; meshObj.points.length; i++) {
            geometry.vertices.push(new THREE.Vector3(meshObj.points[i][0],
                meshObj.points[i][1], meshObj.points[i][2]));
        }

        for (var i = 0; i &lt; meshObj.faces.length; i++) {
            var currOpacity = ((meshObj.colors[i] &amp; 0xFF000000) &gt;&gt;&gt; 24) / 255.0;
            if (opacitiesSeen[currOpacity] === undefined) {
                opacitiesSeen[currOpacity] = materialIndex;
                materialIndex++;
                materialList.push(new THREE.MeshLambertMaterial({
                    vertexColors: THREE.FaceColors,
                    opacity: currOpacity,
                    transparent: true,
                    side: THREE.DoubleSide
                }));
            }

            geometry.faces.push(new THREE.Face3(meshObj.faces[i][0],
                meshObj.faces[i][1], meshObj.faces[i][2],
                [new THREE.Vector3(meshObj.normals[i][0][0],
                    meshObj.normals[i][0][1], meshObj.normals[i][0][2]),
                 new THREE.Vector3(meshObj.normals[i][1][0],
                    meshObj.normals[i][1][1], meshObj.normals[i][1][2]),
                 new THREE.Vector3(meshObj.normals[i][2][0],
                    meshObj.normals[i][2][1], meshObj.normals[i][2][2])],
                new THREE.Color(meshObj.colors[i] &amp; 0x00FFFFFF),
                opacitiesSeen[currOpacity]));
        }

        geometry.computeBoundingSphere();
        return new THREE.Mesh(geometry, new THREE.MultiMaterial(materialList));
    }

    function createEdges(meshObj) {
        var geometry = new THREE.Geometry();
        var material = new THREE.LineBasicMaterial();

        for (var i = 0; i &lt; meshObj.edges.length; i++) {
            geometry.vertices.push(new THREE.Vector3(meshObj.edges[i][0][0],
                    meshObj.edges[i][0][1], meshObj.edges[i][0][2]),
                new THREE.Vector3(meshObj.edges[i][1][0],
                    meshObj.edges[i][1][1], meshObj.edges[i][1][2]));
        }

        geometry.computeBoundingSphere();
        return new THREE.LineSegments(geometry, material);
    }
};


function findBootstrapEnvironment() {
    let envs = ['xs', 'sm', 'md', 'lg', 'xl'];

    let el = document.createElement('div');
    document.body.appendChild(el);

    let curEnv = envs.shift();

    for (let env of envs.reverse()) {
      el.classList.add(`d-${env}-none`);

      if (window.getComputedStyle(el).display === 'none') {
        curEnv = env;
        break;
      }
    }

    document.body.removeChild(el);
    return curEnv;
}

function load_treejs_model(model_id, model_solvespace, model_param) {
    let node = document.getElementById(model_id);
    node.parentNode.replaceChild(
        solvespace(model_solvespace, model_param),
        node
    );
}

var bootstrap_env = findBootstrapEnvironment();</pre>
<p></p>
<h2>Onshape</h2>
<p><a href="https://www.onshape.com/en/education/">https://www.onshape.com/en/education/</a></p>
<p><a href="https://learn.onshape.com/catalog?labels=%5B%22Self-Paced%20Courses%22%5D&amp;values=%5B%22All%22%5D">self-path learning </a></p>
<p><a href="https://cad.onshape.com/documents/349085d7029902d4ce9e141d/w/2f10eab3484f8addb1157a25/e/e29b5743830bcea674ae2bcd?renderMode=0&amp;uiState=63524dc50594ef47ab72b47f">Drill Press 鑽床</a></p>
<p><iframe height="600" src="https://configurator.cae.tech/" width="800"></iframe></p>
<h3>Onshape Drill Press</h3>
<p><a href="https://cad.onshape.com/help/Content/translation.htm">https://cad.onshape.com/help/Content/translation.htm</a></p>
<p>What Imventor do to convert step into parametric part:</p>
<p style="padding-left: 30px;"><a href="https://knowledge.autodesk.com/support/inventor/getting-started/caas/simplecontent/content/inventor-step-file-to-parametric-model.html">https://knowledge.autodesk.com/support/inventor/getting-started/caas/simplecontent/content/inventor-step-file-to-parametric-model.html</a></p>
<p style="padding-left: 30px;"><a href="https://itsacadworld.blogspot.com/2019/09/inventor-from-step-file-to-parametric.html">https://itsacadworld.blogspot.com/2019/09/inventor-from-step-file-to-parametric.html</a></p>
<h3>Edu resource</h3>
<p><a href="https://learn.onshape.com/courses/teaching-a-class-in-onshape">https://learn.onshape.com/courses/teaching-a-class-in-onshape</a></p>
<p><a href="https://learn.onshape.com/learning-paths/introduction-to-cad">https://learn.onshape.com/learning-paths/introduction-to-cad</a></p>
<p><a href="https://learn.onshape.com/catalog?query=Educator%20Resources">Educator Resources</a></p>
<h2>NX</h2>
<p><a href="https://blogs.sw.siemens.com/nx-design/nx-x-a-cloud-based-3d-cad-saas-solution-available-anywhere-anytime-on-any-device/">https://blogs.sw.siemens.com/nx-design/nx-x-a-cloud-based-3d-cad-saas-solution-available-anywhere-anytime-on-any-device/</a> (NX1926.1700 through <a href="https://www.citrix.com/">citrix</a>)</p>
<p><a href="https://www.youtube.com/channel/UChYht2a_KxGdqqJBQ00m4lA/videos">NX tutorial</a></p>
<p><a href="https://nxjournaling.com/content/converting-bodies-parts">converting bodies to parts | NX Journaling</a></p>
<p>Onshape: <a href="https://cadlab.mde.tw/post/onshape-featurescript-spur-gear-ling-jian.html">https://cadlab.mde.tw/post/onshape-featurescript-spur-gear-ling-jian.html</a></p>
<h3>NX start</h3>
<p>在 IPv6 環境下, 使用電腦輔助設計室操作系統中所安裝的 NX12:</p>
<p>在系統命令列中:</p>
<p>已知 D:\Program Files\Siemens\NX 12.0\ 為 NX12 在操作系統中的安裝目錄, 則只要確認認證伺服器所在 IP 位置, 就可以在 IPv6 環境下啟動 NX12.</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">REM 因為 NX12 安裝在 d 槽, 因此先切換到 d 槽
d:
REM 更換目錄到能夠執行 ugraf.exe 所在目錄位置
cd D:\Program Files\Siemens\NX 12.0\NXBIN
REM 設定認證主機所在 IP 位址, 可以同時輸入 IPv4 與 IPv6 網路協定主機位址
set SPLM_LICENSE_SERVER=nx_port@nx_server
REM 建議採用英文表單介面啟動 NX
set UGII_LANG=english
REM 啟動 NX12
ugraf.exe</pre>
<p>由於 NXOpen API 自 NX10 之後就提供 Python 延伸程式介面, NX2007 系列 (2007, 2008 與 2027) 所支援的 Python 為 3.8 版, 這裡可以試試能否採用 Python 3.10.6 版.</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">set UGII_PYTHON_HOME=%cd%\nxbin\python
set UGII_PYTHON_DLL=python38.dll
set UGII_PYTHON_LIBRARY_DIR=%cd%\nxbin\python
set UGII_PYTHONPATH=%cd%\nxbin\python;%cd%\nxbin\python\Python38.zip;%cd%\design_tools\checkmate\python;%cd%\automated_testing\python</pre>
<p>與官方 Product Excellence Program 有關的設定存檔:</p>
<p style="padding-left: 30px;">Product Excellence Program -&gt; set UGII_LOCAL_USER_DEFAULTS=%cd%\temp\NX_user.dpv</p>
<h3>NXOpen</h3>
<p><a href="https://nx.cycu.org:8000/user/nxform">https://nx.cycu.org:8000/user/nxform</a> (若非輸入長寬高數值, 則以 30, 60, 90 訂製 block)</p>
<p style="padding-left: 30px;">nssm 設定 python, server.py 所在目錄作為 startup directory, 最後給定 server.py 即可將 python server.py 設定為 Windows service.</p>
<p><a href="/downloads/web_based_nx2027_nxopen_python_ex.7z">web_based_nx2027_nxopen_python_ex.7z</a></p>
<p><a href="/downloads/gear_model2_c.7z">gear_model2_c.7z</a></p>
<p><a href="https://docs.plm.automation.siemens.com/data_services/resources/nx/10/nx_api/en_US/custom/nxopen_python_ref/NXOpen.UF.Modeling.AskMassProps3d.html">NXOpen.UF.Modeling.AskMassProps3d — NXOpen Python API Reference 10.0.0 documentation (siemens.com)</a></p>
<p>[0] = Surface Area<br/>[1] = Volume (0.0 For Thin Shell) <br/>[2] = Mass <br/>[3-5] = Center Of Mass (COFM), WCS <br/>[6-8] = First Moments (centroidal) <br/>[9-11] = Moments Of Inertia, WCS <br/>[12-14] = Moments Of Inertia (centroidal) <br/>[15] = Spherical Moment Of Inertia <br/>[16-18] = Inertia Products, WCS <br/>[19-21] = Inertia Products (centroidal) <br/>[22-30] = Principal Axes, WCS <br/>[31-33] = Principal Moments (centroidal) <br/>[34-36] = Radii Of Gyration, WCS <br/>[37-39] = Radii Of Gyration (centroidal)<br/>[40] = Spherical Radius Of Gyration <br/>[41-45] = Unused <br/>[46] = Density</p>
<p>Set Journal language:</p>
<p>File - Utilities - Customer Defaults - User Interface - Journal 選擇 Python 作為 Journal language 後, 重新啟動 NX.</p>
<p>有關 Journal language 設定將存入</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">&lt;?xml version="1.0" encoding="UTF-8"?&gt;

&lt;?xml-stylesheet type="text/xsl" href="NX_user.xsl"?&gt;
&lt;PrefValues defaultLockStatus="unlocked"&gt;
&lt;Pref Application="Gateway" Category="General" Tab="Part" displayValue="Yes" modified="2022-06-25T04:23:00" name="UG_enable_part_protection" title="File Protection (Native NX) - Enable Part Protection" value="false"/&gt;
&lt;Pref Application="Gateway" Category="User Interface" Tab="Journal" displayValue="Python" modified="2022-11-05T04:29:10" name="UG_journalLanguage" title="Journal Language" value="4"/&gt;
&lt;/PrefValues&gt;</pre>
<p>non-interactive NXOpen Python example:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># 導入 NXOpen
import NXOpen
import NXOpen.UF
import NXOpen.Gateway


def main():
    # 取得目前開啟的工作階段
    theSession = NXOpen.Session.GetSession()
    theUfSession = NXOpen.UF.UFSession.GetUFSession()
      
    # 建立 ListingWindow
    listWin= theSession.ListingWindow
    # 開啟零件檔案
    basePart1 = theSession.Parts.OpenBaseDisplay("block.prt")
    workPart = theSession.Parts.Work
    unit1 = workPart.UnitCollection.FindObject("MilliMeter")
    # height
    p7 = workPart.Expressions.FindObject("p7")
    # width
    p8 = workPart.Expressions.FindObject("p8")
    # length
    p9 = workPart.Expressions.FindObject("p9")
    workPart.Expressions.EditWithUnits(p7, unit1, "30")
    workPart.Expressions.EditWithUnits(p8, unit1, "60")
    workPart.Expressions.EditWithUnits(p9, unit1, "90")
    theSession.UpdateManager.DoUpdate(0)
    try:
        saveStatus1 = workPart.SaveAs("block_new.prt")
        saveStatus1.Dispose()
    except:
        pass
    # initialize list to hold bodies
    theBodyTags = []
   
    for x in workPart.Bodies:
        if x.IsSolidBody:
            theBodyTags.append(x.Tag)
      
    # 準備輸出 ASCII 格式 STL 零件檔案
    sTLCreator1 = theSession.DexManager.CreateStlCreator()
    sTLCreator1.AutoNormalGen = True
    sTLCreator1.ChordalTol = 0.08
    sTLCreator1.AdjacencyTol = 0.08
    sTLCreator1.OutputFile = "block_ascii.stl"
    # Binary STL: NXOpen.STLCreatorOutputTypeEnum.Binary
    sTLCreator1.OutputType = NXOpen.STLCreatorOutputTypeEnum.Text
    # 已知 body1 命名
    body1 = workPart.Bodies.FindObject("EXTRUDE(2)")
    added1 = sTLCreator1.ExportSelectionBlock.Add(body1)
    nXObject1 = sTLCreator1.Commit()
    sTLCreator1.Destroy()
  
    # 開啟所建立的 ListingWindow
    listWin.Open()
    listWin.WriteLine("number of solid bodies: " + str(len(theBodyTags)))
   
    (massProps, Stats) = theUfSession.Modeling.AskMassProps3d(theBodyTags, len(theBodyTags), 1, 4, .03, 1, [0.99,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0])
    listWin.WriteLine("units: kg, mm")
    listWin.WriteLine("surface area: " + str(massProps[0]))
    listWin.WriteLine("volume: " + str(massProps[1]*1E9))
    # 在 ListingWindow 中寫入字串
    listWin.WriteLine("Hello, NXOpen")
    listWin.Close()

if __name__ == "__main__":
    main()</pre>
<p>Open     Opens an existing .prt part, but does not set it to be the displayed part.<br/>OpenBase     Opens an existing part, but does not set it to be the displayed part.<br/>OpenBaseDisplay     Opens an existing part and sets this part as the display part.<br/>OpenDisplay     Opens an existing .prt part and sets this part as the display part.</p>
<p>From <a href="https://www.nxjournaling.com/content/open-new-nx-session-using-journal">https://www.nxjournaling.com/content/open-new-nx-session-using-journal</a></p>
<p></p>
<p></p>
<h3>Export img</h3>
<p><a href="https://docs.plm.automation.siemens.com/data_services/resources/nx/10/nx_api/en_US/custom/nxopen_python_ref/NXOpen.UF.Disp.BatchShade.html?highlight=disp.batchshade#NXOpen.UF.Disp.BatchShade">BatchShade()</a></p>
<p style="padding-left: 30px;"><a href="https://community.sw.siemens.com/s/question/0D54O00006X0yc3SAB/are-you-unicode-paths-supported-in-export-image-file">ex</a></p>
<p><a href="https://docs.plm.automation.siemens.com/data_services/resources/nx/10/nx_api/en_US/custom/nxopen_python_ref/NXOpen.UF.Disp.BatchShadeOptions.html?highlight=disp.batchshade#NXOpen.UF.Disp.BatchShadeOptions">BatchShadeOptions()</a></p>
<p><a href="https://www.nxjournaling.com/content/exporting-jpeg-without-interactive-session">https://www.nxjournaling.com/content/exporting-jpeg-without-interactive-session</a></p>
<p><a href="https://docs.plm.automation.siemens.com/data_services/resources/nx/10/nx_api/en_US/custom/ugopen_doc/uf_disp/uf_disp_types.html#UF_DISP_shade_method_e">https://docs.plm.automation.siemens.com/data_services/resources/nx/10/nx_api/en_US/custom/ugopen_doc/uf_disp/uf_disp_types.html#UF_DISP_shade_method_e</a></p>
<h3>NX Drill Press</h3>
<p><a href="https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&amp;arnumber=8076193">Implementation of recognition algorithm with NXOpen API in Siemens NX</a> (2017)</p>
<p><a href="https://pdf.sciencedirectassets.com/306234/1-s2.0-S2351978920X00151/1-s2.0-S2351978920319247/main.pdf?X-Amz-Security-Token=IQoJb3JpZ2luX2VjECkaCXVzLWVhc3QtMSJGMEQCIFH315Qdec7j4wpPuU6SaCislMPBLir12O%2FmYHtm3Y7sAiBB3y1oDZ7n2laTMhfr4Y%2Bp%2Fba0R2mEIxsezzLDye0WnSrMBAgSEAUaDDA1OTAwMzU0Njg2NSIM56rdvYT90bUiMhuqKqkEpR5C%2Fw8ZwvpMr%2FcsRueioSuK3xygenOWLkiZT578RXcwVGFUvpcaZliD%2BrO2BcquXcQWQoQvg8p7L3ryttPmOICEZBEZWi%2BhuQNaBxi3p6oqLBVUGYV0MyO%2FFzq%2Bo%2BpRi94v7uEMCboqCWloVPliJVuEE%2BPphwCig8JgiQjMW8M6tw8dKFdg9BjtEJKXDq5TZt653IyB4zyMYbgzSIjmJscEU2f5aJ1U5I%2B8Dqi75OX8If115r8qG%2FrLRP5AqkuEy6lhs5ZRRiRy9IryfczkXD6Rj34ZITvd%2F0xj6fkMw9EVPueBdJyOyLC2Hem0J%2FV%2F8HGO2oQkwDoy%2B%2BXGLh08Mmu%2BDkQKj6r8bt9Z3fBYGYBg7%2FP00OiKLXZtlbig5McfrTBHAKyEG4VNmMxXmH%2BB%2BxRWgDOq5dzh%2FvMKFV4MLudjW5reUEInN15DH%2FtRRFoqTkWWFQY9VpCpzi7Cah8HdKcGhl88tsco%2BJHdobNhitpuu5j%2BiOSwQDE6ZZGRzhRamVu6CqeA7lR17OkIJ5CRS49MWB9iU0T4x5r%2FBvp3NKo92NsBB1m4ZxrxCPTigqAfXYxTBJK3LHNjm99MOUCluf7UWq9yoeKZ7F2eZNPSa%2BhOWiGAlA%2BuMGsFUx4vnElKa1EHixH65oHMfwY4tZOvNkoXB1BJnJCbB1IXu1HrWZXCjuf5FnwjTqeieMWtOEcz4PvfQ%2FS3mEDQdjyyaM5ZWQkWm7hukYDUzDDThemaBjqqAZDIEmpPxM%2BhcXC0ENvkFBypqwJWF2E2fZkGOqjbj%2F5A5YPbwmP%2FLxlXCdL4obgO4QCNLm1NbHAwJiXkh1ZNJi%2BlTmmE8It3Vq3AcXS68ch1mmW399zHohLyRf8krVXakhPcY%2FFH1QUD83zOnToZDNcMapZk8ge0CaKXmpwIRSPBLAsKstqgNIePeyFJ8ktMq4Kq00U%2B2lpZFT4nk8D2LIfB3Id8Pim3OQHz&amp;X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Date=20221027T092810Z&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Expires=300&amp;X-Amz-Credential=ASIAQ3PHCVTYX2T3KX6I%2F20221027%2Fus-east-1%2Fs3%2Faws4_request&amp;X-Amz-Signature=26a21edf5c01ce6191feb5b76bfe39726e4e387d4412af946a9fdf36c2dc8cd6&amp;hash=f483b415ae2e64f9211e0b7a7552fd70e7dcc57ea61f013894876f5f54b98e28&amp;host=68042c943591013ac2b2430a89b270f6af2c76d8dfd086a07176afe7c76c2c61&amp;pii=S2351978920319247&amp;tid=spdf-41af57d8-d0fd-433d-ba4a-ef7240b14045&amp;sid=72d997746acea64db248a7d5e62c58169abegxrqa&amp;type=client&amp;ua=4d545207545253515058&amp;rr=760a666758fcf23c">Automatic weld path definition in CAD</a> (2020)</p>
<p><a href="https://www.diva-portal.org/smash/get/diva2:849129/FULLTEXT01.pdf">Multidisciplinary analysis of jet engine components - Development of methods and tools for design automatisation in a multidisciplinary context</a> (2015) - <a href="https://ju.se/en/about-us/school-of-engineering.html">School of Engineering</a></p>
<p><a href="http://cadabout.ru/2017/02/01/siemens-nx-convert-part-units/">http://cadabout.ru/2017/02/01/siemens-nx-convert-part-units/</a></p>
<p><a href="https://community.sw.siemens.com/s/question/0D54O00006E5zkoSAB/when-converting-parasolid-to-parametric-model-there-should-not-any-parent-child-relationship">When converting parasolid to Parametric model, there should not any parent child relationship (siemens.com)</a></p>
<p><a href="https://www.eng-tips.com/viewthread.cfm?qid=354285">Conversion of un-parametric model to parametric model in UG NX. - Siemens: UG/NX - Eng-Tips</a></p>
<p><a href="https://docs.specflow.org/projects/specflow/en/latest/Bindings/Step-Argument-Conversions.html">https://docs.specflow.org/projects/specflow/en/latest/Bindings/Step-Argument-Conversions.html</a></p>
<p><a href="https://all3dp.com/2/step-to-stl-how-to-convert-step-files-to-stl/">https://all3dp.com/2/step-to-stl-how-to-convert-step-files-to-stl/</a></p>
<p><a href="https://www.fastradius.com/resources/everything-you-need-to-know-about-step-files/">https://www.fastradius.com/resources/everything-you-need-to-know-about-step-files/</a></p>
<p><a href="https://www.nxjournaling.com/content/how-read-measures-part-nxopen">https://www.nxjournaling.com/content/how-read-measures-part-nxopen</a></p>
<h2>Gear</h2>
<p><a href="/downloads/gear_design.7z">gear_design.7z</a></p>
<p><a href="https://github.com/coursemdetw/2014cda/wiki/Gear-Width-design-1">https://github.com/coursemdetw/2014cda/wiki/Gear-Width-design-1</a></p>
<p><a href="https://github.com/coursemdetw/2014cda/wiki/Gear-Width-design-2">https://github.com/coursemdetw/2014cda/wiki/Gear-Width-design-2</a></p>
<p><a href="https://github.com/coursemdetw/2014cda/wiki/Pybean-0.2.1">https://github.com/coursemdetw/2014cda/wiki/Pybean-0.2.1</a></p>
<p><a href="https://github.com/chiamingyen/mdeCourse/">https://github.com/chiamingyen/mdeCourse/</a></p>
<p><a href="https://github.com/2014c2g23/2015cda">https://github.com/2014c2g23/2015cda</a></p>
<p><a href="https://github.com/mdekmol">https://github.com/mdekmol</a></p>
<p>'''<br/>lewis.db 中有兩個資料表, steel 與 lewis<br/> CREATE TABLE steel ( <br/>    serialno      INTEGER,<br/>    unsno         TEXT,<br/>    aisino        TEXT,<br/>    treatment     TEXT,<br/>    yield_str     INTEGER,<br/>    tensile_str   INTEGER,<br/>    stretch_ratio INTEGER,<br/>    sectional_shr INTEGER,<br/>    brinell       INTEGER <br/>);<br/>CREATE TABLE lewis ( <br/>    serialno INTEGER PRIMARY KEY<br/>                     NOT NULL,<br/>    gearno   INTEGER,<br/>    type1    NUMERIC,<br/>    type4    NUMERIC,<br/>    type3    NUMERIC,<br/>    type2    NUMERIC <br/>);<br/>'''</p>
<h2>CoppeliaSim</h2>
<p><a href="https://coppeliarobotics.com/files/beta/">https://coppeliarobotics.com/files/beta/</a></p>
<p>Opencv 與 Scenes</p>
<p><a href="http://mod.cycu.org">http://mod.cycu.org</a> has coppeliaSim on Ubuntu desktop</p>
<p><a href="https://github.com/ljmanso/coppeliasim_pythonic_api">GitHub - ljmanso/coppeliasim_pythonic_api</a></p>
<p><a href="https://github.com/mdecadp2018">https://github.com/mdecadp2018</a></p>
<p><a href="https://www.youtube.com/watch?v=ZJQV2FlGFBo">https://www.youtube.com/watch?v=ZJQV2FlGFBo</a> (<a href="/downloads/jediForce.zip">jediForce.zip</a>)</p>
<p><a href="https://pythonforundergradengineers.com/python-arduino-potentiometer.html">https://pythonforundergradengineers.com/python-arduino-potentiometer.html</a></p>
<p style="padding-left: 30px;"><a href="/downloads/Using_python_arduino_read_sensor_data_html.7z">Using_python_arduino_read_sensor_data_html.7z</a></p>
<pre class="brush:lua;auto-links:false;toolbar:false" contenteditable="false">-- This code is provided by Eric Rohmer
-- erohmer@gmail.com
-- you can use it without any warranty and modify reuse and distribute it at will

sim.setThreadSwitchTiming(2) -- Default timing for automatic thread switching
simDelegateChildScriptExecution()

--defining the serial port number
portNumber="\\\\.\\COM12"
--could be defined as followed
--portNumber=[[\\.\COM12]]

baudrate=9600

serial=sim.serialOpen(portNumber,baudrate)

--getting the cube handle and initial pose
h=sim.getObjectHandle('Cuboid')
ipos=sim.getObjectPosition(h,-1)
iori=sim.getObjectOrientation(h,-1)

do --function for the moving average translation of #t values
  local t = {}
  function f(a, b, ...) if b then return f(a+b, ...) else return a end end
  function average(n)
    if #t == 15 then table.remove(t, 1) end
    t[#t + 1] = n
    return f(unpack(t)) / #t
  end
end

do --function for the moving average rotation of #tr values
  local tr = {}
  function fr(a, b, ...) if b then return fr(a+b, ...) else return a end end
  function averager(n)
    if #tr == 5 then table.remove(tr, 1) end
    tr[#tr + 1] = n
    return fr(unpack(tr)) / #tr
  end
end

while (sim.getSimulationState()~=sim.simulation_advancing_abouttostop) do

    --read a full line
    str=sim.serialRead(serial,100,true,'\n',100)
    if str ~= nil then 
        --print(str)
        local token
        val={}
        cpt=0
        --extracting the two values in str separated by a ,
        for token in string.gmatch(str, "[^,]+") do
            cpt=cpt+1
            val[cpt]=token
        end
    end

    --we verify here that we are actually successuflly extracting a number before arithmetic operation
    if type(tonumber(val[1]))=='number' and type(tonumber(val[2]))=='number' then
        -- we do a moving average on the translation and the rotation to stabilize the motion
        --even if it gives some "inertia" to the motion.
        sim.setObjectPosition(h,-1,{ipos[1],-average(val[2])/100,ipos[3]})
        sim.setObjectOrientation(h,-1,{iori[1],iori[2],-averager(val[1])*math.pi/180})
    end    

    -- not wasting time here, we force the switching of the thread
    sim.switchThread()
end

sim.serialClose(serial)
</pre>
<p><a href="https://github.com/RyoheiGoto/inverted_pendulum">https://github.com/RyoheiGoto/inverted_pendulum</a></p>
<p><a href="https://pythonforundergradengineers.com/python-arduino-potentiometer.html">https://pythonforundergradengineers.com/python-arduino-potentiometer.html</a></p>
<h3>remote API</h3>
<p><a href="http://project.mde.tw/blog/40323250ri-zhi-v-rep-gong-neng-chi-xu-geng-xin-zhong.html">參考資料</a></p>
<p>one link change velocity:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import vrep
import sys
# child threaded script: 
# 內建使用 port 19997 若要加入其他 port, 在  serve 端程式納入
#simExtRemoteApiStart(19999)
 
vrep.simxFinish(-1)
 
clientID = vrep.simxStart('127.0.0.1', 19997, True, True, 5000, 5)
 
if clientID!= -1:
    print("Connected to remote server")
else:
    print('Connection not successful')
    sys.exit('Could not connect')
 
errorCode,Revolute_joint_handle=vrep.simxGetObjectHandle(clientID,'Revolute_joint',vrep.simx_opmode_oneshot_wait)
 
if errorCode == -1:
    print('Can not find left or right motor')
    sys.exit()
 
errorCode=vrep.simxSetJointTargetVelocity(clientID,Revolute_joint_handle,2, vrep.simx_opmode_oneshot_wait)
 
while True:
    choice = input("(e to exit, p to pause and enter to exec)&gt;")
    if choice == "e":
        print("exiting")
        vrep.simxStopSimulation(clientID, vrep.simx_opmode_oneshot_wait)
        break
    elif choice == "p":
        vrep.simxPauseSimulation(clientID, vrep.simx_opmode_oneshot_wait)
    else:
        vrep.simxStartSimulation(clientID, vrep.simx_opmode_oneshot_wait)</pre>
<p>Position control</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import vrep
import sys, math
# child threaded script: 
# 內建使用 port 19997 若要加入其他 port, 在  serve 端程式納入
#simExtRemoteApiStart(19999)
 
vrep.simxFinish(-1)
 
clientID = vrep.simxStart('127.0.0.1', 19997, True, True, 5000, 5)
 
if clientID!= -1:
    print("Connected to remote server")
else:
    print('Connection not successful')
    sys.exit('Could not connect')
 
errorCode,Revolute_joint_handle=vrep.simxGetObjectHandle(clientID,'Revolute_joint',vrep.simx_opmode_oneshot_wait)
 
if errorCode == -1:
    print('Can not find left or right motor')
    sys.exit()
 
deg = math.pi/180
 
#errorCode=vrep.simxSetJointTargetVelocity(clientID,Revolute_joint_handle,2, vrep.simx_opmode_oneshot_wait)
 
def setJointPosition(incAngle, steps):
    for i  in range(steps):
        errorCode=vrep.simxSetJointPosition(clientID, Revolute_joint_handle, i*incAngle*deg, vrep.simx_opmode_oneshot_wait)
 
# 每步 10 度, 轉兩圈
setJointPosition(10, 72)
# 每步 1 度, 轉兩圈
#setJointPosition(1, 720)
# 每步 0.1  度, 轉720 步
#setJointPosition(0.1, 720)
 
'''
三軸同動時
simxPauseCommunication(clientID,1);
simxSetJointPosition(clientID,joint1Handle,joint1Value,simx_opmode_oneshot);
simxSetJointPosition(clientID,joint2Handle,joint2Value,simx_opmode_oneshot);
simxSetJointPosition(clientID,joint3Handle,joint3Value,simx_opmode_oneshot);
simxPauseCommunication(clientID,0);
'''</pre>
<p>Fourbar linkage velocity control:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import vrep
import sys
# child threaded script: 
# 內建使用 port 19997 若要加入其他 port, 在  serve 端程式納入
#simExtRemoteApiStart(19999)
 
vrep.simxFinish(-1)
 
clientID = vrep.simxStart('127.0.0.1', 19997, True, True, 5000, 5)
 
if clientID!= -1:
    print("Connected to remote server")
else:
    print('Connection not successful')
    sys.exit('Could not connect')
 
errorCode,Revolute_joint_handle=vrep.simxGetObjectHandle(clientID,'Revolute_joint',vrep.simx_opmode_oneshot_wait)
 
if errorCode == -1:
    print('Can not find left or right motor')
    sys.exit()
 
errorCode=vrep.simxSetJointTargetVelocity(clientID,Revolute_joint_handle,2, vrep.simx_opmode_oneshot_wait)
 
while True:
    choice = input("(e to exit, p to pause and enter to exec)&gt;")
    if choice == "e":
        print("exiting")
        vrep.simxStopSimulation(clientID, vrep.simx_opmode_oneshot_wait)
        break
    elif choice == "p":
        vrep.simxPauseSimulation(clientID, vrep.simx_opmode_oneshot_wait)
    else:
        vrep.simxStartSimulation(clientID, vrep.simx_opmode_oneshot_wait)</pre>
<p>Fourbar velocity control:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import vrep, math
import sys
# child threaded script: 
#simExtRemoteApiStart(19999)
 
vrep.simxFinish(-1)
 
clientID = vrep.simxStart('127.0.0.1', 19997, True, True, 5000, 5)
 
if clientID!= -1:
    print("Connected to remote server")
else:
    print('Connection not successful')
    sys.exit('Could not connect')
 
errorCode,Revolute_joint_handle=vrep.simxGetObjectHandle(clientID,'Revolute_joint',vrep.simx_opmode_oneshot_wait)
 
deg = math.pi/180
 
if errorCode == -1:
    print('Can not find left or right motor')
    sys.exit()
 
#errorCode=vrep.simxSetJointTargetVelocity(clientID,Revolute_joint_handle,2, vrep.simx_opmode_oneshot_wait)
 
def setJointPosition(incAngle, steps):
    for i  in range(steps):
        errorCode=vrep.simxSetJointPosition(clientID, Revolute_joint_handle, i*incAngle*deg, vrep.simx_opmode_oneshot_wait)
 
# 每步 10 度, 轉兩圈
setJointPosition(10,72)</pre>
<p>Programmatically start and end simulation:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import vrep, math
import sys
# child threaded script: 
#simExtRemoteApiStart(19999)
 
vrep.simxFinish(-1)
 
clientID = vrep.simxStart('127.0.0.1', 19997, True, True, 5000, 5)
#啟動模擬
vrep.simxStartSimulation(clientID, vrep.simx_opmode_oneshot)
 
if clientID!= -1:
    print("Connected to remote server")
else:
    print('Connection not successful')
    sys.exit('Could not connect')
 
errorCode,Revolute_joint_handle=vrep.simxGetObjectHandle(clientID,'Revolute_joint',vrep.simx_opmode_oneshot_wait)
 
deg = math.pi/180
 
if errorCode == -1:
    print('Can not find left or right motor')
    sys.exit()
 
#errorCode=vrep.simxSetJointTargetVelocity(clientID,Revolute_joint_handle,2, vrep.simx_opmode_oneshot_wait)
 
def setJointPosition(incAngle, steps):
    for i  in range(steps):
        errorCode=vrep.simxSetJointPosition(clientID, Revolute_joint_handle, i*incAngle*deg, vrep.simx_opmode_oneshot_wait)
    #終止模擬
    vrep.simxStopSimulation(clientID, vrep.simx_opmode_oneshot_wait)
 
# 每步 10 度, 轉兩圈
setJointPosition(10, 72)</pre>
<p>another example:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">try:
    import vrep
except:
    print ('--------------------------------------------------------------')
 
import time
 
 
def connectVREP():
  vrep.simxFinish(-1) # just in case, close all opened connections
  clientID=vrep.simxStart('127.0.0.1',19999,True,True,5000,5) # Connect to V-REP
  if clientID!=-1:
    print ('Connected Remote Api')
    vrep.simxStartSimulation(clientID,vrep.simx_opmode_oneshot_wait)
 
    vrep.simxSynchronous(clientID,True)
    return clientID
  else:
    print ('ERROR! Error connecting Remote Api')
    sys.exit(0);
 
def startSim(clientID):
  vrep.simxStartSimulation(clientID,vrep.simx_opmode_oneshot)
 
def stopSim(clientID):
  vrep.simxStopSimulation(clientID,vrep.simx_opmode_oneshot_wait)
 
def disconnectVREP(clientID):
  # Now close the connection to V-REP:
  vrep.simxFinish(clientID)
  print('Connection finished')
 
 
clientID=connectVREP()
 
 
ret,joint1_handler = vrep.simxGetObjectHandle(\
  clientID,"redundantRob_joint1",vrep.simx_opmode_oneshot_wait)
ret,joint1 = vrep.simxGetJointPosition(\
  clientID,joint1_handler,vrep.simx_opmode_streaming)
 
ret,joint2_handler = vrep.simxGetObjectHandle(\
  clientID,"redundantRob_joint2",vrep.simx_opmode_oneshot_wait)
ret,joint2 = vrep.simxGetJointPosition(\
  clientID,joint2_handler,vrep.simx_opmode_streaming)
 
startSim(clientID)
 
ret,joint1 = vrep.simxGetJointPosition(\
  clientID,joint1_handler,vrep.simx_opmode_buffer)
print joint1  #Get position joint 1
ret,joint2 = vrep.simxGetJointPosition(\
  clientID,joint2_handler,vrep.simx_opmode_buffer)
print joint2 #Get position joint 2
 
ret = vrep.simxSetJointPosition(\
  clientID,joint1_handler,pi/2,vrep.simx_opmode_oneshot)  #Set pi/2 to joint 1
 
time.sleep(2)
 
stopSim(clientID)
 
time.sleep(1)
 
disconnectVREP(clientID)  </pre>
<p>remote api 設定 joint 變數</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import threading
import time
import sys
import traceback
 
sys.path.insert(0, 'C:\\Program Files\\V-REP3\\V-REP_PRO_EDU\\programming\\Python')
import vrep
 
class Joint(threading.Thread):
    def __init__(self, joint_name, port):
        threading.Thread.__init__(self)
        self.client_id = -1
        self.port = port
        self.joint_name = joint_name
 
    def run(self):
        try:
            # connect to V-REP server
            self.client_id = vrep.simxStart("127.0.0.1", self.port, False, True, 5000, 5)
            if self.client_id == -1:
                raise Exception('Failed to connect V-REP remote API server.')
 
            # get handle
            res, p = vrep.simxGetObjectHandle(self.client_id, self.joint_name.encode(), vrep.simx_opmode_oneshot_wait)
            if res == vrep.simx_error_noerror:
                print('[Joint %s] handle= %s' % (self.joint_name, p))
            else:
                raise Exception('Error in getting joint handles.')
 
        except Exception as e:
            print('[Joint %s] %s' % (self.joint_name, e.args[0]))
            traceback.print_exc()
 
        finally:
            # disconnect with V-REP server
            vrep.simxFinish(self.client_id)
 
if __name__ == "__main__":
    joints = [Joint("joint1", 19999), Joint("joint2", 19998)]
    for joint in joints:
        joint.start()
        time.sleep(0.1)
    time.sleep(1)
    for joint in joints:
        joint.join()
    print("Done")</pre>
<p>三軸同動</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">simxPauseCommunication(clientID,1);
simxSetJointPosition(clientID,joint1Handle,joint1Value,simx_opmode_oneshot);
simxSetJointPosition(clientID,joint2Handle,joint2Value,simx_opmode_oneshot);
simxSetJointPosition(clientID,joint3Handle,joint3Value,simx_opmode_oneshot);
simxPauseCommunication(clientID,0);
 
// Above's 3 joints will be received and set on the V-REP side at the same time</pre>
<p>在 V-rep 端設定變數值:</p>
<p>simSetIntegerSignal("mySignalName",42)</p>
<p>之後, 可以從 client 端, 以 remote API streaming 模式取得該變數值:</p>
<p>res,signalValue=simxGetIntegerSignal(clientId,"mySignalName", vrep.simx_opmode_streaming)</p>
<p>當然, 也可以反方向, 從 V-rep 端取得 client 端的變數值.</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># Make sure to have the server side running in V-REP: 
# in a child script of a V-REP scene, add following command
# to be executed just once, at simulation start:
#
# simExtRemoteApiStart(19999)
#
# then start simulation, and run this program.
#
# IMPORTANT: for each successful call to simxStart, there
# should be a corresponding call to simxFinish at the end!
 
try:
    import vrep
except:
    print '--------------------------------------------------------------'
    print '"vrep.py" could not be imported. This means very probably that'
    print 'either "vrep.py" or the remoteApi library could not be found.'
    print 'Make sure both are in the same folder as this file,'
    print 'or appropriately adjust the file "vrep.py"'
    print '--------------------------------------------------------------'
    print ''
 
import time   
 
print ('Program started')
vrep.simxFinish(-1) # just in case, close all opened connections
clientID=vrep.simxStart('127.0.0.1',19999,True,True,5000,5) # Connect to V-REP
if clientID!=-1:
    print ('Connected to remote API server')
 
    # Now try to retrieve data in a blocking fashion (i.e. a service call):
    res,objs=vrep.simxGetObjects(clientID,vrep.sim_handle_all,vrep.simx_opmode_oneshot_wait)
    if res==vrep.simx_return_ok:
        print ('Number of objects in the scene: ',len(objs))
    else:
        print ('Remote API function call returned with error code: ',res)
 
    time.sleep(2)
 
    # Now retrieve streaming data (i.e. in a non-blocking fashion):
    startTime=time.time()   
    vrep.simxGetIntegerParameter(clientID,vrep.sim_intparam_mouse_x,vrep.simx_opmode_streaming) # Initialize streaming
    while time.time()-startTime &lt; 5:   
        returnCode,data=vrep.simxGetIntegerParameter(clientID,vrep.sim_intparam_mouse_x,vrep.simx_opmode_streaming) # Try to retrieve the streamed data
        if returnCode==vrep.simx_return_ok: # After initialization of streaming, it will take a few ms before the first value arrives, so check the return code
            print ('Mouse position x: ',data) # Mouse position x is actualized when the cursor is over V-REP's window
 
    # Now send some data to V-REP in a non-blocking fashion:
    vrep.simxAddStatusbarMessage(clientID,'Hello V-REP!',vrep.simx_opmode_oneshot)
 
    # Before closing the connection to V-REP, make sure that the last command sent out had time to arrive. You can guarantee this with (for example):
    vrep.simxGetPingTime(clientID)
 
    # Now close the connection to V-REP:   
    vrep.simxFinish(clientID)
else:
    print ('Failed connecting to remote API server')
print ('Program ended')</pre>
<p>V-rep Remote API 函式列表:</p>
<p><a href="http://www.coppeliarobotics.com/helpFiles/en/remoteApiFunctionListCategory.htm">http://www.coppeliarobotics.com/helpFiles/en/remoteApiFunctionListCategory.htm</a></p>
<p>V-rep 的 remote API 是以 V-rep plugin (動態連結程式庫) 的方式完成, 程式專案位於 programming/v_repExtRemoteApi 目錄中.</p>
<p>V-rep remote API 可以進一步在 embedded script 程式中利用 Lua 程式進行延伸:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">myFunctionName=function(inInts,inFloats,inStrings,inBuffer)
    -- inInts, inFloats and inStrings are tables
    -- inBuffer is a string
 
    -- Perform any type of operation here.
 
    -- Always return 3 tables and a string, e.g.:
    return {},{},{},''
end</pre>
<p>然後利用下列外部的 Python 程式進行呼叫:</p>
<div>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">inputInts=[1,2,3]
inputFloats=[53.21,17.39]
inputStrings=['Hello','world!']
inputBuffer=bytearray()
inputBuffer.append(78)
inputBuffer.append(42)
res,retInts,retFloats,retStrings,retBuffer=vrep.simxCallScriptFunction(clientID,'objectName',vrep.sim_scripttype_childscript,
                'myFunctionName',inputInts,inputFloats,inputStrings,inputBuffer,vrep.simx_opmode_blocking)
if res==vrep.simx_return_ok:
    print (retInts)
    print (retFloats)
    print (retStrings)
    print (retBuffer)</pre>
</div>
<h3>zeromq</h3>
<p><a href="https://www.coppeliarobotics.com/helpFiles/en/zmqRemoteApiOverview.htm">https://www.coppeliarobotics.com/helpFiles/en/zmqRemoteApiOverview.htm</a></p>
<p>以下使用 CoppeliaSim 4.3.0 rev12 進行測試:</p>
<p>1. 啟動檔案 start.bat 附加 ZMQ Python API path:</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">set PYTHONPATH=%cd%\Python38;%cd%\Python38\DLLs;%cd%\Python38\Lib;%cd%\Python38\Lib\site-packages;C:\NX2027.3401_lite\NXBIN\python;C:\CoppeliaSimEdu_4.3.0_rev12\programming\zmqRemoteApi\clients\python</pre>
<p>2. CoppeliaSim 下拉式功能表 Modules - Connectivity - ZMQ Remote API Server (running).</p>
<p>3. 執行 C:\CoppeliaSimEdu_4.3.0_rev12\programming\zmqRemoteApi\clients\python\SimpleTest.py</p>
<h3>Pinball</h3>
<p>彈珠檯機構設計:</p>
<p><a href="https://youtube.com/watch?v=yZ1XmdRJcus">https://youtube.com/watch?v=yZ1XmdRJcus</a></p>
<p><a href="https://youtube.com/shorts/08TMJ_lJdZU?si=EnSIkaIECMiOmarE">https://youtube.com/shorts/08TMJ_lJdZU?si=EnSIkaIECMiOmarE</a></p>
<p><a href="https://youtube.com/watch?v=Jn8nxSZdF_c">https://youtube.com/watch?v=Jn8nxSZdF_c</a></p>
<h3>以 remote API 取 camera 影像</h3>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from PIL import Image
import array
 
res, v0 = vrep.simxGetObjectHandle(clientID,'NAO_vision1',vrep.simx_opmode_oneshot_wait)
 
res, resolution, image = vrep.simxGetVisionSensorImage(clientID,v0,0,vrep.simx_opmode_streaming)
 
image_byte_array = array.array('b',image)
# image resolution is 256x144
im = Image.frombuffer("RGB", (256,144), image_byte_array, "raw", "RGB", 0, 1)
im.show()</pre>
<p><span>取影片:</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import vrep,time,sys
import matplotlib.pyplot as plt
from PIL import Image
import array
 
def streamVisionSensor(visionSensorName,clientID,pause=0.0001):
    #Get the handle of the vision sensor
    res1,visionSensorHandle=vrep.simxGetObjectHandle(clientID,visionSensorName,vrep.simx_opmode_oneshot_wait)
    print(visionSensorHandle)
    #Get the image
    res2,resolution,image=vrep.simxGetVisionSensorImage(clientID,visionSensorHandle,0,vrep.simx_opmode_streaming)
    print(res2, res1)
    #Allow the display to be refreshed
    plt.ion()
    #Initialiazation of the figure
    time.sleep(0.5)
    res,resolution,image=vrep.simxGetVisionSensorImage(clientID,visionSensorHandle,0,vrep.simx_opmode_buffer)
    im = Image.new("RGB", (resolution[0], resolution[1]), "white")
    #Give a title to the figure
    fig = plt.figure(1)    
    fig.canvas.set_window_title(visionSensorName)
    #inverse the picture
    plotimg = plt.imshow(im,origin='lower')
    #Let some time to Vrep in order to let him send the first image, otherwise the loop will start with an empty image and will crash
    time.sleep(1)
    while (vrep.simxGetConnectionId(clientID)!=-1): 
        #Get the image of the vision sensor
        res,resolution,image=vrep.simxGetVisionSensorImage(clientID,visionSensorHandle,0,vrep.simx_opmode_buffer)
        #Transform the image so it can be displayed using pyplot
        image_byte_array = array.array('b',image)
        im = Image.frombuffer("RGB", (resolution[0],resolution[1]), image_byte_array, "raw", "RGB", 0, 1)
        #Update the image
        plotimg.set_data(im)
        #Refresh the display
        plt.draw()
        #The mandatory pause ! (or it'll not work)
        plt.pause(pause)
    print('End of Simulation')
 
if __name__ == '__main__':
    vrep.simxFinish(-1)
    clientID=vrep.simxStart('127.0.0.2',19999,True,True,5000,5)
    if clientID!=-1:
        print('Connected to remote API server')
        streamVisionSensor('NAO_vision1',clientID,0.0001)
 
    else:
        print('Connection non successful')
        sys.exit('Could not connect')</pre>
<h3>Execute Complex Commands</h3>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># This example illustrates how to execute complex commands from
# a remote API client. You can also use a similar construct for
# commands that are not directly supported by the remote API.
#
# Load the demo scene 'remoteApiCommandServerExample.ttt' in V-REP, then 
# start the simulation and run this program.
#
# IMPORTANT: for each successful call to simxStart, there
# should be a corresponding call to simxFinish at the end!
#
# When running Python 3.x, add a 'b' prefix to strings, e.g.:
# 'hello world' becomes b'hello world'
 
def getCmdString(id,cnt,data):
    l=12+len(data)
    retData=vrep.simxPackInts([id,cnt,l])
    return retData+data
 
def waitForCmdReply(cnt):
    while True:
        result,string=vrep.simxReadStringStream(clientID,'repliesToRemoteApiClient',vrep.simx_opmode_streaming)
        if result==vrep.simx_return_ok:
            while len(string)!=0:
                headerPacked=string[0:12]
                header=vrep.simxUnpackInts(headerPacked)
                if cnt==header[1]:
                    replyData=''
                    if header[2]&gt;12:
                        replyData=string[12:header[2]]
                    return replyData
                string=string[header[2]:len(string)]
try:
    import vrep
except:
    print ('--------------------------------------------------------------')
    print ('"vrep.py" could not be imported. This means very probably that')
    print ('either "vrep.py" or the remoteApi library could not be found.')
    print ('Make sure both are in the same folder as this file,')
    print ('or appropriately adjust the file "vrep.py"')
    print ('--------------------------------------------------------------')
    print ('')
 
import ctypes
print ('Program started')
vrep.simxFinish(-1) # just in case, close all opened connections
clientID=vrep.simxStart('127.0.0.1',19999,True,True,5000,5) # Connect to V-REP
if clientID!=-1:
    print ('Connected to remote API server')
 
    # Commands are send via the string signal 'commandsFromRemoteApiClient'.
    # Commands are simply appended to that string signal
    # Each command is coded in following way:
    # 1. Command ID (integer, 4 chars)
    # 2. Command counter (integer, 4 chars). Simply start with 0 and increment for each command you send
    # 3. Command length (integer, includes the command ID, the command counter, the command length, and the additional data (i.e. command data))
    # 4. Command data (chars, can be of any length, depending on the command)
    #
    # Replies are coded in a same way. An executed command should reply with the same command counter.
    # 
    # Above simple protocol is just an example: you could use your own protocol! (but it has to be the same on the V-REP side)
 
    # 1. First send a command to display a specific message in a dialog box:
    cmdID=1 # this command id means: 'display a text in a message box'
    cmdCnt=0
    cmdData='Hello world!'
    stringToSend=getCmdString(cmdID,cmdCnt,cmdData)
    raw_ubytes = (ctypes.c_ubyte * len(stringToSend)).from_buffer_copy(stringToSend)
    vrep.simxWriteStringStream(clientID,'commandsFromRemoteApiClient',raw_ubytes,vrep.simx_opmode_oneshot)
    print ('Return string: ',waitForCmdReply(cmdCnt)) # display the reply from V-REP (in this case, just a string)
 
    # 2. Now create a dummy object at coordinate 0.1,0.2,0.3:
    cmdID=2 # this command id means: 'create a dummy at a specific coordinate with a specific name'
    cmdCnt=cmdCnt+1
    cmdData='MyDummyName'+vrep.simxPackFloats([0.1,0.2,0.3])
    stringToSend=getCmdString(cmdID,cmdCnt,cmdData)
    raw_ubytes = (ctypes.c_ubyte * len(stringToSend)).from_buffer_copy(stringToSend)
    vrep.simxWriteStringStream(clientID,'commandsFromRemoteApiClient',raw_ubytes,vrep.simx_opmode_oneshot)
    replyData=waitForCmdReply(cmdCnt)
    print ('Dummy handle: ',vrep.simxUnpackInts(replyData)[0]) # display the reply from V-REP (in this case, the handle of the created dummy)
 
    # Now close the connection to V-REP:   
    vrep.simxFinish(clientID)
else:
    print ('Failed connecting to remote API server')
print ('Program ended')</pre>
<p><span>與上述 Client 端程式配合的 V-rep non-threaded child 程式碼:</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">if (sim_call_type==sim_childscriptcall_initialization) then
   simExtRemoteApiStart(19999)
end
 
if (sim_call_type==sim_childscriptcall_actuation) then
   local commands=simGetStringSignal('commandsFromRemoteApiClient') -- Read commands sent from a remote API client
   if commands then
      simClearStringSignal('commandsFromRemoteApiClient') -- Clear the signal
      -- Process the commands in following loop:
      while #commands&gt;0 do
         local cmdID=simUnpackInts(commands,0,1)[1]
         local cmdCounter=simUnpackInts(commands,1,1)[1]
         local cmdLength=simUnpackInts(commands,2,1)[1]
         local cmdData=''
         if cmdLength&gt;12 then
            cmdData=string.sub(commands,13,13+cmdLength-12)
         end
         commands=string.sub(commands,cmdLength+1) -- this contains the next commands
 
         -- Now process the command, and prepare a reply string signal:
         local reply=''
         if cmdID==1 then
            -- We have to process the command with ID 1, in this example, simply display a dialog box that prints the text stored in cmdData:
            simDisplayDialog('Message from the remote API client',cmdData,sim_dlgstyle_ok,false)
            reply='message was displayed'
         end
         if cmdID==2 then
            -- We have to process the command with ID 2, in this example, create a dummy object at coordinates specified in cmdData:
            local dummyHandle=simCreateDummy(0.05)
            local dummyNameSize=#cmdData-12 -- cmdData should contain the dummy name, plus the x/y/z coordinates
            local position=simUnpackFloats(cmdData,0,0,dummyNameSize)
            if dummyNameSize&gt;0 then
               local errorReportMode=simGetIntegerParameter(sim_intparam_error_report_mode)
               simSetIntegerParameter(sim_intparam_error_report_mode,0) -- temporarily suppress error output (because we are not allowed to have two times the same object name)
               simSetObjectName(dummyHandle,string.sub(cmdData,1,dummyNameSize))
               simSetIntegerParameter(sim_intparam_error_report_mode,errorReportMode) -- restore the original error report mode
            end
            simSetObjectPosition(dummyHandle,-1,position)
            reply=simPackInts({dummyHandle})
         end
         if cmdID==3 then
            -- You can add as many commands as needed
         end
 
         -- Now, before setting up the reply string, append the cmdID, and a reply length:
         local replyLength=12+#reply
         local replyFromOtherCommands=simGetStringSignal('repliesToRemoteApiClient')
         if not replyFromOtherCommands then
            replyFromOtherCommands=''
         end
         local totalReplySignal=replyFromOtherCommands..simPackInts({cmdID})..simPackInts({cmdCounter})..simPackInts({replyLength})..reply
         simSetStringSignal('repliesToRemoteApiClient',totalReplySignal) -- update the reply signal
      end
   end
end</pre>
<p></p>
<h3>xml</h3>
<p><a href="https://forum.coppeliarobotics.com/viewtopic.php?t=9240">https://forum.coppeliarobotics.com/viewtopic.php?t=9240#</a> </p>
<p>simAddOnXML format loader.lua</p>
<pre class="brush:lua;auto-links:false;toolbar:false" contenteditable="false">function sysCall_info()
    return {autoStart=false}
end

function sysCall_init()
    local file=sim.fileDialog(sim.filedlg_type_load,"XML Format","","","Coppelia XML format","simscene.xml")
    if file then
        sim.loadScene(file.."@keepCurrent")
    end
    return {cmd='cleanup'}
end</pre>
<p>4.3.0 rev12</p>
<p>XML mesh</p>
<p>&lt;sceneObject&gt;<br/>    &lt;shape&gt;<br/>     &lt;common&gt;</p>
<p>        &lt;meshproxy&gt;</p>
<p>            &lt;mesh&gt;</p>
<p>            &lt;/mesh&gt;</p>
<p>        &lt;/meshproxy&gt;</p>
<p>    &lt;/common&gt;<br/>    &lt;/shape&gt;<br/>&lt;/sceneObject&gt;</p>
<p></p>
<h1>Projects</h1>
<p><img alt="" height="100" src="/images/mde_catpaw.png" width="100"/></p>
<p><img alt="" height="113" src="/images/nfu_logo_mde.png" width="100"/></p>
<p><a href="/downloads/fem_1d_with_tcc_and_scite.zip">fem_1d_with_tcc_and_scite.zip</a></p>
<p>Rotary Potentiometer:</p>
<p style="padding-left: 30px;"><a href="https://shop.cpu.com.tw/cPath/405">https://shop.cpu.com.tw/cPath/405</a></p>
<p style="padding-left: 30px;"><a href="https://forum.arduino.cc/t/rotary-potentiometer/634703">https://forum.arduino.cc/t/rotary-potentiometer/634703</a></p>
<p style="padding-left: 30px;"><a href="https://www.youtube.com/watch?v=V1txmR8GXzE">https://www.youtube.com/watch?v=V1txmR8GXzE</a></p>
<p>Motion converting:</p>
<p style="padding-left: 30px;"><a href="https://byjus.com/question-answer/how-do-you-convert-rotational-to-translational-motion/">https://byjus.com/question-answer/how-do-you-convert-rotational-to-translational-motion/</a></p>
<p style="padding-left: 30px;"><a href="https://en.tcheb.ru/rotation-into-translation-transformer/">https://en.tcheb.ru/rotation-into-translation-transformer/</a></p>
<hr/>
<p><a href="https://www.amazon.com/-/zh_TW/Studio-RP2040-Arduino%E3%80%81MicroPython-CircuitPython-%E5%85%B7%E6%9C%89%E8%B1%90%E5%AF%8C%E4%BB%8B%E9%9D%A2%E3%80%82/dp/B09NNVNW7M/ref=d_pd_day0_sccl_3_4/133-9461380-2868811?pd_rd_w=E3Xru&amp;content-id=amzn1.sym.8ca997d7-1ea0-4c8f-9e14-a6d756b83e30&amp;pf_rd_p=8ca997d7-1ea0-4c8f-9e14-a6d756b83e30&amp;pf_rd_r=07726WKABSCY0Y3G4KSJ&amp;pd_rd_wg=6jiIm&amp;pd_rd_r=d67fd7e9-8bd5-4311-a863-6abd144535b4&amp;pd_rd_i=B09NNVNW7M&amp;psc=1">single board computer</a></p>
<p><a href="https://www.amazon.com/-/zh_TW/Studio-Raspberry-%E5%BD%88%E6%80%A7%E5%BE%AE%E6%8E%A7%E5%88%B6%E5%99%A8%E4%B8%BB%E6%A9%9F%E6%9D%BF-RP2040-Gamecube/dp/B08TQSDP28/ref=pd_bxgy_img_sccl_1/133-9461380-2868811?pd_rd_w=E4IIR&amp;content-id=amzn1.sym.7f0cf323-50c6-49e3-b3f9-63546bb79c92&amp;pf_rd_p=7f0cf323-50c6-49e3-b3f9-63546bb79c92&amp;pf_rd_r=93Z9N2PFPP5WHJFYMM6J&amp;pd_rd_wg=2lRxl&amp;pd_rd_r=8e574167-6995-41fb-bd00-33c4e9f4519b&amp;pd_rd_i=B08TQSDP28&amp;th=1">Raspberry pi pico</a></p>
<p><a href="https://www.amazon.com/-/zh_TW/ELEGOO-37-%E5%82%B3%E6%84%9F%E5%99%A8%E5%A5%97%E7%B5%84-%E9%81%A9%E7%94%A8%E6%96%BC-Arduino/dp/B01MG49ZQ5/ref=sr_1_11?crid=P9OCOR1S17SC&amp;keywords=accelerator%2Barduino&amp;qid=1669942348&amp;sprefix=accelerator%2Barduino%2B%2Caps%2C282&amp;sr=8-11&amp;th=1">sensors</a></p>
<p><a href="https://www.amazon.com/-/zh_TW/Studio-Arduino-SAMD21n-%E5%85%B7%E6%9C%89%E8%B1%90%E5%AF%8C%E7%9A%84%E7%A9%BF%E6%88%B4%E5%BC%8F%E8%A3%9D%E7%BD%AE%E4%BB%8B%E9%9D%A2-Micro%E7%9A%84%E5%B0%88%E6%A1%88%E8%80%8C%E8%A8%AD%E8%A8%88%E3%80%82/dp/B08745JBRP/ref=sr_1_3?crid=P9OCOR1S17SC&amp;keywords=accelerator%2Barduino&amp;qid=1669942348&amp;sprefix=accelerator%2Barduino%2B%2Caps%2C282&amp;sr=8-3&amp;th=1">micro arduino</a></p>
<p><a href="https://www.amazon.com/-/zh_TW/AstroAI-%E6%95%B8%E4%BD%8D%E7%AE%9D%E4%BD%8D%E8%A8%88%E8%90%AC%E7%94%A8%E8%A1%A8-4000-%E5%80%8B%E8%87%AA%E5%8B%95%E6%B8%AC%E8%B7%9D%E6%94%BE%E5%A4%A7%E5%99%A8%E9%9B%BB%E5%A3%93%E6%B8%AC%E8%A9%A6%E5%84%80-%E9%9B%BB%E5%A3%93%E5%92%8C%E9%9B%BB%E6%B5%81%E3%80%81%E9%9B%BB%E9%98%BB%E3%80%81%E9%9B%BB%E5%AE%B9%E3%80%81%E9%A0%BB%E7%8E%87%E3%80%81%E9%80%A3%E7%BA%8C%E6%80%A7%E3%80%81%E5%AF%A6%E7%B7%9A%E6%B8%AC%E8%A9%A6%E3%80%81NCV/dp/B08MTCMWLB/ref=d_pd_di_sccai_cn_sccl_3_2/133-9461380-2868811?pd_rd_w=Gd12S&amp;content-id=amzn1.sym.e13de93e-5518-4644-8e6b-4ee5f2e0b062&amp;pf_rd_p=e13de93e-5518-4644-8e6b-4ee5f2e0b062&amp;pf_rd_r=VEY5GDQW6KABQTGSAJF9&amp;pd_rd_wg=xX8wo&amp;pd_rd_r=95fd09d5-4fc7-4520-9f86-e98cc8a40f76&amp;pd_rd_i=B08MTCMWLB&amp;psc=1#customerReviews">multimeter</a></p>
<p>Foosball in WebGL: <a href="https://github.com/amingholami/WebGL-Foosball">https://github.com/amingholami/WebGL-Foosball</a></p>
<p><a href="https://www.computervision.zone/courses/pong-game-using-hand-gestures/">https://www.computervision.zone/courses/pong-game-using-hand-gestures/</a></p>
<p><a href="https://github.com/lzane/Fingers-Detection-using-OpenCV-and-Python">https://github.com/lzane/Fingers-Detection-using-OpenCV-and-Python</a></p>
<p><a href="https://userpages.umbc.edu/~nroy/courses/shhasp18/papers/Did%20You%20Take%20a%20Break%20Today%20Detecting%20Playing%20Foosball%20Using%20Your%20Smartwatch.pdf">https://userpages.umbc.edu/~nroy/courses/shhasp18/papers/Did%20You%20Take%20a%20Break%20Today%20Detecting%20Playing%20Foosball%20Using%20Your%20Smartwatch.pdf</a></p>
<p><a href="https://www.irjmets.com/uploadedfiles/paper//issue_7_july_2022/27817/final/fin_irjmets1657266623.pdf">https://www.irjmets.com/uploadedfiles/paper//issue_7_july_2022/27817/final/fin_irjmets1657266623.pdf</a></p>
<p><a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC8321080/pdf/jimaging-06-00073.pdf">https://www.ncbi.nlm.nih.gov/pmc/articles/PMC8321080/pdf/jimaging-06-00073.pdf</a></p>
<p><a href="https://www.mdpi.com/2079-9292/9/12/1986/htm">https://www.mdpi.com/2079-9292/9/12/1986/htm</a></p>
<h2>Mechatronics</h2>
<p><a href="https://www.sciencedirect.com/science/article/pii/S0957415810000310">Modular design of mechatronic systems with function modeling</a></p>
<p><a href="https://secure.effeff.de/de/en/produktkatalog/ikon-t160980-mechatronical-electronical-locking-systems-cliq">https://secure.effeff.de/de/en/produktkatalog/ikon-t160980-mechatronical-electronical-locking-systems-cliq</a></p>
<p><a href="https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&amp;arnumber=6094907">A modular, mechatronic joint design for a flexible access platform for MIS</a></p>
<p>機電整合車門鎖模組:</p>
<p><a href="https://www.vwwatercooled.com.au/forums/f15/diy-how-repair-vw-mk5-door-lock-module-128588.html">https://www.vwwatercooled.com.au/forums/f15/diy-how-repair-vw-mk5-door-lock-module-128588.html</a></p>
<p><a href="https://www.gruvenparts.com/door-locked-explained/">https://www.gruvenparts.com/door-locked-explained/</a></p>
<h2>Reeborg</h2>
<p><a href="https://github.com/aroberge/reeborg">https://github.com/aroberge/reeborg</a></p>
<p><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EfeVrDrYbiRCizhKIMG7xroBSQfx5wHiguRV_tB8GQs9_Q?e=dl9rZW">reeborg.7z</a></p>
<h2>Network</h2>
<p>與網路相關的網站:</p>
<p>ws At mde.nfu.edu.tw</p>
<p>wsmde at github</p>
<p>wsmde at Replit</p>
<p><a href="https://wsmde.github.io">https://wsmde.github.io</a></p>
<p><a href="https://wsmde.repl.co">https://wsmde.repl.co</a></p>
<h3>網路設定</h3>
<h2>Ardunio</h2>
<p><a href="https://docs.wokwi.com/?utm_source=wokwi">Welcome to Wokwi! | Wokwi Docs</a> </p>
<p><a href="https://wokwi.com/projects/340367397829476948">可變電阻與伺服馬達</a></p>
<p>PICSimLab:</p>
<p style="padding-left: 30px;"><a href="https://lcgamboa.github.io/picsimlab_docs/0.8.12/index.html">https://lcgamboa.github.io/picsimlab_docs/0.8.12/index.html</a></p>
<p style="padding-left: 30px;"></p>
<h1>Ext</h1>
<p>這裡主要是放入一些延伸內容</p>
<p>包括電腦輔助設計與計算機程式</p>
<h2>Fusion 360</h2>
<p>除了 <a href="https://onshape.com">https://onshape.com</a>  還有 Fusion 360 也提供免費教育版:</p>
<p><a href="https://www.autodesk.com/education/edu-software/overview">https://www.autodesk.com/education/edu-software/overview</a></p>
<h2>Control</h2>
<p><a href="https://github.com/extall/control-systems-js">https://github.com/extall/control-systems-js</a></p>
<p><a href="https://lcapy.readthedocs.io/en/latest/">https://lcapy.readthedocs.io/en/latest/</a></p>
<h2>Files</h2>
<p>.ssh/config</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">Host github.com
User git
Hostname github.com
ProxyCommand /usr/bin/ncat --proxy p42.cycu.org:3128 --proxy-type http %h %p
</pre>
<p>acp</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">#! /bin/bash
git add .
git commit -m "$1"
git push
</pre>
<p>進入倉儲根目錄後, 以 vi acp 建立, 完成存檔後, 必須再利用 chmod u+x acp, 將 acp 檔案設為 user 可以 execuate.</p>
<p>運用 acp 執行 git add, git commit 與 git push 之前, 必須先處理好 SSH 設定, 也就是利用 ssh-keygen 在 .ssh 目錄下分別建立 id_rsa private key, 以及 id_rsa.pub public key, 而 id_rsa.pub 可以利用 sftp 從 Ubuntu 取至 Windows 環境後, 送進 Github SSH 設定處, 而 .ssh 目錄下還需要建立一個 config 設定檔案, 以便指定 ssh 推送資料時使用 Proxy.</p>
<h2>Linux 指令</h2>
<p>Linux 指令與 Mac BSD 操作系統的指令相同.</p>
<p>常用 Linux 指令:</p>
<p>必須熟悉 vi - 以便能在純 text console 模式下進行檔案編輯</p>
<p>vi acp</p>
<p>表示要利用 vi 編輯 acp 檔案</p>
<p>進入後為指令模式, 可以按下 i 進入 insert 模式, 然後以 i, j, k, l 鍵移動滑鼠游標位置</p>
<p>按下 esc 可以跳出編輯模式, 重新進入指令模式</p>
<p>在指令模式下, 以 a 按鍵 append 字元, 以 o 在下一行插入字元, 以 O 在上一行插入字元.</p>
<p>完成編輯後, 必須進入指令模式, 然後按下 :w, 表示要 write file, 若使用 :q! 表示退出且不存檔, 若使用 :wq, 則存檔案後退出.</p>
<p>cd cmsimde</p>
<p>cd ..</p>
<p>ls -l</p>
<p>pwd</p>
<p>mkdir</p>
<p>chmod u+x acp</p>
<h3>limitation</h3>
<p>Ubuntu itself does not limit connections.</p>
<h2>Brython2</h2>
<p><a href="https://en.wikipedia.org/wiki/Python_(programming_language)">https://en.wikipedia.org/wiki/Python_(programming_language)</a></p>
<h4>Examples:</h4>
<p style="padding-left: 30px;"><a href="https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d">https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d</a></p>
<p style="padding-left: 30px;"><a href="https://www.geeksforgeeks.org/python-programming-examples/">https://www.geeksforgeeks.org/python-programming-examples/</a></p>
<p style="padding-left: 30px;"><a href="https://www.programiz.com/python-programming/examples">https://www.programiz.com/python-programming/examples</a></p>
<p style="padding-left: 30px;"><a href="https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/">https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/</a></p>
<h4>Python Tutorial:</h4>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/">https://docs.python.org/3/tutorial/</a></p>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/introduction.html">An informal introduction to Python</a></p>
<h4>Indentation</h4>
<h4>Variables</h4>
<h4>Comments</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#numbers">Numbers</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#strings">Strings</a></h4>
<h4>print</h4>
<p><a href="https://docs.python.org/3/tutorial/controlflow.html">Python control flow tools</a></p>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements">for</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#if-statements">if</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#the-range-function">range</a></h4>
<h4>open</h4>
<h4>read</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#lists">lists</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences">tuples</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries">dictionaries</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions">functions</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/errors.html#exceptions">try ... except</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops">break</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#pass-statements">pass</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/classes.html?highlight=classes">classes</a></h4>
<p>這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 (<a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件).</p>
<p><a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用.</p>
<p>亦即將所有對應的 html 也使用 Brython 產生, 然後寫為 <a href="https://docs.python.org/3/tutorial/classes.html">class</a> 後, 在範例導入時透過 <a href="https://docs.python.org/3/tutorial/classes.html#instance-objects">instance</a> 引用.</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
&lt;/script&gt;</pre>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<p>將 iterable 與 iterator <a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438">相關說明</a>, 利用 Brython 與 Ace Editor 整理在這個頁面.</p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>